Search.setIndex({"docnames": ["API", "api/iqm.pulse", "api/iqm.pulse.base_utils", "api/iqm.pulse.base_utils.merge_dicts", "api/iqm.pulse.builder", "api/iqm.pulse.builder.CircuitOperation", "api/iqm.pulse.builder.ScheduleBuilder", "api/iqm.pulse.builder.build_quantum_ops", "api/iqm.pulse.builder.load_config", "api/iqm.pulse.builder.validate_quantum_circuit", "api/iqm.pulse.circuit_operations", "api/iqm.pulse.circuit_operations.CircuitOperationList", "api/iqm.pulse.circuit_operations.get_unitary_from_circuit", "api/iqm.pulse.circuit_operations.get_unitary_from_op", "api/iqm.pulse.circuit_operations.reorder", "api/iqm.pulse.circuit_operations.reshape_unitary", "api/iqm.pulse.gate_implementation", "api/iqm.pulse.gate_implementation.CompositeCache", "api/iqm.pulse.gate_implementation.CompositeGate", "api/iqm.pulse.gate_implementation.CustomIQWaveforms", "api/iqm.pulse.gate_implementation.GateImplementation", "api/iqm.pulse.gate_implementation.Locus", "api/iqm.pulse.gate_implementation.NestedParams", "api/iqm.pulse.gate_implementation.OCalibrationData", "api/iqm.pulse.gate_implementation.OICalibrationData", "api/iqm.pulse.gate_implementation.OILCalibrationData", "api/iqm.pulse.gate_implementation.OpCalibrationDataTree", "api/iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SinglePulseGate", "api/iqm.pulse.gate_implementation.get_waveform_parameters", "api/iqm.pulse.gates", "api/iqm.pulse.gates.barrier", "api/iqm.pulse.gates.barrier.Barrier", "api/iqm.pulse.gates.conditional", "api/iqm.pulse.gates.conditional.CCPRX_Composite", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian", "api/iqm.pulse.gates.cz", "api/iqm.pulse.gates.cz.CZ_CRF", "api/iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF", "api/iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare", "api/iqm.pulse.gates.cz.CZ_Slepian", "api/iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF", "api/iqm.pulse.gates.cz.CZ_Slepian_CRF", "api/iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare", "api/iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate", "api/iqm.pulse.gates.cz.FluxPulseGate", "api/iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF", "api/iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF", "api/iqm.pulse.gates.default_gates", "api/iqm.pulse.gates.delay", "api/iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS", "api/iqm.pulse.gates.delay.Delay", "api/iqm.pulse.gates.enums", "api/iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES", "api/iqm.pulse.gates.enums.TwoQubitGate", "api/iqm.pulse.gates.enums.XYGATE_UNITARIES", "api/iqm.pulse.gates.enums.XYGate", "api/iqm.pulse.gates.expose_implementation", "api/iqm.pulse.gates.flux_multiplexer", "api/iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear", "api/iqm.pulse.gates.flux_multiplexer.TOLERANCE", "api/iqm.pulse.gates.get_implementation_class", "api/iqm.pulse.gates.measure", "api/iqm.pulse.gates.measure.Measure_Constant", "api/iqm.pulse.gates.measure.Measure_Constant_Qnd", "api/iqm.pulse.gates.measure.Measure_CustomWaveforms", "api/iqm.pulse.gates.measure.ProbePulse_CustomWaveforms", "api/iqm.pulse.gates.move", "api/iqm.pulse.gates.move.MOVE_CRF_CRF", "api/iqm.pulse.gates.move.MOVE_CustomWaveforms", "api/iqm.pulse.gates.move.MOVE_TGSS_CRF", "api/iqm.pulse.gates.move.MoveMarker", "api/iqm.pulse.gates.move.apply_move_gate_phase_corrections", "api/iqm.pulse.gates.move.validate_move_instructions", "api/iqm.pulse.gates.prx", "api/iqm.pulse.gates.prx.ABC_Constant_smooth", "api/iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall", "api/iqm.pulse.gates.prx.PRX_CustomWaveforms", "api/iqm.pulse.gates.prx.PRX_CustomWaveformsSX", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX", "api/iqm.pulse.gates.prx.PRX_DRAGGaussian", "api/iqm.pulse.gates.prx.PRX_DRAGGaussianSX", "api/iqm.pulse.gates.prx.PRX_GateImplementation", "api/iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation", "api/iqm.pulse.gates.prx.get_unitary_prx", "api/iqm.pulse.gates.register_implementation", "api/iqm.pulse.gates.reset", "api/iqm.pulse.gates.reset.RESET_FEEDBACK_KEY", "api/iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY", "api/iqm.pulse.gates.reset.Reset_Conditional", "api/iqm.pulse.gates.reset.Reset_Wait", "api/iqm.pulse.gates.rz", "api/iqm.pulse.gates.rz.RZ_ACStarkShift", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant", "api/iqm.pulse.gates.rz.RZ_Virtual", "api/iqm.pulse.gates.rz.get_unitary_rz", "api/iqm.pulse.gates.sx", "api/iqm.pulse.gates.sx.SXGate", "api/iqm.pulse.gates.u", "api/iqm.pulse.gates.u.UGate", "api/iqm.pulse.gates.u.get_unitary_u", "api/iqm.pulse.playlist", "api/iqm.pulse.playlist.channel", "api/iqm.pulse.playlist.channel.ChannelConfiguration", "api/iqm.pulse.playlist.channel.ChannelDescription", "api/iqm.pulse.playlist.channel.ChannelProperties", "api/iqm.pulse.playlist.channel.IQChannelConfig", "api/iqm.pulse.playlist.channel.ProbeChannelProperties", "api/iqm.pulse.playlist.channel.RealChannelConfig", "api/iqm.pulse.playlist.channel.get_channel_properties", "api/iqm.pulse.playlist.channel.get_channel_properties_from_station_settings", "api/iqm.pulse.playlist.channel.round_duration_to_granularity_samples", "api/iqm.pulse.playlist.instructions", "api/iqm.pulse.playlist.instructions.AcquisitionMethod", "api/iqm.pulse.playlist.instructions.Block", "api/iqm.pulse.playlist.instructions.ComplexIntegration", "api/iqm.pulse.playlist.instructions.ConditionalInstruction", "api/iqm.pulse.playlist.instructions.FluxPulse", "api/iqm.pulse.playlist.instructions.IQPulse", "api/iqm.pulse.playlist.instructions.Instruction", "api/iqm.pulse.playlist.instructions.MultiplexedIQPulse", "api/iqm.pulse.playlist.instructions.ReadoutTrigger", "api/iqm.pulse.playlist.instructions.RealPulse", "api/iqm.pulse.playlist.instructions.ThresholdStateDiscrimination", "api/iqm.pulse.playlist.instructions.TimeTrace", "api/iqm.pulse.playlist.instructions.VirtualRZ", "api/iqm.pulse.playlist.instructions.Wait", "api/iqm.pulse.playlist.playlist", "api/iqm.pulse.playlist.schedule", "api/iqm.pulse.playlist.schedule.Nothing", "api/iqm.pulse.playlist.schedule.Schedule", "api/iqm.pulse.playlist.schedule.Segment", "api/iqm.pulse.playlist.schedule.TOLERANCE", "api/iqm.pulse.playlist.visualisation", "api/iqm.pulse.playlist.visualisation.base", "api/iqm.pulse.playlist.visualisation.base.inspect_playlist", "api/iqm.pulse.playlist.waveforms", "api/iqm.pulse.playlist.waveforms.Chirp", "api/iqm.pulse.playlist.waveforms.ChirpImag", "api/iqm.pulse.playlist.waveforms.Cosine", "api/iqm.pulse.playlist.waveforms.CosineFall", "api/iqm.pulse.playlist.waveforms.CosineRise", "api/iqm.pulse.playlist.waveforms.CosineRiseFallDerivative", "api/iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall", "api/iqm.pulse.playlist.waveforms.Slepian", "api/iqm.pulse.quantum_ops", "api/iqm.pulse.quantum_ops.QuantumOp", "api/iqm.pulse.quantum_ops.QuantumOpTable", "api/iqm.pulse.quantum_ops.validate_locus_calibration", "api/iqm.pulse.quantum_ops.validate_op_calibration", "api/iqm.pulse.scheduler", "api/iqm.pulse.scheduler.BLOCKING", "api/iqm.pulse.scheduler.NONSOLID", "api/iqm.pulse.scheduler.SegmentPointer", "api/iqm.pulse.scheduler.extend_hard_boundary", "api/iqm.pulse.scheduler.extend_hard_boundary_in_seconds", "api/iqm.pulse.scheduler.extend_schedule", "api/iqm.pulse.scheduler.extend_schedule_new", "api/iqm.pulse.timebox", "api/iqm.pulse.timebox.MultiplexedProbeTimeBox", "api/iqm.pulse.timebox.SchedulingAlgorithm", "api/iqm.pulse.timebox.SchedulingStrategy", "api/iqm.pulse.timebox.TimeBox", "api/iqm.pulse.utils", "api/iqm.pulse.utils.load_yaml", "api/iqm.pulse.utils.map_waveform_param_types", "api/iqm.pulse.utils.normalize_angle", "api/iqm.pulse.utils.phase_transformation", "api/iqm.pulse.validation", "api/iqm.pulse.validation.AWGScheduleValidationData", "api/iqm.pulse.validation.AWGScheduleValidationError", "api/iqm.pulse.validation.InvalidInstructionError", "api/iqm.pulse.validation.PlaylistValidationError", "api/iqm.pulse.validation.validate_awg_and_schedule_compatibility", "api/iqm.pulse.validation.validate_channel", "api/iqm.pulse.validation.validate_instruction_and_wf_length", "api/iqm.pulse.validation.validate_playlist_compatibility", "changelog", "concepts", "custom_gates", "index", "license", "pulse_timing", "references", "using_builder"], "filenames": ["API.rst", "api/iqm.pulse.rst", "api/iqm.pulse.base_utils.rst", "api/iqm.pulse.base_utils.merge_dicts.rst", "api/iqm.pulse.builder.rst", "api/iqm.pulse.builder.CircuitOperation.rst", "api/iqm.pulse.builder.ScheduleBuilder.rst", "api/iqm.pulse.builder.build_quantum_ops.rst", "api/iqm.pulse.builder.load_config.rst", "api/iqm.pulse.builder.validate_quantum_circuit.rst", "api/iqm.pulse.circuit_operations.rst", "api/iqm.pulse.circuit_operations.CircuitOperationList.rst", "api/iqm.pulse.circuit_operations.get_unitary_from_circuit.rst", "api/iqm.pulse.circuit_operations.get_unitary_from_op.rst", "api/iqm.pulse.circuit_operations.reorder.rst", "api/iqm.pulse.circuit_operations.reshape_unitary.rst", "api/iqm.pulse.gate_implementation.rst", "api/iqm.pulse.gate_implementation.CompositeCache.rst", "api/iqm.pulse.gate_implementation.CompositeGate.rst", "api/iqm.pulse.gate_implementation.CustomIQWaveforms.rst", "api/iqm.pulse.gate_implementation.GateImplementation.rst", "api/iqm.pulse.gate_implementation.Locus.rst", "api/iqm.pulse.gate_implementation.NestedParams.rst", "api/iqm.pulse.gate_implementation.OCalibrationData.rst", "api/iqm.pulse.gate_implementation.OICalibrationData.rst", "api/iqm.pulse.gate_implementation.OILCalibrationData.rst", "api/iqm.pulse.gate_implementation.OpCalibrationDataTree.rst", "api/iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SinglePulseGate.rst", "api/iqm.pulse.gate_implementation.get_waveform_parameters.rst", "api/iqm.pulse.gates.rst", "api/iqm.pulse.gates.barrier.rst", "api/iqm.pulse.gates.barrier.Barrier.rst", "api/iqm.pulse.gates.conditional.rst", "api/iqm.pulse.gates.conditional.CCPRX_Composite.rst", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall.rst", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian.rst", "api/iqm.pulse.gates.cz.rst", "api/iqm.pulse.gates.cz.CZ_CRF.rst", "api/iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.rst", "api/iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.rst", "api/iqm.pulse.gates.cz.CZ_Slepian.rst", "api/iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.rst", "api/iqm.pulse.gates.cz.CZ_Slepian_CRF.rst", "api/iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.rst", "api/iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.rst", "api/iqm.pulse.gates.cz.FluxPulseGate.rst", "api/iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.rst", "api/iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.rst", "api/iqm.pulse.gates.default_gates.rst", "api/iqm.pulse.gates.delay.rst", "api/iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS.rst", "api/iqm.pulse.gates.delay.Delay.rst", "api/iqm.pulse.gates.enums.rst", "api/iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES.rst", "api/iqm.pulse.gates.enums.TwoQubitGate.rst", "api/iqm.pulse.gates.enums.XYGATE_UNITARIES.rst", "api/iqm.pulse.gates.enums.XYGate.rst", "api/iqm.pulse.gates.expose_implementation.rst", "api/iqm.pulse.gates.flux_multiplexer.rst", "api/iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear.rst", "api/iqm.pulse.gates.flux_multiplexer.TOLERANCE.rst", "api/iqm.pulse.gates.get_implementation_class.rst", "api/iqm.pulse.gates.measure.rst", "api/iqm.pulse.gates.measure.Measure_Constant.rst", "api/iqm.pulse.gates.measure.Measure_Constant_Qnd.rst", "api/iqm.pulse.gates.measure.Measure_CustomWaveforms.rst", "api/iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.rst", "api/iqm.pulse.gates.move.rst", "api/iqm.pulse.gates.move.MOVE_CRF_CRF.rst", "api/iqm.pulse.gates.move.MOVE_CustomWaveforms.rst", "api/iqm.pulse.gates.move.MOVE_TGSS_CRF.rst", "api/iqm.pulse.gates.move.MoveMarker.rst", "api/iqm.pulse.gates.move.apply_move_gate_phase_corrections.rst", "api/iqm.pulse.gates.move.validate_move_instructions.rst", "api/iqm.pulse.gates.prx.rst", "api/iqm.pulse.gates.prx.ABC_Constant_smooth.rst", "api/iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.rst", "api/iqm.pulse.gates.prx.PRX_CustomWaveforms.rst", "api/iqm.pulse.gates.prx.PRX_CustomWaveformsSX.rst", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.rst", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.rst", "api/iqm.pulse.gates.prx.PRX_DRAGGaussian.rst", "api/iqm.pulse.gates.prx.PRX_DRAGGaussianSX.rst", "api/iqm.pulse.gates.prx.PRX_GateImplementation.rst", "api/iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation.rst", "api/iqm.pulse.gates.prx.get_unitary_prx.rst", "api/iqm.pulse.gates.register_implementation.rst", "api/iqm.pulse.gates.reset.rst", "api/iqm.pulse.gates.reset.RESET_FEEDBACK_KEY.rst", "api/iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY.rst", "api/iqm.pulse.gates.reset.Reset_Conditional.rst", "api/iqm.pulse.gates.reset.Reset_Wait.rst", "api/iqm.pulse.gates.rz.rst", "api/iqm.pulse.gates.rz.RZ_ACStarkShift.rst", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.rst", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.rst", "api/iqm.pulse.gates.rz.RZ_Virtual.rst", "api/iqm.pulse.gates.rz.get_unitary_rz.rst", "api/iqm.pulse.gates.sx.rst", "api/iqm.pulse.gates.sx.SXGate.rst", "api/iqm.pulse.gates.u.rst", "api/iqm.pulse.gates.u.UGate.rst", "api/iqm.pulse.gates.u.get_unitary_u.rst", "api/iqm.pulse.playlist.rst", "api/iqm.pulse.playlist.channel.rst", "api/iqm.pulse.playlist.channel.ChannelConfiguration.rst", "api/iqm.pulse.playlist.channel.ChannelDescription.rst", "api/iqm.pulse.playlist.channel.ChannelProperties.rst", "api/iqm.pulse.playlist.channel.IQChannelConfig.rst", "api/iqm.pulse.playlist.channel.ProbeChannelProperties.rst", "api/iqm.pulse.playlist.channel.RealChannelConfig.rst", "api/iqm.pulse.playlist.channel.get_channel_properties.rst", "api/iqm.pulse.playlist.channel.get_channel_properties_from_station_settings.rst", "api/iqm.pulse.playlist.channel.round_duration_to_granularity_samples.rst", "api/iqm.pulse.playlist.instructions.rst", "api/iqm.pulse.playlist.instructions.AcquisitionMethod.rst", "api/iqm.pulse.playlist.instructions.Block.rst", "api/iqm.pulse.playlist.instructions.ComplexIntegration.rst", "api/iqm.pulse.playlist.instructions.ConditionalInstruction.rst", "api/iqm.pulse.playlist.instructions.FluxPulse.rst", "api/iqm.pulse.playlist.instructions.IQPulse.rst", "api/iqm.pulse.playlist.instructions.Instruction.rst", "api/iqm.pulse.playlist.instructions.MultiplexedIQPulse.rst", "api/iqm.pulse.playlist.instructions.ReadoutTrigger.rst", "api/iqm.pulse.playlist.instructions.RealPulse.rst", "api/iqm.pulse.playlist.instructions.ThresholdStateDiscrimination.rst", "api/iqm.pulse.playlist.instructions.TimeTrace.rst", "api/iqm.pulse.playlist.instructions.VirtualRZ.rst", "api/iqm.pulse.playlist.instructions.Wait.rst", "api/iqm.pulse.playlist.playlist.rst", "api/iqm.pulse.playlist.schedule.rst", "api/iqm.pulse.playlist.schedule.Nothing.rst", "api/iqm.pulse.playlist.schedule.Schedule.rst", "api/iqm.pulse.playlist.schedule.Segment.rst", "api/iqm.pulse.playlist.schedule.TOLERANCE.rst", "api/iqm.pulse.playlist.visualisation.rst", "api/iqm.pulse.playlist.visualisation.base.rst", "api/iqm.pulse.playlist.visualisation.base.inspect_playlist.rst", "api/iqm.pulse.playlist.waveforms.rst", "api/iqm.pulse.playlist.waveforms.Chirp.rst", "api/iqm.pulse.playlist.waveforms.ChirpImag.rst", "api/iqm.pulse.playlist.waveforms.Cosine.rst", "api/iqm.pulse.playlist.waveforms.CosineFall.rst", "api/iqm.pulse.playlist.waveforms.CosineRise.rst", "api/iqm.pulse.playlist.waveforms.CosineRiseFallDerivative.rst", "api/iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall.rst", "api/iqm.pulse.playlist.waveforms.Slepian.rst", "api/iqm.pulse.quantum_ops.rst", "api/iqm.pulse.quantum_ops.QuantumOp.rst", "api/iqm.pulse.quantum_ops.QuantumOpTable.rst", "api/iqm.pulse.quantum_ops.validate_locus_calibration.rst", "api/iqm.pulse.quantum_ops.validate_op_calibration.rst", "api/iqm.pulse.scheduler.rst", "api/iqm.pulse.scheduler.BLOCKING.rst", "api/iqm.pulse.scheduler.NONSOLID.rst", "api/iqm.pulse.scheduler.SegmentPointer.rst", "api/iqm.pulse.scheduler.extend_hard_boundary.rst", "api/iqm.pulse.scheduler.extend_hard_boundary_in_seconds.rst", "api/iqm.pulse.scheduler.extend_schedule.rst", "api/iqm.pulse.scheduler.extend_schedule_new.rst", "api/iqm.pulse.timebox.rst", "api/iqm.pulse.timebox.MultiplexedProbeTimeBox.rst", "api/iqm.pulse.timebox.SchedulingAlgorithm.rst", "api/iqm.pulse.timebox.SchedulingStrategy.rst", "api/iqm.pulse.timebox.TimeBox.rst", "api/iqm.pulse.utils.rst", "api/iqm.pulse.utils.load_yaml.rst", "api/iqm.pulse.utils.map_waveform_param_types.rst", "api/iqm.pulse.utils.normalize_angle.rst", "api/iqm.pulse.utils.phase_transformation.rst", "api/iqm.pulse.validation.rst", "api/iqm.pulse.validation.AWGScheduleValidationData.rst", "api/iqm.pulse.validation.AWGScheduleValidationError.rst", "api/iqm.pulse.validation.InvalidInstructionError.rst", "api/iqm.pulse.validation.PlaylistValidationError.rst", "api/iqm.pulse.validation.validate_awg_and_schedule_compatibility.rst", "api/iqm.pulse.validation.validate_channel.rst", "api/iqm.pulse.validation.validate_instruction_and_wf_length.rst", "api/iqm.pulse.validation.validate_playlist_compatibility.rst", "changelog.rst", "concepts.rst", "custom_gates.rst", "index.rst", "license.rst", "pulse_timing.rst", "references.rst", "using_builder.rst"], "titles": ["API Reference", "pulse", "base_utils", "iqm.pulse.base_utils.merge_dicts", "builder", "CircuitOperation", "ScheduleBuilder", "iqm.pulse.builder.build_quantum_ops", "iqm.pulse.builder.load_config", "iqm.pulse.builder.validate_quantum_circuit", "circuit_operations", "CircuitOperationList", "iqm.pulse.circuit_operations.get_unitary_from_circuit", "iqm.pulse.circuit_operations.get_unitary_from_op", "iqm.pulse.circuit_operations.reorder", "iqm.pulse.circuit_operations.reshape_unitary", "gate_implementation", "CompositeCache", "CompositeGate", "CustomIQWaveforms", "GateImplementation", "iqm.pulse.gate_implementation.Locus", "iqm.pulse.gate_implementation.NestedParams", "iqm.pulse.gate_implementation.OCalibrationData", "iqm.pulse.gate_implementation.OICalibrationData", "iqm.pulse.gate_implementation.OILCalibrationData", "iqm.pulse.gate_implementation.OpCalibrationDataTree", "iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING", "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING", "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING", "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING", "SinglePulseGate", "iqm.pulse.gate_implementation.get_waveform_parameters", "gates", "barrier", "Barrier", "conditional", "CCPRX_Composite", "CCPRX_Composite_DRAGCosineRiseFall", "CCPRX_Composite_DRAGGaussian", "cz", "CZ_CRF", "CZ_CRF_ACStarkCRF", "CZ_GaussianSmoothedSquare", "CZ_Slepian", "CZ_Slepian_ACStarkCRF", "CZ_Slepian_CRF", "CZ_TruncatedGaussianSmoothedSquare", "CouplerFluxPulseQubitACStarkPulseGate", "FluxPulseGate", "FluxPulseGate_CRF_CRF", "FluxPulseGate_TGSS_CRF", "default_gates", "delay", "iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS", "Delay", "enums", "iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES", "TwoQubitGate", "iqm.pulse.gates.enums.XYGATE_UNITARIES", "XYGate", "iqm.pulse.gates.expose_implementation", "flux_multiplexer", "FluxMultiplexer_SampleLinear", "iqm.pulse.gates.flux_multiplexer.TOLERANCE", "iqm.pulse.gates.get_implementation_class", "measure", "Measure_Constant", "Measure_Constant_Qnd", "Measure_CustomWaveforms", "ProbePulse_CustomWaveforms", "move", "MOVE_CRF_CRF", "MOVE_CustomWaveforms", "MOVE_TGSS_CRF", "MoveMarker", "iqm.pulse.gates.move.apply_move_gate_phase_corrections", "iqm.pulse.gates.move.validate_move_instructions", "prx", "ABC_Constant_smooth", "Constant_PRX_with_smooth_rise_fall", "PRX_CustomWaveforms", "PRX_CustomWaveformsSX", "PRX_DRAGCosineRiseFall", "PRX_DRAGCosineRiseFallSX", "PRX_DRAGGaussian", "PRX_DRAGGaussianSX", "PRX_GateImplementation", "PRX_SinglePulse_GateImplementation", "iqm.pulse.gates.prx.get_unitary_prx", "iqm.pulse.gates.register_implementation", "reset", "iqm.pulse.gates.reset.RESET_FEEDBACK_KEY", "iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY", "Reset_Conditional", "Reset_Wait", "rz", "RZ_ACStarkShift", "RZ_ACStarkShift_CosineRiseFall", "RZ_ACStarkShift_smoothConstant", "RZ_Virtual", "iqm.pulse.gates.rz.get_unitary_rz", "sx", "SXGate", "u", "UGate", "iqm.pulse.gates.u.get_unitary_u", "playlist", "channel", "ChannelConfiguration", "ChannelDescription", "ChannelProperties", "IQChannelConfig", "ProbeChannelProperties", "RealChannelConfig", "iqm.pulse.playlist.channel.get_channel_properties", "iqm.pulse.playlist.channel.get_channel_properties_from_station_settings", "iqm.pulse.playlist.channel.round_duration_to_granularity_samples", "instructions", "AcquisitionMethod", "Block", "ComplexIntegration", "ConditionalInstruction", "FluxPulse", "IQPulse", "Instruction", "MultiplexedIQPulse", "ReadoutTrigger", "RealPulse", "ThresholdStateDiscrimination", "TimeTrace", "VirtualRZ", "Wait", "playlist", "schedule", "Nothing", "Schedule", "Segment", "iqm.pulse.playlist.schedule.TOLERANCE", "visualisation", "base", "iqm.pulse.playlist.visualisation.base.inspect_playlist", "waveforms", "Chirp", "ChirpImag", "Cosine", "CosineFall", "CosineRise", "CosineRiseFallDerivative", "ModulatedCosineRiseFall", "Slepian", "quantum_ops", "QuantumOp", "iqm.pulse.quantum_ops.QuantumOpTable", "iqm.pulse.quantum_ops.validate_locus_calibration", "iqm.pulse.quantum_ops.validate_op_calibration", "scheduler", "iqm.pulse.scheduler.BLOCKING", "iqm.pulse.scheduler.NONSOLID", "SegmentPointer", "iqm.pulse.scheduler.extend_hard_boundary", "iqm.pulse.scheduler.extend_hard_boundary_in_seconds", "iqm.pulse.scheduler.extend_schedule", "iqm.pulse.scheduler.extend_schedule_new", "timebox", "MultiplexedProbeTimeBox", "SchedulingAlgorithm", "SchedulingStrategy", "TimeBox", "utils", "iqm.pulse.utils.load_yaml", "iqm.pulse.utils.map_waveform_param_types", "iqm.pulse.utils.normalize_angle", "iqm.pulse.utils.phase_transformation", "validation", "AWGScheduleValidationData", "iqm.pulse.validation.AWGScheduleValidationError", "iqm.pulse.validation.InvalidInstructionError", "iqm.pulse.validation.PlaylistValidationError", "iqm.pulse.validation.validate_awg_and_schedule_compatibility", "iqm.pulse.validation.validate_channel", "iqm.pulse.validation.validate_instruction_and_wf_length", "iqm.pulse.validation.validate_playlist_compatibility", "Changelog", "Concepts and Classes", "Custom gate implementations", "IQM Pulse", "License", "Pulse timing", "References", "Using ScheduleBuilder"], "terms": {"control": [1, 6, 16, 29, 36, 37, 40, 42, 45, 52, 53, 55, 58, 69, 107, 108, 110, 111, 116, 117, 118, 120, 125, 134, 135, 136, 162, 163, 168, 175, 179, 182, 183, 184, 185, 187, 188, 189, 190], "gate": [1, 6, 11, 17, 18, 19, 20, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 150, 152, 154, 173, 183, 184, 186, 188, 189, 190], "instruct": [1, 4, 6, 16, 20, 31, 32, 35, 49, 53, 55, 69, 70, 71, 73, 75, 76, 77, 79, 80, 87, 88, 95, 99, 100, 107, 110, 111, 113, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 152, 156, 157, 158, 159, 161, 162, 163, 164, 165, 168, 173, 174, 177, 179, 181, 182, 183, 186, 188, 190], "schedul": [1, 4, 6, 16, 20, 31, 35, 48, 49, 55, 69, 70, 75, 76, 77, 79, 80, 82, 87, 88, 95, 97, 99, 100, 107, 111, 120, 132, 133, 135, 137, 152, 159, 164, 165, 166, 167, 168, 174, 176, 183, 185, 186, 188], "quantum": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 20, 21, 23, 24, 25, 26, 31, 33, 34, 35, 48, 49, 52, 53, 55, 68, 69, 70, 73, 77, 87, 90, 91, 94, 95, 97, 100, 107, 125, 151, 152, 153, 155, 173, 183, 184, 185, 186, 190], "comput": [1, 5, 6, 16, 31, 69, 73, 94, 104, 107, 111, 123, 125, 136, 137, 152, 156, 160, 161, 168, 173, 183, 184, 185, 186, 187, 190], "full": [1, 2, 4, 10, 16, 33, 34, 36, 40, 52, 53, 56, 62, 66, 71, 78, 91, 96, 102, 104, 107, 108, 118, 133, 134, 139, 140, 142, 149, 151, 156, 164, 169, 174, 183, 185], "path": [1, 2, 3, 4, 8, 10, 16, 20, 33, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 56, 62, 66, 67, 68, 69, 71, 72, 74, 78, 83, 84, 85, 86, 91, 96, 98, 102, 104, 107, 108, 118, 133, 134, 136, 139, 140, 142, 151, 156, 164, 168, 169, 170, 174, 183], "iqm": [1, 2, 4, 5, 6, 10, 11, 16, 17, 18, 19, 20, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 159, 164, 165, 166, 167, 168, 169, 174, 175, 183, 184, 185, 187, 188, 190], "subpackag": [1, 33, 107, 139], "modul": [1, 2, 5, 6, 11, 16, 17, 18, 19, 20, 31, 33, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 58, 60, 62, 63, 67, 68, 69, 70, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 94, 95, 97, 98, 99, 100, 103, 105, 107, 109, 110, 111, 112, 113, 114, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 159, 165, 166, 167, 168, 175, 184, 185, 186], "base": [2, 5, 6, 11, 17, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 58, 60, 63, 67, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 94, 95, 97, 98, 99, 100, 103, 105, 109, 110, 111, 112, 113, 114, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 143, 144, 145, 146, 147, 148, 149, 150, 152, 159, 165, 166, 167, 168, 175, 183, 187, 188], "util": [2, 6, 18, 20, 183, 185], "function": [2, 4, 6, 7, 10, 13, 16, 20, 31, 33, 35, 48, 49, 71, 73, 78, 88, 94, 95, 96, 97, 104, 108, 115, 116, 140, 150, 151, 152, 156, 168, 169, 174, 183, 185], "depend": [2, 19, 20, 31, 35, 48, 49, 55, 67, 68, 69, 70, 81, 82, 83, 84, 85, 86, 95, 97, 100, 122, 183, 185], "other": [2, 6, 11, 15, 17, 18, 20, 55, 69, 73, 88, 94, 95, 103, 105, 135, 145, 152, 160, 161, 166, 168, 179, 182, 183, 184, 185, 187, 188, 190], "puls": [2, 4, 5, 6, 10, 11, 16, 17, 18, 19, 20, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 159, 164, 165, 166, 167, 168, 169, 174, 175, 183, 184, 185, 190], "A": [3, 6, 11, 14, 37, 69, 120, 143, 152, 156, 162, 163, 165, 168, 171, 183, 184, 185, 186, 187, 188, 189, 190], "b": [3, 14, 55, 69, 156, 162, 163, 168, 187], "merge_non": 3, "true": [3, 6, 9, 11, 19, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 61, 67, 68, 69, 70, 72, 73, 74, 76, 77, 80, 81, 82, 83, 84, 85, 86, 90, 98, 99, 111, 113, 136, 152, 183, 190], "merg": [3, 6, 18, 160], "two": [3, 6, 11, 37, 40, 42, 45, 49, 55, 56, 58, 63, 69, 71, 73, 82, 152, 160, 168, 183, 184, 185, 188, 190], "dictionari": [3, 58, 185], "recurs": [3, 6, 168, 184, 190], "leav": 3, "origin": [3, 11, 15, 20, 136, 137, 183, 187], "unchang": [3, 136], "paramet": [3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 31, 32, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 61, 63, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 97, 98, 99, 100, 101, 103, 105, 106, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 159, 160, 161, 162, 163, 165, 168, 170, 171, 172, 173, 175, 179, 180, 181, 182, 183, 184, 185, 190], "dict": [3, 5, 6, 7, 8, 9, 12, 13, 18, 19, 20, 22, 23, 24, 25, 26, 32, 38, 39, 49, 63, 69, 70, 73, 81, 82, 90, 95, 100, 115, 136, 143, 145, 149, 150, 152, 153, 160, 161, 162, 163, 165, 168, 170, 182, 183, 185], "anoth": [3, 6, 35, 49, 73, 75, 106, 152, 162, 163, 183, 185], "bool": [3, 6, 9, 11, 18, 19, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 61, 67, 68, 69, 70, 72, 73, 74, 76, 77, 80, 81, 82, 83, 84, 85, 86, 90, 98, 99, 111, 113, 117, 136, 152, 159, 160, 161, 183], "whether": [3, 6, 13, 20, 77, 90, 111, 117, 160, 161, 185, 187, 190], "also": [3, 6, 11, 17, 18, 19, 20, 31, 35, 48, 49, 55, 73, 76, 83, 84, 88, 94, 95, 97, 103, 105, 110, 136, 152, 156, 160, 161, 163, 168, 173, 183, 185, 187, 188], "none": [3, 5, 6, 8, 9, 11, 12, 17, 18, 20, 23, 24, 26, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 58, 60, 61, 63, 65, 67, 68, 69, 70, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 90, 95, 98, 99, 125, 136, 137, 152, 154, 155, 159, 160, 161, 162, 163, 165, 166, 167, 168, 180, 182, 183, 185], "empti": [3, 6, 11, 18, 63, 69, 70, 129, 136, 152, 183, 185], "size": [3, 13, 185], "valu": [3, 6, 11, 13, 18, 20, 41, 42, 43, 44, 45, 46, 47, 50, 51, 58, 60, 63, 64, 67, 68, 69, 72, 74, 83, 84, 85, 86, 98, 120, 124, 126, 128, 129, 132, 143, 148, 155, 166, 167, 183, 184, 185, 190], "from": [3, 6, 7, 8, 11, 13, 17, 18, 19, 20, 37, 38, 39, 48, 49, 63, 69, 73, 76, 82, 83, 84, 88, 94, 103, 105, 111, 116, 119, 123, 126, 129, 136, 137, 141, 142, 143, 145, 148, 149, 150, 159, 161, 165, 168, 170, 179, 183, 184, 185, 187, 188, 190], "return": [3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 31, 32, 35, 37, 48, 49, 55, 58, 61, 63, 65, 69, 70, 73, 76, 77, 79, 81, 82, 83, 84, 87, 88, 89, 90, 94, 95, 97, 100, 101, 103, 105, 106, 110, 111, 115, 116, 117, 119, 122, 124, 125, 128, 136, 137, 141, 143, 145, 146, 147, 148, 149, 150, 152, 154, 155, 159, 160, 161, 162, 163, 165, 168, 170, 171, 172, 173, 180, 182, 183, 185], "copi": [3, 6, 11, 76, 125, 136, 137, 152, 187], "content": [3, 6, 7, 11, 111, 125, 136, 137, 152, 159, 167, 168, 170, 183, 184, 185, 187, 190], "take": [3, 7, 11, 20, 37, 49, 136, 149, 150, 152, 183, 185, 188, 190], "preced": [3, 34, 35, 55, 100, 173], "type": [3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 31, 32, 35, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 58, 60, 61, 63, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 94, 95, 97, 98, 99, 100, 101, 103, 105, 106, 110, 111, 113, 115, 116, 117, 122, 124, 125, 128, 136, 137, 138, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 159, 160, 161, 162, 163, 165, 166, 167, 168, 170, 171, 172, 173, 175, 180, 182, 183, 185, 187], "tool": [4, 156, 159, 186], "build": [4, 6, 7, 18, 20, 69, 70, 76, 81, 82, 83, 84, 165, 168, 185], "class": [4, 5, 6, 10, 11, 16, 17, 18, 19, 20, 22, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 58, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 164, 165, 166, 167, 168, 174, 175, 183, 186, 187], "inherit": [4, 10, 16, 18, 19, 20, 31, 34, 35, 36, 40, 48, 49, 53, 56, 62, 66, 69, 70, 71, 73, 78, 81, 82, 83, 84, 87, 91, 94, 95, 96, 97, 100, 102, 104, 108, 118, 134, 142, 151, 156, 164, 174, 183, 185], "circuitoper": [4, 6, 9, 10, 11, 12, 13, 77, 183], "schedulebuild": [4, 11, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 94, 95, 97, 98, 99, 100, 103, 105, 168, 183, 184, 185, 186], "builder": [5, 6, 11, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 94, 95, 97, 98, 99, 100, 103, 105, 183, 184, 185, 188, 190], "name": [5, 6, 7, 11, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 30, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 58, 60, 63, 65, 67, 68, 69, 70, 72, 73, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 94, 95, 97, 98, 99, 100, 103, 105, 110, 116, 123, 136, 152, 153, 154, 161, 165, 166, 167, 168, 183, 184, 185, 187, 190], "locu": [5, 6, 11, 18, 19, 20, 25, 27, 28, 29, 30, 31, 33, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 63, 67, 68, 69, 70, 72, 73, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 94, 95, 97, 98, 99, 100, 103, 105, 152, 154, 165, 168, 183, 184, 185, 188, 190], "arg": [5, 6, 11, 20, 31, 35, 48, 49, 73, 94, 95, 97, 185], "factori": [5, 6, 111, 113, 123, 152, 165, 168], "implement": [5, 6, 11, 12, 16, 17, 18, 19, 20, 23, 24, 25, 31, 33, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 61, 63, 65, 67, 68, 69, 70, 72, 73, 74, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 94, 95, 97, 98, 99, 100, 103, 105, 136, 152, 154, 155, 173, 183, 184, 186, 188, 189, 190], "object": [5, 6, 11, 17, 32, 109, 110, 111, 119, 125, 136, 137, 152, 159, 168, 175, 183, 185, 187], "specif": [5, 6, 18, 20, 31, 33, 34, 35, 48, 49, 53, 73, 88, 94, 95, 97, 100, 110, 136, 150, 152, 175, 179, 183, 184, 185, 187, 190], "oper": [5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 34, 35, 37, 38, 39, 48, 49, 52, 54, 55, 69, 70, 71, 73, 87, 90, 91, 93, 94, 95, 97, 100, 151, 152, 153, 154, 155, 168, 175, 183, 184, 185, 186, 188, 190], "appli": [5, 6, 37, 49, 55, 71, 73, 75, 76, 88, 95, 125, 152, 185, 187, 188, 190], "part": [5, 6, 20, 79, 129, 144, 146, 147, 148, 149, 152, 159, 168, 183, 184, 185, 187, 188, 190], "qpu": [5, 6, 20, 21, 35, 63, 132, 152, 160, 164, 168, 183, 184, 185, 190], "e": [5, 6, 18, 19, 20, 31, 35, 48, 49, 55, 67, 68, 69, 70, 73, 78, 81, 82, 83, 84, 85, 86, 88, 95, 96, 97, 100, 102, 104, 143, 145, 149, 150, 152, 156, 160, 161, 162, 163, 168, 183, 185, 189], "g": [5, 6, 18, 19, 20, 31, 35, 48, 49, 55, 67, 68, 69, 70, 81, 82, 83, 84, 85, 86, 95, 97, 100, 143, 145, 149, 150, 160, 161, 168, 183, 185, 189], "circuit": [5, 6, 9, 10, 11, 12, 13, 55, 69, 77, 95, 100, 152, 183, 184, 185, 186, 188, 190], "attribut": [5, 6, 11, 16, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 58, 60, 62, 63, 67, 68, 69, 70, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 94, 95, 97, 98, 99, 100, 103, 105, 110, 111, 112, 113, 114, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 159, 165, 166, 167, 168, 175, 183, 185, 187, 188], "method": [5, 6, 11, 17, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 58, 60, 63, 67, 68, 69, 70, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 94, 95, 97, 98, 99, 100, 103, 105, 109, 110, 111, 112, 113, 114, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 143, 144, 145, 146, 147, 148, 149, 150, 152, 159, 165, 166, 167, 168, 175, 183, 185, 190], "str": [5, 6, 7, 8, 9, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 65, 67, 68, 69, 70, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 94, 95, 97, 98, 99, 100, 103, 105, 110, 111, 115, 119, 121, 122, 123, 129, 130, 136, 141, 143, 145, 149, 150, 152, 153, 154, 160, 161, 162, 163, 165, 168, 170, 182, 185], "tupl": [5, 6, 8, 15, 17, 18, 20, 21, 23, 24, 26, 63, 69, 70, 95, 111, 113, 115, 122, 123, 124, 125, 126, 127, 128, 136, 152, 154, 165, 168, 171, 173, 175, 185], "ani": [5, 6, 7, 8, 11, 17, 18, 20, 23, 24, 25, 26, 31, 35, 48, 49, 69, 70, 73, 94, 95, 97, 126, 135, 136, 150, 152, 160, 161, 165, 168, 170, 183, 184, 185, 187, 190], "inform": [5, 6, 32, 77, 152, 183, 184, 185, 187, 188, 190], "bear": 5, "compon": [5, 6, 20, 21, 28, 29, 30, 35, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 55, 63, 69, 72, 73, 74, 80, 94, 95, 98, 99, 111, 116, 126, 132, 150, 152, 160, 161, 165, 168, 183, 184, 185, 190], "qubit": [5, 6, 11, 12, 13, 14, 15, 31, 34, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 58, 60, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 82, 87, 88, 91, 95, 96, 97, 100, 102, 104, 150, 152, 160, 161, 183, 184, 185, 188, 189, 190], "reson": [5, 71, 72, 73, 74, 75, 76, 97, 105, 111, 160, 161, 173, 183, 184, 189, 190], "act": [5, 6, 13, 14, 15, 18, 20, 21, 33, 53, 55, 70, 73, 94, 95, 100, 152, 160, 161, 183, 184, 185, 187, 188, 190], "argument": [5, 11, 12, 17, 20, 31, 35, 37, 48, 49, 69, 70, 82, 95, 97, 100, 152, 183, 185, 190], "valid": [5, 6, 9, 71, 77, 122, 124, 125, 128, 136, 154, 155, 168, 175, 183, 190], "op_tabl": [5, 6, 9, 11, 18, 38, 39, 94, 103, 105, 185], "against": [5, 6, 129, 155, 187, 190], "tabl": [5, 7, 9, 11, 12, 13, 110, 153, 183], "definit": [5, 6, 7, 8, 12, 19, 35, 70, 73, 106, 142, 152, 153, 183, 184, 185, 187], "quantumop": [5, 6, 7, 8, 9, 11, 12, 13, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 72, 73, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 94, 95, 97, 98, 99, 100, 103, 105, 151, 153, 154, 183, 186, 190], "contain": [5, 6, 9, 11, 19, 20, 37, 69, 70, 77, 95, 110, 122, 124, 125, 128, 136, 152, 165, 168, 179, 183, 184, 185, 187, 190], "allow": [5, 6, 9, 11, 18, 20, 38, 39, 53, 90, 100, 111, 126, 136, 160, 183, 184, 185, 188, 190], "rais": [5, 6, 9, 61, 77, 90, 111, 122, 124, 125, 128, 143, 152, 154, 155, 170, 171, 176, 177, 178, 184], "valueerror": [5, 6, 9, 77, 90, 111, 122, 124, 125, 128, 152, 154, 155, 171], "i": [5, 6, 7, 11, 13, 14, 17, 18, 19, 20, 21, 31, 32, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 60, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 94, 95, 96, 97, 98, 99, 100, 102, 104, 111, 122, 124, 125, 126, 128, 129, 136, 137, 138, 143, 145, 146, 147, 148, 149, 150, 152, 154, 155, 156, 159, 160, 161, 162, 163, 168, 173, 179, 182, 183, 184, 185, 186, 187, 188, 190], "calibr": [6, 8, 9, 17, 18, 19, 20, 23, 24, 25, 26, 31, 33, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 88, 94, 95, 98, 99, 100, 103, 105, 143, 145, 149, 150, 152, 154, 155, 183, 184, 190], "chip_topologi": [6, 20, 63, 95, 115, 116, 185, 190], "channel": [6, 19, 20, 31, 32, 35, 37, 49, 53, 55, 67, 68, 69, 70, 75, 76, 79, 81, 82, 83, 84, 85, 86, 88, 91, 94, 95, 97, 100, 109, 110, 111, 112, 113, 114, 120, 123, 124, 125, 131, 135, 136, 137, 156, 160, 161, 162, 163, 165, 166, 168, 179, 180, 182, 183, 184, 185, 188, 190], "component_channel": 6, "out": [6, 11, 81, 83, 183, 184, 185, 187, 188], "individu": [6, 54, 152, 184, 187], "encapsul": [6, 20, 33, 77, 190], "known": [6, 7, 61, 90, 136, 150, 152, 153, 155, 185], "op": [6, 7, 12, 13, 16, 18, 20, 90, 152, 153, 154, 155], "them": [6, 11, 12, 70, 95, 100, 152, 168, 183, 185, 186, 190], "topologi": [6, 116, 190], "properti": [6, 11, 20, 71, 88, 108, 110, 111, 115, 116, 136, 137, 152, 159, 161, 162, 163, 183, 190], "quantumopt": [6, 11, 12, 13, 155, 183, 185], "opcalibrationdatatre": [6, 155], "data": [6, 8, 17, 18, 20, 23, 24, 25, 26, 31, 33, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 88, 95, 98, 99, 100, 110, 119, 143, 145, 149, 150, 152, 154, 155, 175, 179, 182, 183, 184], "tree": [6, 8, 20, 116, 154, 155], "chiptopologi": [6, 20, 48, 49, 63, 69, 70, 87, 94, 95, 100, 115, 116, 185], "chip": [6, 11, 116, 183], "deriv": [6, 88, 148, 150, 185, 187], "chad": [6, 152], "channelproperti": [6, 20, 108, 113, 115, 117, 136, 161, 162, 163, 180, 182], "map": [6, 7, 11, 18, 20, 23, 24, 26, 27, 28, 29, 30, 38, 39, 48, 49, 57, 58, 59, 60, 69, 70, 87, 90, 94, 100, 110, 116, 122, 136, 143, 145, 149, 150, 152, 153, 161, 168, 171, 183, 185], "configur": [6, 7, 109, 112, 114, 179, 182, 187], "drive": [6, 20, 28, 31, 35, 37, 48, 49, 69, 75, 76, 79, 88, 94, 97, 100, 105, 111, 123, 131, 173, 183, 184, 185, 188], "flux": [6, 20, 29, 35, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 62, 63, 72, 73, 74, 123, 152, 183, 185], "readout": [6, 20, 30, 37, 67, 68, 69, 70, 94, 119, 127, 136, 165, 183, 188], "respons": [6, 111, 114, 185, 187, 188], "_cach": 6, "gateimplement": [6, 16, 17, 18, 19, 22, 31, 32, 33, 34, 35, 36, 40, 48, 49, 53, 55, 61, 62, 63, 65, 66, 71, 73, 78, 87, 90, 91, 94, 95, 96, 97, 100, 102, 104, 152, 154, 168, 183, 186, 188, 190], "cach": [6, 15, 17, 20, 31, 35, 48, 49, 69, 73, 94, 95, 97, 136, 168, 183, 185], "The": [6, 11, 12, 17, 18, 19, 20, 21, 31, 33, 34, 35, 37, 40, 48, 49, 55, 63, 69, 70, 71, 73, 75, 78, 79, 82, 88, 90, 91, 92, 94, 95, 96, 97, 100, 102, 103, 104, 105, 124, 129, 131, 136, 141, 143, 145, 146, 147, 148, 149, 150, 152, 156, 160, 161, 162, 163, 168, 179, 181, 182, 183, 184, 185, 187, 188, 190], "ha": [6, 11, 17, 20, 29, 33, 37, 48, 69, 71, 73, 95, 97, 100, 110, 125, 126, 129, 136, 143, 145, 148, 149, 150, 152, 160, 161, 162, 163, 168, 179, 182, 183, 184, 185, 187, 188, 190], "same": [6, 11, 20, 35, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 55, 69, 72, 73, 74, 75, 79, 80, 88, 98, 99, 117, 124, 129, 143, 145, 146, 147, 148, 149, 150, 161, 168, 179, 182, 183, 184, 185, 187, 188, 190], "structur": [6, 183], "composite_cach": 6, "compositeg": [6, 16, 17, 36, 37, 38, 39, 91, 94, 102, 103, 104, 105, 183, 185], "timebox": [6, 11, 17, 20, 31, 33, 35, 37, 48, 49, 55, 62, 69, 70, 73, 79, 82, 87, 88, 94, 95, 97, 100, 103, 105, 160, 165, 166, 167, 183, 185, 186, 188], "flush": [6, 17, 183], "whenev": [6, 17, 69, 183], "inject": [6, 183], "_channel_to_compon": 6, "self": [6, 11, 18, 19, 20, 38, 39, 48, 49, 69, 70, 83, 84, 88, 94, 95, 103, 105, 136, 152, 159, 168, 184, 185], "invert": 6, "algorithm": [6, 156, 160, 162, 166, 168, 183, 185, 190], "perform": [6, 49, 121, 129, 136, 187], "thi": [6, 11, 17, 18, 19, 20, 31, 33, 35, 37, 38, 39, 48, 49, 52, 55, 58, 60, 63, 69, 70, 71, 73, 75, 79, 81, 82, 83, 84, 87, 88, 90, 92, 93, 94, 95, 97, 100, 110, 111, 124, 126, 127, 129, 132, 136, 142, 143, 145, 146, 147, 148, 149, 150, 152, 156, 159, 160, 162, 163, 166, 168, 183, 184, 185, 187, 188, 190], "us": [6, 11, 16, 18, 19, 20, 33, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 55, 58, 60, 67, 68, 69, 70, 72, 73, 74, 76, 79, 81, 82, 88, 92, 93, 94, 95, 97, 100, 103, 104, 105, 110, 111, 120, 129, 131, 132, 135, 136, 141, 143, 145, 147, 149, 150, 152, 160, 161, 166, 168, 173, 179, 182, 183, 184, 185, 186, 187, 188, 189], "determin": [6, 32, 160, 168, 184, 187, 190], "block": [6, 35, 37, 49, 69, 70, 88, 94, 95, 111, 118, 132, 135, 158, 160, 161, 165, 168, 183, 184, 188, 190], "associ": [6, 11, 69, 95, 110, 111, 127, 129, 185, 187, 188], "onli": [6, 11, 18, 20, 35, 37, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 60, 69, 70, 71, 72, 73, 74, 80, 88, 94, 98, 99, 111, 136, 146, 147, 150, 152, 159, 168, 183, 184, 187, 188, 189, 190], "ar": [6, 11, 18, 19, 20, 32, 34, 35, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 69, 72, 73, 74, 78, 80, 82, 83, 84, 98, 99, 100, 104, 110, 111, 124, 126, 129, 136, 137, 143, 145, 148, 149, 150, 152, 155, 159, 160, 161, 162, 163, 166, 167, 168, 179, 182, 183, 184, 185, 186, 187, 188, 190], "includ": [6, 9, 17, 19, 69, 70, 73, 81, 82, 110, 152, 168, 183, 184, 185, 187], "non": [6, 11, 18, 20, 63, 68, 69, 91, 95, 143, 145, 149, 150, 171, 185, 187, 190], "certain": [6, 19, 48, 49, 83, 84, 111, 185, 190], "virtual": [6, 37, 49, 73, 75, 76, 95, 100, 105, 111, 183, 188, 190], "do": [6, 9, 11, 32, 63, 100, 102, 111, 136, 142, 145, 160, 173, 183, 184, 185, 187, 190], "just": [6, 11, 17, 18, 31, 69, 82, 94, 152, 168, 183, 185], "themselv": [6, 70, 184, 185], "_channel_typ": 6, "probe": [6, 27, 35, 37, 67, 68, 69, 70, 95, 113, 119, 127, 161, 165, 183, 185], "_require_scheduling_in_second": 6, "requir": [6, 20, 22, 32, 41, 42, 43, 44, 45, 46, 47, 50, 51, 63, 67, 68, 69, 72, 73, 74, 80, 83, 84, 85, 86, 88, 93, 95, 98, 99, 100, 111, 143, 145, 147, 149, 150, 152, 154, 155, 165, 173, 179, 182, 183, 184, 185, 187], "second": [6, 11, 12, 20, 31, 35, 37, 48, 49, 54, 55, 69, 70, 71, 95, 97, 100, 111, 136, 143, 145, 149, 150, 159, 161, 162, 163, 183, 185, 188, 190], "instead": [6, 20, 75, 132, 160, 183, 184, 185, 188, 190], "sampl": [6, 20, 32, 75, 111, 113, 114, 117, 119, 120, 124, 125, 126, 130, 132, 136, 137, 143, 145, 146, 147, 148, 149, 150, 160, 161, 165, 179, 182, 184, 185, 186], "can": [6, 11, 16, 17, 18, 19, 20, 31, 33, 35, 37, 40, 48, 49, 55, 58, 60, 61, 69, 70, 73, 79, 82, 83, 84, 88, 94, 95, 97, 100, 103, 105, 110, 111, 120, 122, 123, 125, 126, 129, 131, 135, 136, 141, 143, 145, 149, 150, 152, 156, 158, 162, 163, 168, 170, 173, 183, 184, 185, 188, 190], "happen": [6, 71, 75, 100, 132, 147, 156, 168, 184, 185], "reason": [6, 17, 82, 150, 168, 177, 184, 185, 187], "1": [6, 11, 14, 20, 35, 37, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 54, 55, 57, 58, 59, 60, 63, 67, 68, 69, 70, 71, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 95, 98, 99, 111, 124, 137, 143, 144, 148, 150, 152, 160, 166, 167, 168, 185, 187, 188, 189, 190], "differ": [6, 11, 16, 18, 20, 33, 34, 35, 38, 39, 48, 49, 69, 70, 71, 73, 76, 82, 87, 94, 100, 129, 136, 152, 161, 167, 168, 183, 185, 187, 188], "rate": [6, 32, 75, 111, 114, 117, 124, 125, 136, 160, 161, 179, 182, 185, 186], "uhfqa": [6, 111], "2": [6, 11, 14, 37, 48, 58, 59, 63, 67, 68, 69, 71, 78, 82, 96, 97, 102, 103, 104, 105, 106, 111, 143, 144, 145, 148, 149, 150, 160, 168, 185, 187, 188, 189, 190], "have": [6, 11, 17, 20, 28, 29, 30, 32, 49, 69, 73, 79, 88, 94, 95, 117, 126, 136, 142, 152, 155, 160, 161, 168, 173, 183, 184, 185, 187, 188, 190], "granular": [6, 55, 111, 117, 126, 136, 161, 175, 179, 182, 183, 184, 188], "some": [6, 17, 18, 53, 104, 142, 143, 145, 149, 150, 162, 163, 168, 183, 184, 185, 190], "mix": 6, "station": [6, 37, 77, 111, 116, 152, 183, 184], "ro": 6, "devic": [6, 188], "vendor": 6, "than": [6, 11, 95, 136, 152, 159, 162, 163, 179, 182, 183], "awg": [6, 29, 37, 41, 43, 44, 47, 48, 49, 73, 79, 88, 136, 176, 179, 182, 183, 188], "_channel_templ": 6, "repres": [6, 10, 11, 13, 16, 20, 33, 40, 56, 63, 89, 101, 106, 123, 136, 152, 153, 184, 185, 187, 188], "inject_calibr": [6, 183], "partial_calibr": 6, "new": [6, 11, 14, 17, 90, 136, 152, 160, 161, 162, 163, 165, 168, 183, 184, 185], "chang": [6, 17, 18, 20, 63, 100, 125, 131, 152, 159, 173, 185, 187, 188], "after": [6, 63, 82, 84, 86, 100, 113, 124, 132, 158, 159, 160, 173, 183, 188, 190], "initialis": [6, 19, 67, 68, 69, 70, 81, 82, 83, 84, 85, 86, 95], "invalid": [6, 177], "gate_implement": [6, 17, 18, 19, 20, 31, 34, 36, 40, 53, 62, 66, 71, 78, 91, 96, 102, 104], "affect": [6, 11, 35, 69, 100, 136, 137, 152, 168, 183, 188], "loci": [6, 11, 24, 69, 95, 152, 185, 190], "factoriz": [6, 69, 94, 95, 152, 183], "its": [6, 7, 17, 18, 20, 33, 35, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 55, 69, 70, 72, 73, 74, 80, 98, 99, 116, 125, 126, 136, 137, 146, 147, 152, 161, 162, 163, 166, 168, 183, 184, 185, 187, 190], "wa": [6, 37, 73, 76, 150, 183, 187, 188, 190], "must": [6, 9, 11, 12, 20, 37, 49, 63, 111, 117, 136, 137, 150, 152, 168, 183, 185, 187], "doe": [6, 11, 37, 49, 61, 69, 77, 95, 124, 126, 132, 152, 183, 184, 185, 187, 188, 190], "all": [6, 11, 12, 15, 19, 20, 27, 28, 29, 30, 31, 32, 35, 49, 55, 60, 69, 70, 71, 76, 81, 82, 88, 95, 100, 111, 116, 117, 122, 124, 125, 128, 131, 136, 137, 143, 145, 149, 150, 156, 160, 166, 179, 182, 183, 184, 185, 186, 187, 188, 190], "found": [6, 11, 18, 38, 39, 61, 136, 152], "actual": [6, 37, 55, 69, 143, 145, 146, 147, 148, 149, 150, 160, 179, 182, 183, 185, 188, 190], "previou": [6, 183, 188], "validate_calibr": 6, "check": [6, 13, 111, 179, 182, 183], "match": [6, 63, 136, 137, 179, 181, 182, 183, 190], "someth": [6, 19, 69, 70, 111, 122, 124, 125, 128, 154, 155, 173], "wrong": [6, 154, 155, 183], "get_drive_channel": [6, 190], "given": [6, 11, 12, 15, 18, 19, 20, 32, 33, 49, 55, 61, 62, 63, 69, 70, 79, 80, 94, 97, 98, 99, 103, 105, 111, 117, 125, 136, 137, 141, 152, 161, 168, 170, 172, 179, 182, 184, 185, 190], "exist": [6, 18, 61, 90, 94, 103, 105, 136, 183, 184, 185, 190], "keyerror": 6, "get_flux_channel": 6, "see": [6, 19, 55, 69, 83, 84, 85, 86, 106, 142, 149, 168, 183, 184, 185, 187, 188], "get_probe_channel": 6, "line": [6, 27, 37, 69, 70, 113, 183, 185], "belong": [6, 69, 183], "get_virtual_feedback_channel": 6, "feedback": [6, 37, 69, 92, 93, 94, 129, 183, 186, 190], "signal": [6, 16, 37, 69, 121, 129, 130, 146, 147, 149, 183, 186, 188, 189], "between": [6, 16, 53, 55, 69, 71, 73, 75, 77, 95, 122, 136, 148, 150, 156, 184, 185, 188], "sourc": [6, 73, 159, 183, 187, 188], "destin": [6, 188], "either": [6, 35, 100, 131, 168, 183, 184, 187], "list": [6, 10, 11, 12, 13, 14, 18, 19, 20, 37, 48, 49, 61, 63, 83, 84, 94, 103, 105, 136, 137, 159, 183, 184, 185, 187], "get_virtual_feedback_channel_for": 6, "awg_nam": 6, "feedback_qubit": [6, 37, 183, 188], "get": [6, 13, 17, 20, 48, 49, 65, 69, 70, 87, 94, 100, 110, 115, 116, 152, 159, 183, 185, 188, 190], "node": [6, 20], "receiv": [6, 129, 187, 188], "bit": [6, 37, 183, 188], "which": [6, 11, 15, 20, 35, 48, 69, 73, 79, 97, 100, 136, 137, 144, 145, 149, 150, 152, 160, 168, 173, 183, 184, 185, 186, 187, 188, 190], "": [6, 11, 17, 19, 31, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 67, 68, 69, 70, 71, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 88, 95, 98, 99, 100, 104, 110, 111, 117, 136, 143, 145, 149, 150, 165, 171, 183, 184, 185, 186, 187, 190], "measur": [6, 9, 20, 37, 67, 68, 69, 70, 93, 94, 100, 111, 152, 161, 183, 184, 185, 186, 190], "result": [6, 11, 17, 37, 69, 70, 76, 94, 100, 121, 127, 129, 136, 183, 184, 187, 190], "support": [6, 33, 37, 63, 69, 95, 148, 150, 171, 179, 182, 183, 184, 185, 187, 188], "fast": [6, 48, 69, 92, 93, 129, 183, 186, 189, 190], "_get_channel_for_compon": 6, "has_calibr": 6, "op_nam": [6, 18, 20], "impl_nam": [6, 11, 18, 20, 90, 154, 183, 185], "iff": [6, 9, 18, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 72, 73, 74, 80, 98, 99, 111, 152], "request": [6, 11, 18, 20, 55, 87, 112, 114, 183, 184, 190], "get_calibr": 6, "get_control_channel": 6, "directli": [6, 11, 70, 131, 183], "neighbor": [6, 160, 161, 168], "coupler": [6, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 71, 72, 73, 74, 95, 150, 152, 160, 161, 168, 183, 184, 185, 189, 190], "ad": [6, 11, 17, 69, 76, 110, 136, 156, 160, 161, 183, 185, 190], "separ": [6, 18, 20, 32, 94, 103, 105, 183, 184, 187, 190], "resolut": [6, 168, 190], "phase": [6, 11, 37, 40, 42, 45, 48, 67, 68, 69, 70, 71, 73, 76, 78, 79, 82, 87, 88, 89, 97, 98, 100, 102, 123, 124, 131, 143, 144, 145, 149, 152, 173, 183, 184, 185, 190], "Will": [6, 55, 166], "iter": [6, 9, 11, 12, 20, 63, 77, 95, 117, 136, 137, 152, 165, 168, 190], "wait": [6, 35, 37, 55, 71, 75, 94, 95, 111, 118, 120, 135, 136, 158, 160, 183, 184, 188, 190], "durat": [6, 20, 31, 32, 35, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 67, 68, 69, 70, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 88, 95, 97, 98, 99, 100, 111, 117, 120, 122, 123, 124, 125, 126, 127, 128, 131, 132, 135, 136, 137, 143, 145, 146, 147, 148, 149, 150, 156, 159, 160, 161, 162, 163, 165, 168, 179, 182, 183, 184, 185, 188, 190], "round": [6, 55, 111, 117, 183, 188, 190], "fals": [6, 9, 11, 18, 20, 41, 42, 43, 44, 45, 46, 47, 50, 51, 61, 67, 68, 69, 72, 74, 83, 84, 85, 86, 90, 98, 111, 113, 117, 136, 152, 183, 185], "everi": [6, 20, 124, 179, 182, 183, 185, 190], "guarante": [6, 55, 184], "idl": [6, 95, 132, 136, 183], "cannot": [6, 17, 120, 136, 168, 183, 185, 187, 188], "replac": [6, 11, 20, 90, 120, 132, 183, 187], "dynam": [6, 132, 183], "decoupl": [6, 132, 183], "sequenc": [6, 9, 11, 12, 16, 21, 73, 120, 132, 133, 137, 141, 152, 159, 168, 173, 184, 186, 188, 190], "thei": [6, 11, 18, 19, 67, 68, 69, 70, 81, 82, 83, 84, 85, 86, 100, 104, 110, 111, 136, 137, 152, 168, 179, 182, 183, 184, 185, 188, 190], "treat": [6, 160, 168, 190], "remain": [6, 156, 159, 173, 187], "align": [6, 184, 188, 190], "time": [6, 11, 20, 37, 53, 55, 69, 70, 71, 73, 75, 80, 88, 95, 99, 100, 111, 113, 117, 120, 125, 129, 135, 136, 137, 146, 147, 150, 156, 159, 160, 162, 163, 168, 183, 184, 185, 186, 190], "dure": [6, 55, 73, 111, 120, 135, 146, 147, 150, 168, 184, 190], "particular": [6, 11, 20, 23, 24, 25, 154, 187, 188, 190], "mai": [6, 18, 19, 20, 21, 31, 35, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 63, 67, 68, 69, 70, 71, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 87, 94, 95, 97, 98, 99, 100, 129, 132, 152, 168, 184, 185, 187, 188], "thu": [6, 32, 71, 79, 100, 184, 188], "less": [6, 11, 156, 183], "space": [6, 13, 14, 15, 150, 188], "side": [6, 34, 35, 111, 162, 163, 184], "todo": [6, 37, 63, 69, 111, 138], "For": [6, 11, 14, 17, 23, 24, 69, 111, 136, 143, 152, 183, 184, 185, 187, 188, 190], "now": [6, 63, 100, 183], "nearest": [6, 55], "each": [6, 11, 12, 20, 33, 37, 69, 73, 76, 95, 110, 126, 136, 152, 160, 161, 165, 168, 182, 184, 185, 187, 188, 190], "benefit": 6, "exa": [6, 20, 147, 171, 183, 185, 186, 190], "sweep": 6, "over": [6, 7, 12, 69, 136, 183], "In": [6, 7, 11, 18, 37, 53, 55, 69, 70, 71, 75, 88, 95, 120, 125, 129, 136, 152, 160, 183, 184, 185, 187, 188, 190], "futur": 6, "gener": [6, 11, 20, 69, 70, 88, 100, 141, 168, 183, 185, 187], "should": [6, 18, 20, 37, 49, 69, 70, 79, 92, 93, 94, 103, 105, 110, 111, 150, 152, 156, 160, 161, 183, 185, 187, 188], "experi": [6, 11, 60, 152, 183], "float": [6, 15, 20, 31, 35, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 95, 97, 98, 99, 100, 101, 105, 106, 111, 112, 113, 114, 117, 123, 124, 128, 129, 131, 136, 138, 143, 144, 145, 146, 147, 148, 149, 150, 152, 159, 161, 162, 163, 172, 173, 175, 183, 185], "how": [6, 152, 168, 184, 185, 187, 188, 190], "long": [6, 71, 79, 111, 146, 147, 183, 184, 185], "start": [6, 58, 60, 136, 156, 159, 160, 161, 166, 167, 183, 184, 185, 188], "simultan": [6, 69, 126, 156, 168, 184, 190], "box": [6, 37, 79, 87, 88, 160, 166, 167, 168, 183, 190], "get_implement": [6, 18, 20, 69, 183, 185, 190], "use_priority_ord": 6, "strict_locu": [6, 18, 20], "priority_calibr": [6, 190], "provid": [6, 11, 18, 19, 20, 31, 32, 67, 68, 69, 70, 81, 82, 83, 84, 85, 86, 88, 152, 179, 182, 183, 184, 185, 186, 187, 190], "an": [6, 11, 13, 14, 16, 18, 19, 20, 29, 34, 38, 39, 48, 53, 61, 63, 69, 71, 78, 79, 80, 81, 83, 88, 97, 98, 99, 100, 101, 104, 106, 110, 111, 112, 122, 124, 126, 136, 137, 141, 150, 152, 160, 162, 165, 168, 173, 176, 177, 183, 184, 185, 186, 187, 188, 190], "mean": [6, 11, 69, 71, 129, 152, 168, 183, 185, 187, 188, 190], "chosen": [6, 105, 184], "automat": [6, 11, 19, 70, 183, 185], "logic": [6, 19, 20, 31, 35, 48, 49, 73, 94, 95, 97, 136, 183, 185, 190], "describ": [6, 11, 12, 20, 119, 152, 168, 184, 187, 190], "below": [6, 20, 183, 184, 187, 188, 190], "symmetr": [6, 18, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 72, 73, 74, 80, 98, 99, 152, 183, 185], "order": [6, 11, 12, 13, 14, 18, 20, 21, 34, 35, 37, 73, 136, 150, 152, 168, 184, 185, 186, 188, 190], "avail": [6, 18, 20, 184, 185, 187, 188, 190], "effect": [6, 20, 37, 71, 88, 97, 152, 156, 168, 184, 185, 186, 188, 190], "get_default_implementation_for_locu": [6, 152, 183, 185], "otherwis": [6, 18, 20, 49, 69, 75, 94, 111, 136, 137, 148, 183, 185, 187], "first": [6, 11, 13, 34, 35, 37, 49, 69, 136, 150, 152, 185, 188, 190], "prioriti": [6, 7, 152, 183], "follow": [6, 55, 69, 70, 71, 94, 100, 116, 131, 150, 156, 160, 168, 179, 182, 183, 184, 187, 188, 190], "defin": [6, 7, 11, 18, 19, 22, 28, 29, 30, 32, 38, 39, 48, 49, 52, 69, 70, 71, 78, 83, 84, 95, 96, 111, 142, 143, 150, 152, 154, 155, 166, 168, 183, 184, 185, 186, 187, 190], "defaults_for_locu": [6, 152, 183], "global": [6, 63, 152, 183], "load": [6, 8, 170], "common": [6, 18, 19, 38, 39, 69, 70, 81, 82, 94, 103, 104, 105, 117, 160, 183, 186, 187], "If": [6, 11, 13, 18, 19, 20, 38, 39, 61, 67, 68, 69, 70, 81, 82, 83, 84, 85, 86, 90, 100, 110, 111, 132, 136, 137, 143, 145, 149, 150, 152, 162, 168, 183, 184, 185, 187, 190], "note": [6, 16, 49, 69, 124, 136, 155, 159, 168, 185, 188], "prevent": [6, 184, 185], "save": 6, "via": [6, 18, 20, 63, 82, 94, 95, 103, 105, 148, 150, 183, 185], "could": [6, 17, 55, 152, 185, 188], "_find_implementation_and_locu": 6, "find": [6, 150, 190], "instanc": [6, 11, 13, 18, 20, 33, 69, 75, 79, 80, 88, 97, 98, 99, 124, 127, 152, 173, 190], "compat": [6, 69, 88, 179, 182, 183], "highest": [6, 152], "we": [6, 17, 55, 63, 73, 100, 111, 150, 152, 173, 185, 187, 188, 190], "equival": [6, 100, 156, 168, 173, 184, 190], "one": [6, 9, 11, 18, 38, 39, 42, 45, 49, 56, 69, 70, 79, 136, 152, 160, 161, 165, 168, 183, 184, 185, 187, 188, 190], "had": [6, 183], "_get_implement": 6, "built": [6, 11, 104, 183], "when": [6, 11, 17, 35, 37, 55, 69, 71, 95, 136, 138, 143, 145, 149, 150, 160, 161, 168, 176, 177, 178, 183, 184, 185, 188, 190], "later": [6, 11], "oilcalibrationdata": [6, 18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 72, 73, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 94, 95, 97, 98, 99, 100, 103, 105, 154, 185], "impli": [6, 187], "get_implementation_class": [6, 61], "default": [6, 7, 11, 18, 20, 31, 32, 35, 37, 38, 39, 48, 49, 52, 69, 70, 73, 87, 90, 94, 95, 97, 100, 124, 129, 143, 144, 145, 149, 150, 152, 155, 183, 184, 185, 190], "validate_quantum_circuit": [6, 183], "require_measur": [6, 9], "constitut": [6, 9, 187], "least": [6, 9, 55, 111, 117, 160, 161, 179, 182, 184, 185, 187], "circuit_to_timebox": [6, 183], "scheduling_algorithm": [6, 165, 168], "schedulingalgorithm": [6, 164, 165, 168], "hard_boundari": [6, 165, 166, 168], "locus_map": [6, 183], "convert": [6, 11, 20, 82, 105, 111, 120, 135, 143, 145, 149, 150, 158, 168, 183, 184, 185, 186], "resolv": [6, 20, 147, 166, 168, 184, 186], "option": [6, 11, 12, 13, 32, 69, 136, 152, 183, 185, 188], "placehold": [6, 11, 183], "physic": [6, 11, 21, 111, 160, 183, 184, 185], "while": [6, 20, 82, 166, 184, 185, 187, 190], "unresolv": 6, "timeboxes_to_front_padded_playlist": 6, "neighborhood": [6, 166, 168, 183], "0": [6, 11, 14, 37, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 54, 57, 58, 59, 67, 68, 69, 70, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 95, 98, 99, 104, 105, 111, 113, 122, 124, 141, 143, 144, 145, 146, 148, 149, 150, 159, 165, 168, 173, 185, 187, 190], "temporari": 6, "helper": [6, 20], "playlist": [6, 71, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 157, 158, 174, 178, 179, 182, 183, 186, 188, 190], "front": [6, 136], "pad": [6, 35, 80, 99, 136, 160, 166, 190], "equal": [6, 11, 37, 71, 100, 103, 146, 147, 159, 162, 163, 183, 184, 190], "sinc": [6, 32, 49, 73, 100, 150, 152, 183, 185], "delai": [6, 37, 67, 68, 69, 70, 94, 119, 126, 183, 184, 188], "befor": [6, 75, 82, 84, 86, 111, 113, 173, 183, 190], "final": [6, 143, 184, 185, 190], "wish": 6, "lose": [6, 183], "coher": [6, 124], "done": [6, 82, 131, 138, 150, 156, 161, 183, 185], "onc": [6, 183, 184, 185], "handl": [6, 19, 32, 55, 70, 94, 110, 111, 117, 160, 163, 173, 183, 185], "better": [6, 111, 168, 183], "remov": [6, 20, 100, 111, 136, 137, 138, 183, 190], "timeboxes_to_playlist": 6, "int": [6, 11, 14, 15, 75, 79, 81, 82, 97, 110, 111, 113, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 159, 160, 165, 168, 175, 183], "far": 6, "By": [6, 20, 48, 49, 69, 70, 73, 87, 94, 100, 143, 145, 149, 150, 173], "occupi": [6, 136, 160, 161, 168, 184], "unnecessari": [6, 37, 160, 183], "pack": [6, 166], "assum": [6, 35, 49, 76, 88, 94, 100, 105, 117, 136, 146, 147, 150, 184, 185, 187, 190], "refer": [6, 82, 104, 110, 131, 183, 185, 186, 190], "ensur": [6, 184, 188, 190], "work": [6, 11, 73, 95, 136, 159, 183, 184, 185, 187, 190], "intend": [6, 73, 95, 152, 184, 185], "properli": 6, "higher": [6, 184, 188], "help": [6, 11, 184, 185, 188], "defend": [6, 187], "crosstalk": [6, 62, 63, 123, 156, 183, 185], "expens": 6, "longer": [6, 95, 183], "more": [6, 19, 55, 120, 152, 168, 183, 184, 187, 188], "decoher": [6, 53], "timebox_to_schedul": 6, "finish": [6, 95, 183], "readi": [6, 186], "execut": [6, 34, 35, 110, 125, 133, 136, 152, 156, 184, 185, 186, 187, 188, 190], "sample_r": [6, 111, 112, 113, 114], "_finish_schedul": 6, "filter": 6, "zero": [6, 11, 35, 49, 55, 63, 64, 73, 82, 88, 91, 120, 126, 132, 149, 150, 152, 159, 162, 163, 183, 184], "spacer": [6, 156], "consequ": 6, "step": [6, 132, 150, 183], "process": [6, 76, 120, 184, 189], "consist": [6, 17, 48, 49, 79, 82, 88, 97, 136, 143, 145, 149, 150, 152, 183, 185, 187], "extend": [6, 7, 13, 15, 55, 135, 136, 137, 160, 161, 162, 163, 168], "gone": 6, "_fuse_long_distance_virtual_rz": 6, "fuse": [6, 82, 183], "distanc": [6, 183], "virtualrz": [6, 73, 75, 76, 100, 118, 184], "correct": [6, 13, 62, 63, 73, 76, 102, 123, 183, 185, 190], "next": [6, 159, 184, 185, 188], "fluxpuls": [6, 118], "resolve_timebox": [6, 168, 183, 190], "compute_neighborhood_hard_boundari": 6, "children": [6, 165, 168, 184, 190], "concaten": [6, 168, 184, 190], "strategi": [6, 160, 161, 167, 168], "composit": [6, 17, 18, 38, 39, 166, 167, 168, 183, 184, 185, 190], "solid": 6, "rectangl": [6, 190], "longest": [6, 55, 160, 166], "within": [6, 13, 129, 136, 167, 184, 187], "tetri": [6, 120, 166], "tightli": [6, 166], "possibl": [6, 55, 100, 122, 136, 150, 160, 161, 166, 167, 168, 183, 184, 187, 188, 190], "still": [6, 11, 63, 137], "overlap": [6, 120, 126, 135, 160, 184, 190], "regardless": [6, 185, 188], "boundari": [6, 58, 60, 160, 166, 167], "modifi": [6, 7, 11, 136, 137, 159, 160, 161, 162, 163, 173, 183, 185, 187, 190], "so": [6, 11, 19, 37, 61, 63, 67, 68, 69, 70, 79, 81, 82, 83, 84, 85, 86, 95, 100, 136, 137, 156, 168, 183, 184, 185, 186, 190], "becom": [6, 11, 37, 143, 190], "atom": [6, 20, 165, 166, 168, 184, 185, 190], "isn": 6, "t": [6, 63, 79, 104, 142, 143, 145, 148, 150, 170, 183, 187], "alreadi": [6, 11, 61, 136, 168, 183, 185], "precomput": [6, 136, 168, 185], "typic": [6, 49, 69, 111, 152, 156, 184, 185, 188, 190], "want": [6, 11, 19, 48, 49, 69, 83, 84, 132, 185], "top": [6, 185], "layer": 6, "would": [6, 11, 17, 49, 75, 183, 185, 188, 190], "unus": 6, "set": [6, 11, 17, 19, 20, 22, 32, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 56, 62, 67, 68, 69, 70, 72, 73, 74, 81, 82, 83, 84, 85, 86, 90, 91, 94, 98, 116, 136, 144, 152, 160, 161, 165, 168, 183, 184, 185, 186, 188, 190], "lower": [6, 186, 188], "where": [6, 48, 49, 55, 63, 69, 70, 71, 78, 96, 97, 104, 111, 126, 136, 143, 145, 148, 150, 152, 160, 163, 183, 184, 185, 187], "improv": [6, 37, 69, 183, 187], "need": [6, 11, 17, 18, 20, 31, 35, 37, 48, 49, 63, 69, 70, 73, 90, 94, 95, 97, 136, 137, 143, 145, 149, 150, 152, 183, 184, 185, 186, 190], "_resolve_timebox_hard_boundari": 6, "compute_neighborhood": 6, "_get_neighborhood_hard_boundari": 6, "whose": [6, 60, 129, 185], "plu": 6, "mayb": 6, "_resolve_timebox_tetri": 6, "_block_neighborhood_tetri": 6, "add": [6, 11, 20, 61, 95, 110, 136, 162, 163, 183, 184, 185, 187, 190], "addit": [6, 11, 20, 31, 32, 35, 48, 49, 69, 71, 73, 94, 95, 97, 102, 124, 136, 149, 152, 168, 185, 187, 190], "ideal": [6, 16, 53, 152, 156], "model": [6, 142, 156, 184], "correctli": [6, 17, 183, 185], "interact": [6, 49], "frame": [6, 73, 123, 150, 173, 183, 185], "subspac": [6, 71, 152, 156, 184, 185], "connect": [6, 11, 95, 152, 168, 184, 185, 190], "those": [6, 32, 69, 94, 152, 168, 183, 185, 187, 190], "henc": [6, 173], "evolut": 6, "Of": 6, "cours": [6, 53, 185], "realiti": [6, 53], "possibli": [6, 49, 188], "applic": [6, 185, 187], "essenti": [6, 185], "precis": [6, 184], "interest": 6, "howev": [6, 18, 55, 94, 132, 143, 145, 149, 150, 184, 185, 187], "well": [6, 77, 95, 125, 136, 152, 179, 182, 183, 185, 186, 188, 190], "local": [6, 73, 100, 123, 131, 173], "shut": 6, "down": 6, "unwant": 6, "like": [6, 11, 19, 20, 69, 95, 119, 143, 145, 149, 150, 183, 184, 185, 190], "end": [6, 11, 40, 73, 75, 76, 100, 104, 120, 135, 136, 137, 148, 183, 184, 185, 187, 188], "carri": [6, 184, 187], "meant": [6, 11], "etc": 6, "build_playlist": 6, "finish_schedul": 6, "number": [6, 11, 15, 16, 73, 111, 121, 126, 136, 150, 152, 165, 168, 179, 182, 183, 184, 185, 188, 190], "involv": [6, 20, 35, 184, 186, 190], "compress": [6, 184], "duplic": 6, "transfer": [6, 88, 187], "drop": 6, "point": [6, 100, 159, 160, 161, 185], "finalis": 6, "unless": [6, 20, 143, 145, 149, 150, 168, 183, 185, 187, 190], "call": [6, 11, 13, 17, 18, 20, 73, 95, 103, 183, 185, 190], "uniform": 6, "_set_gate_implementation_shortcut": 6, "creat": [6, 11, 17, 18, 20, 31, 37, 49, 79, 90, 141, 183, 184, 185, 186], "shortcut": [6, 11, 183, 190], "collis": [6, 7], "won": 6, "warn": 6, "hardcod": [7, 185], "nativ": [7, 33, 152, 190], "ones": [7, 18, 34, 35, 94, 103, 105, 166, 168, 185], "case": [7, 11, 20, 31, 35, 48, 49, 55, 69, 70, 88, 95, 97, 100, 136, 145, 148, 152, 160, 163, 173, 183, 184, 185], "gate_definit": 7, "section": [7, 184, 185, 187, 188, 190], "file": [7, 8, 52, 170, 187], "yaml": [7, 8, 170], "config": [8, 110, 183], "circuitoperationlist": [10, 183], "circuit_oper": 11, "num_qubit": [11, 15], "It": [11, 40, 78, 88, 94, 95, 100, 102, 104, 126, 150, 168, 183, 185], "mostli": [11, 184], "conveni": [11, 20, 69, 168, 183, 186], "enabl": [11, 55, 73, 79, 146, 147, 183], "easi": [11, 190], "creation": [11, 185], "calcul": [11, 12, 15, 73, 148, 150, 183], "onto": 11, "import": [11, 56, 185, 187, 190], "present": [11, 12, 71, 136, 160, 190], "think": 11, "about": [11, 77, 122, 124, 125, 128, 183, 184, 188, 190], "qiskit": [11, 183], "quantumregist": 11, "most": [11, 185, 186], "simpli": [11, 37, 100, 152, 184], "taken": [11, 183], "you": [11, 69, 70, 73, 132, 152, 183, 186, 187, 190], "good": 11, "practic": [11, 185, 188, 190], "mutabl": [11, 136], "regist": [11, 12, 13, 18, 90, 152, 183, 184, 186, 190], "usabl": [11, 20, 37, 183], "fundament": 11, "popul": [11, 71], "qb1": [11, 69, 152, 185, 190], "qbn": 11, "qb2": [11, 69, 152, 185, 188, 190], "altern": [11, 184, 188], "To": [11, 37, 55, 136, 185, 186, 187, 188, 190], "your": [11, 185, 187], "own": [11, 17, 20, 33, 152, 183, 184, 185, 187], "initi": [11, 32, 33, 143, 150, 184, 185], "my_tabl": 11, "rememb": 11, "circuit_op": 11, "find_qubit": 11, "what": [11, 18, 152, 183, 184, 185], "__add__": [11, 69, 183], "__mul__": [11, 183], "__getitem__": [11, 183], "redefin": [11, 143, 145, 149, 150], "3": [11, 37, 63, 67, 68, 69, 80, 99, 160, 187, 189, 190], "circuit1": [11, 190], "circuit2": [11, 190], "4": [11, 57, 102, 104, 187, 189], "produc": [11, 162, 183, 184, 188, 190], "prx": [11, 18, 19, 37, 38, 39, 67, 68, 69, 70, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 94, 96, 100, 103, 105, 152, 173, 183, 184, 185, 188, 190], "add_op": 11, "angl": [11, 20, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 72, 73, 74, 78, 79, 82, 87, 88, 89, 94, 96, 100, 101, 103, 104, 106, 123, 152, 172, 173, 183, 185, 190], "drag_crf": [11, 38, 183], "abov": [11, 184, 185, 186, 187, 190], "shorten": 11, "exactli": [11, 20, 152, 165], "syntax": [11, 183, 184, 185, 187, 190], "usual": [11, 17, 55, 127, 150, 184, 185, 188, 190], "attach": [11, 187], "init": [11, 183, 185], "ariti": [11, 20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 69, 72, 73, 74, 80, 98, 99, 152, 185], "unitari": [11, 12, 13, 15, 40, 58, 60, 71, 89, 91, 101, 106, 152, 183, 184, 185], "propag": [11, 15, 58, 60, 94, 183, 188], "entir": [11, 13, 111, 183], "u": [11, 57, 105, 183], "get_unitari": 11, "dimens": 11, "alwai": [11, 18, 34, 35, 37, 73, 94, 103, 105, 152, 156, 160, 162, 185], "qb3": [11, 69, 152, 188, 190], "8x8": 11, "matrix": [11, 12, 13, 14, 15, 40, 63, 104, 152, 183, 185], "correspond": [11, 13, 18, 53, 57, 58, 59, 60, 63, 94, 103, 105, 122, 152, 160, 168, 184, 188], "three": [11, 79], "big": [11, 12, 13, 152], "endian": [11, 12, 13, 152], "convent": [11, 12, 73, 116], "With": [11, 19, 69, 70, 188], "action": [11, 12, 152, 184], "ident": [11, 15, 53, 59, 88, 183], "physical_circuit": 11, "map_loci": [11, 183], "physical_qubit": 11, "exampl": [11, 14, 17, 18, 73, 111, 152, 183, 184, 185, 187, 190], "alic": 11, "zzz": 11, "qb5": [11, 152], "qb10": 11, "occurr": 11, "mani": [11, 183, 185, 190], "run": [11, 183, 188], "parallel": [11, 152, 183], "larg": [11, 184], "left": [11, 20, 31, 35, 48, 49, 69, 70, 95, 97, 100, 162, 163, 184, 185, 188], "ignor": [11, 37], "add_qubit": 11, "n": [11, 14, 15, 34, 35, 111, 143, 150], "qubit_nam": [11, 12], "overal": [11, 12], "arrai": [11, 12, 57, 59, 63, 67, 68, 69, 143, 145, 146, 147, 148, 149, 150, 183, 185], "ndarrai": [11, 12, 13, 14, 15, 37, 63, 67, 68, 69, 89, 101, 106, 145, 146, 147, 148, 149, 150, 152, 185], "locus_indic": 11, "append": [11, 35, 69, 136, 137, 183], "store": [11, 13, 17, 20, 48, 49, 69, 70, 87, 94, 100, 123, 152, 185], "select": [11, 15, 188, 190], "indic": [11, 15, 75, 141, 184, 187], "qb4": [11, 188], "param": [11, 13, 20, 152, 183, 185], "barrier": [11, 12, 152, 185], "compos": [11, 156, 186], "safer": 11, "wai": [11, 18, 119, 168, 183, 184, 185, 190], "togeth": [11, 37, 48, 69, 75, 160, 168, 183, 184, 185, 190], "probabl": 11, "wire": 11, "k": [11, 14, 150], "achiev": [11, 185], "count_op": 11, "count": 11, "counter": 11, "occur": [11, 146, 147, 168], "make_circuit": [11, 183], "fresh": 11, "length": [11, 35, 63, 67, 68, 69, 70, 130, 136, 150, 160, 166, 179, 181, 182, 183], "total": [11, 76, 137, 156, 190], "across": 11, "deepcopi": 11, "_set_specific_operation_shortcut": 11, "through": [12, 33, 69, 183, 185, 187], "skip": [12, 136], "product": [12, 184, 187], "context": [13, 18, 20, 31, 35, 38, 39, 48, 49, 69, 70, 95, 97, 100, 184, 185, 190], "fetch": 13, "Then": [13, 168, 185], "hilbert": [13, 15], "whole": [13, 63, 184, 187], "perm": 14, "permut": [14, 183], "state": [14, 40, 53, 71, 73, 78, 82, 91, 94, 95, 100, 102, 104, 152, 173, 184, 185, 187, 188], "vector": [14, 183], "index": [14, 63, 110, 137, 159, 184, 186], "th": [14, 150], "old": 14, "kron": [14, 152], "c": [14, 148, 168, 187], "n_qubit": 15, "larger": [15, 136, 184], "system": [15, 52, 183, 187, 188, 190], "nest": [15, 20, 22, 41, 42, 43, 44, 45, 46, 47, 50, 51, 63, 67, 68, 72, 73, 74, 80, 83, 84, 85, 86, 95, 98, 99, 100], "hash": 15, "purpos": [15, 20, 69, 183, 185, 187], "rang": [15, 143, 168, 183], "abstract": [16, 152, 184, 185, 186], "conceptu": [16, 184], "wherea": [16, 69, 120, 152, 184, 185], "concret": [16, 152, 185, 186, 190], "One": [16, 20, 87, 184, 190], "approxim": 16, "abc": [16, 18, 20, 34, 36, 40, 53, 62, 66, 71, 78, 79, 81, 82, 87, 88, 91, 96, 102, 104], "customiqwaveform": [16, 66, 69, 70, 78, 81, 82, 185], "singlepulseg": [16, 78, 88, 183], "compositecach": 16, "__call__": [17, 18, 20, 31, 35, 48, 49, 69, 73, 94, 95, 97, 183, 185], "normal": [17, 37, 63, 150, 152, 172, 183, 185, 187], "_timebox_cach": 17, "trust": 17, "itself": [17, 73, 95, 183, 185, 188], "member": [17, 18, 58, 60, 185], "deduc": 17, "cache_kei": 17, "extra_id": 17, "hashabl": [17, 185], "kei": [17, 18, 20, 37, 38, 39, 69, 70, 92, 93, 94, 103, 105, 183, 184, 185], "identifi": [17, 37, 111, 119, 136, 185, 187], "cast": 17, "extra": [17, 37, 73, 82, 185], "string": [17, 63, 67, 68, 69, 129, 141], "id": 17, "further": [17, 149, 150, 168, 185], "did": [17, 183], "come": [17, 185, 190], "fund": 17, "parent": [18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 72, 73, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 94, 95, 97, 98, 99, 100, 103, 105, 183, 185], "calibration_data": [18, 19, 20, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63, 67, 68, 69, 70, 72, 73, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 94, 95, 97, 98, 99, 100, 103, 105, 185], "term": [18, 143, 145, 149, 150, 152, 184, 185, 186, 187], "pre": [18, 150], "abl": [18, 117, 183], "know": [18, 20, 185], "consid": [18, 19, 55, 64, 67, 68, 69, 70, 81, 82, 83, 84, 85, 86, 159, 162, 163, 183, 185, 190], "registered_g": [18, 94, 103, 105, 183, 185], "cz": [18, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 57, 58, 71, 73, 100, 152, 183, 184, 185, 189, 190], "insid": [18, 20, 31, 35, 37, 48, 49, 73, 82, 94, 95, 97, 143, 159, 168, 183, 184, 185], "besid": [18, 94, 95, 103, 105], "here": [18, 63, 82, 94, 103, 105, 142, 150, 185, 188, 190], "construct": [18, 20, 33, 69, 79, 80, 88, 94, 97, 98, 99, 103, 105, 143, 145, 149, 150, 183, 184, 186], "default_implement": [18, 38, 39, 152], "design": [18, 38, 39, 183, 187], "fill": [18, 38, 39, 184], "he": [18, 38, 39], "sought": 18, "custom": [19, 20, 69, 70, 183, 184, 186], "waveform": [19, 32, 41, 43, 44, 47, 48, 49, 63, 64, 67, 68, 69, 70, 72, 73, 74, 79, 81, 82, 83, 84, 85, 86, 97, 110, 123, 124, 125, 128, 143, 144, 145, 146, 147, 148, 149, 150, 179, 181, 182, 183, 184, 186], "iqpuls": [19, 48, 69, 70, 79, 81, 82, 83, 84, 88, 97, 100, 118, 121, 126, 129, 131, 173, 181, 183, 184, 185], "info": [19, 20, 183, 185], "somethingels": [19, 69, 70], "q": [19, 48, 67, 68, 69, 70, 79, 81, 82, 83, 84, 85, 86, 97, 124, 185, 189, 190], "mygat": [19, 69, 70], "i_wav": [19, 69, 70], "q_wave": [19, 69, 70], "wave_i": [19, 67, 68, 83, 84, 85, 86, 124, 185], "wave_q": [19, 67, 68, 83, 84, 85, 86, 124, 185], "dependent_wav": [19, 67, 68, 69, 70, 81, 82, 83, 84, 85, 86], "share": [19, 32, 49, 67, 68, 69, 70, 75, 81, 82, 83, 84, 85, 86, 187], "drag": [19, 67, 68, 69, 70, 81, 82, 83, 84, 85, 86, 185], "root_paramet": [19, 49, 69, 70, 73, 81, 82], "independ": [19, 69, 70, 81, 82, 136, 137, 152, 184, 188], "overrid": [19, 20, 31, 35, 48, 49, 69, 70, 73, 81, 82, 83, 84, 87, 94, 95, 97, 100, 183, 185, 190], "excluded_paramet": [19, 48, 49, 83, 84], "exclud": [19, 48, 49, 83, 84, 187], "There": [20, 82, 185, 188, 190], "subclass": [20, 31, 33, 35, 48, 49, 69, 70, 95, 97, 100, 143, 145, 149, 150, 152, 183, 185], "__init__": [20, 183, 185], "rotat": [20, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 60, 72, 73, 74, 78, 79, 82, 87, 88, 89, 96, 100, 101, 102, 104, 106, 173, 183, 185, 190], "input": [20, 37, 69, 184, 185], "raw": [20, 121, 129, 130, 141, 188], "meaning": [20, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 55, 72, 73, 74, 80, 98, 99, 152], "special_implement": [20, 183], "special": [20, 49, 75, 88, 142, 152, 183, 185, 187, 190], "never": [20, 183, 185], "explicitli": [20, 69, 183, 185, 187, 190], "qualified_nam": 20, "qualifi": 20, "classmethod": [20, 48, 49, 63, 69, 70, 79, 81, 82, 83, 84, 87, 94, 95, 97, 100, 183], "needs_calibr": 20, "appropri": [20, 184, 187], "_call": [20, 31, 35, 37, 48, 49, 55, 69, 70, 73, 79, 82, 87, 88, 94, 95, 97, 100, 103, 105, 183, 185], "kwarg": [20, 31, 35, 48, 49, 73, 79, 83, 84, 94, 95, 97], "signatur": [20, 31, 35, 48, 49, 73, 94, 95, 97, 152, 183, 185], "suffici": [20, 31, 35, 48, 49, 73, 94, 95, 97, 111, 150], "assign": [20, 49, 69, 70, 110, 183], "specifi": [20, 31, 37, 125, 166, 185, 188, 190], "to_timebox": 20, "wrap": [20, 190], "duration_in_second": [20, 31, 35, 48, 49, 69, 70, 95, 97, 100, 136], "unimpl": [20, 31, 35, 48, 49, 69, 70, 95, 97, 100], "reimplement": [20, 31, 35, 48, 49, 69, 70, 95, 97, 100, 185], "make": [20, 31, 35, 48, 49, 69, 70, 73, 95, 97, 100, 125, 132, 136, 137, 152, 156, 159, 183, 185, 187, 190], "sens": [20, 31, 35, 48, 49, 69, 70, 95, 97, 100], "convert_calibration_data": 20, "channel_prop": 20, "item": [20, 136], "fraction": 20, "hz": [20, 42, 45, 67, 68, 69, 72, 73, 74, 98, 111, 112, 114, 143, 145, 149, 150, 185], "addition": [20, 160, 161, 188], "under": [20, 156, 168, 187], "n_sampl": [20, 32, 79, 81, 82, 97, 143, 144, 145, 146, 147, 148, 149, 150], "subset": [20, 58], "nestedparam": [20, 37, 41, 42, 43, 44, 45, 46, 47, 50, 51, 63, 67, 68, 72, 73, 74, 80, 83, 84, 85, 86, 95, 98, 99], "cl": 20, "get_paramet": 20, "expect": [20, 32], "wildcard": 20, "charact": [20, 136, 187], "dot": 20, "root": [20, 58], "settingnod": [20, 115, 116], "get_locus_mapping_nam": [20, 48, 49, 69, 70, 87, 94, 100, 185], "operation_nam": [20, 48, 49, 69, 70, 87, 94, 100], "implementation_nam": [20, 48, 49, 69, 70, 87, 94, 100, 185], "behaviour": [20, 48, 49, 69, 70, 87, 94, 100, 183, 185], "get_custom_locus_map": [20, 63, 95, 183, 185], "component_to_channel": [20, 63, 95, 116], "wrt": 20, "often": [20, 183, 185], "set_locus_map": 20, "frozenset": [20, 63, 95, 185], "matter": [21, 73, 185], "alia": [21, 22, 23, 24, 25, 26, 41, 42, 43, 44, 45, 46, 47, 50, 51, 67, 68, 72, 74, 80, 83, 84, 85, 86, 88, 98, 99, 153], "probe_lin": [27, 69, 70], "single_components_with_dr": 28, "single_components_with_flux_awg": 29, "single_components_with_readout": 30, "plai": [31, 41, 43, 44, 47, 48, 49, 63, 69, 73, 79, 97, 124, 126, 127, 128, 165, 183, 184, 185, 190], "singl": [31, 33, 60, 67, 68, 69, 70, 78, 81, 82, 84, 88, 96, 100, 102, 104, 136, 137, 152, 165, 168, 180, 183, 184, 185, 188, 190], "_get_puls": [31, 81, 82, 83, 84, 183], "_get_pulse_channel": 31, "basic": [31, 137, 183, 185], "insert": [31, 75, 183], "overridden": [31, 152, 185], "wave": [32, 123, 128, 145], "label_prefix": 32, "prefix": [32, 69], "label": [32, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 92, 93, 95, 98, 99, 119, 121, 129, 130, 165, 168, 183, 184, 185], "format": [32, 187], "been": [33, 37, 95, 168, 183, 184, 187, 188], "sever": [33, 120, 152, 183, 185, 188, 190], "scheme": [33, 184], "likewis": 33, "sometim": [33, 184], "metaoper": [34, 35, 152, 185], "forc": [34, 53, 111, 117], "tempor": [34, 35], "qudit": [35, 152], "metainstruct": 35, "caus": [35, 37, 55, 63, 183, 187, 188], "turn": [35, 183], "impos": 35, "relat": [35, 76, 183, 188, 190], "classic": [36, 37, 183, 188], "ccprx_composit": [36, 38, 39, 183, 188], "ccprx_composite_dragcosinerisefal": [36, 183], "ccprx_composite_draggaussian": [36, 183], "condit": [37, 38, 39, 94, 122, 129, 179, 182, 183, 185, 187, 188], "discrimin": 37, "obtain": [37, 88, 184, 187, 189], "segment": [37, 79, 95, 129, 131, 134, 136, 141, 159, 160, 161, 183, 184, 188], "activ": [37, 127, 184], "underneath": 37, "control_delai": [37, 188], "unit": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 55, 63, 67, 68, 69, 70, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 95, 98, 99, 124, 136, 143, 145, 149, 150, 184, 185, 188], "data_typ": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 95, 98, 99], "datatyp": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 95, 98, 99, 171, 183], "collection_typ": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 95, 98, 99], "collectiontyp": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 95, 98, 99, 171], "element_indic": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 63, 67, 68, 69, 70, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 95, 98, 99], "instrument": [37, 100, 111, 114, 118, 134, 188], "drive_control": [37, 115], "feedback_sourc": 37, "141592653589793": 37, "feedback_kei": [37, 69, 183], "conditionalinstruct": [37, 69, 118, 129, 188], "until": [37, 100, 184], "enough": [37, 188], "arriv": [37, 188], "place": [37, 136, 147, 149, 160, 161, 187], "sequenti": 37, "without": [37, 130, 135, 168, 183, 184, 185, 187, 190], "care": [37, 190], "yourself": [37, 186], "rad": [37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 67, 68, 69, 70, 72, 73, 74, 82, 84, 86, 89, 98, 101, 124, 173], "multipl": [37, 69, 95, 111, 117, 122, 126, 129, 143, 145, 149, 150, 183, 184], "f": [37, 63, 69, 70, 143, 145, 148, 150, 152, 185], "__": [37, 63, 69, 70, 183], "current": [37, 69, 73, 159], "hw": [37, 69, 183], "per": [37, 69, 152, 183, 185], "listen": [37, 183], "user": [37, 63, 69, 150, 168, 183, 184, 185, 188, 190], "drag_gaussian": [39, 183, 190], "z": [40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 58, 66, 67, 68, 72, 73, 74, 82, 96, 100, 102, 104, 106, 173, 183, 185], "flip": [40, 183], "rel": [40, 73, 124, 143, 145, 149, 150, 183, 184, 185, 190], "11": [40, 189], "text": [40, 71, 82, 148, 150, 187], "begin": [40, 73, 75, 104, 119, 126, 137, 148, 159, 162, 163, 183, 188, 190], "pmatrix": [40, 104], "fluxpulseg": [40, 41, 43, 44, 46, 47, 50, 51, 71, 73, 185], "cz_gaussiansmoothedsquar": 40, "cz_slepian": 40, "cz_truncatedgaussiansmoothedsquar": 40, "cz_slepian_crf": 40, "cz_crf": 40, "fluxpulsegate_tgss_crf": 40, "fluxpulsegate_crf_crf": [40, 183], "couplerfluxpulsequbitacstarkpulseg": [40, 42, 45, 183], "cz_slepian_acstarkcrf": 40, "cz_crf_acstarkcrf": 40, "cosinerisefal": [41, 42, 46, 50, 51, 72, 74, 83, 84, 149], "coupler_wav": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 72, 73, 74, 185], "amplitud": [41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 63, 67, 68, 69, 70, 72, 74, 81, 82, 83, 84, 85, 86, 88, 97, 98, 143, 145, 147, 149, 150, 183, 185], "scalar": [41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 67, 68, 69, 70, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 95, 98, 99], "center_offset": [41, 42, 43, 44, 45, 46, 47, 50, 51, 72, 74, 83, 84, 85, 86, 98, 148, 149, 150, 185], "crf": [41, 42, 45, 46, 50, 51, 72, 74, 83, 84], "read_onli": [41, 42, 43, 44, 45, 46, 47, 50, 51, 67, 68, 69, 72, 74, 83, 84, 85, 86, 98], "full_width": [41, 42, 44, 45, 46, 47, 50, 51, 72, 74, 83, 84, 85, 86, 98, 148, 149, 150], "rise_tim": [41, 42, 45, 46, 47, 50, 51, 72, 74, 80, 83, 84, 98, 99, 147, 148, 149], "rz": [41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 72, 73, 74, 82, 84, 86, 97, 98, 99, 100, 105, 123, 173, 183], "qubit_wav": [41, 43, 44, 46, 47, 49, 50, 51, 72, 73, 74, 185], "cosin": [42, 45, 80, 98, 99, 142, 143, 146, 147, 149, 150, 183], "rise": [42, 45, 79, 80, 98, 99, 146, 147, 148, 149, 183], "fall": [42, 45, 79, 80, 98, 99, 146, 148, 149, 152, 183], "ac": [42, 45, 48, 79, 80, 97, 98, 99, 183], "stark": [42, 45, 48, 79, 80, 97, 98, 99, 183], "first_qubit": [42, 45], "mcrf": [42, 45, 98], "modulation_frequ": [42, 45, 98, 124, 149], "second_qubit": [42, 45], "qubit_drive_wav": [42, 45, 48], "modulatedcosinerisefal": [42, 45, 98, 142], "gaussiansmoothedsquar": 43, "gss": 43, "gaussian_sigma": 43, "square_width": 43, "slepian": [44, 45, 46, 142, 183], "coupling_strength_norm": [44, 45, 46, 150], "frequency_initial_norm": [44, 45, 46, 150], "frequency_to_minimize_norm": [44, 45, 46, 150], "lambda_1": [44, 45, 46, 150], "lambda_2": [44, 45, 46, 150], "squid_asymmetri": [44, 45, 46, 150], "truncatedgaussiansmoothedsquar": [47, 51, 74, 149], "tgss": [47, 51, 74], "analog": 48, "tune": 48, "frequenc": [48, 67, 68, 69, 70, 73, 97, 112, 113, 124, 143, 145, 149, 150, 183, 185], "_ac_stark_puls": [48, 97], "phase_incr": [48, 97, 98, 100, 124, 131], "quadratur": [48, 97, 124], "pi": [48, 81, 82, 83, 84, 85, 86, 88, 94, 97, 102, 103, 104, 143, 144, 145, 148, 172, 183, 185, 188, 190], "discret": 49, "mediat": [49, 71], "coupl": [49, 150], "tunabl": [49, 189], "both": [49, 73, 79, 162, 183, 185, 188, 190], "arbitrari": [49, 100, 104, 126, 173, 188, 190], "slot": 49, "move": [49, 72, 73, 74, 75, 159, 183, 190], "being": [49, 88, 152, 185, 188], "flux_puls": 49, "radian": [49, 78, 79, 87, 88, 96, 100, 104, 124, 131, 145, 172], "maximum": [54, 64, 95, 136, 150, 160], "up": [55, 69, 73, 76, 111, 117, 136, 150, 160, 183, 185], "hardwar": [55, 131, 152, 179, 182, 184, 185, 186, 188], "again": 55, "much": [55, 184], "why": [55, 185], "10": [55, 64, 71, 189], "except": [55, 69, 82, 174, 176, 177, 178, 184, 185, 187], "enumer": [56, 58, 60], "xygat": [56, 59, 87], "intenum": [56, 60], "reprenum": 56, "twoqubitg": [56, 57], "iswap": [57, 58, 189], "j": [57, 59, 63], "sqrt_iswap": [57, 58], "70710678": [57, 59], "70710678j": [57, 59], "matric": [57, 59, 185], "enum": [58, 60, 164, 166, 167], "qualnam": [58, 60, 166, 167], "two_qubit_unitari": 58, "squar": 58, "x_90": 59, "x_180": 59, "x_m90": 59, "y_90": 59, "y_180": 59, "y_m90": 59, "su": [59, 104, 105, 106], "clifford": [60, 87], "axi": [60, 78, 102, 104, 173, 183, 185], "xy": [60, 78, 87], "plane": [60, 78, 102], "xygate_unitari": 60, "tomographi": 60, "overwrit": [61, 90], "error": [61, 150, 154, 168, 170, 176, 177, 178, 183, 184, 190], "fluxmultiplexer_samplelinear": [62, 183], "flux_multiplex": 63, "linear": [63, 88, 143, 144], "multiplex": [63, 69, 94, 165, 183], "cross": [63, 187, 190], "talk": [63, 190], "element": [63, 168, 183, 184, 190], "c_ij": 63, "aris": [63, 187], "a_i": 63, "w_i": 63, "sum_j": 63, "a_j": 63, "w_j": 63, "spars": 63, "form": [63, 150, 183, 184, 185, 187], "xarrai": 63, "yet": [63, 160, 161, 183], "matrix_index": 63, "relev": 63, "flat": [63, 116], "np": [63, 152, 185, 188, 190], "matrix_el": 63, "experiment": 63, "r": [63, 102, 148, 189], "d": [63, 143, 168, 187, 189], "everyth": [63, 190], "subject": [63, 184, 187], "1e": [64, 138, 162, 163], "absolut": 64, "uniformli": 64, "class_nam": 65, "project": [66, 67, 68, 94, 100], "basi": [66, 67, 68, 94, 100, 104, 152, 187], "measure_customwaveform": [66, 67, 68, 70, 185], "measure_const": [66, 183], "measure_constant_qnd": 66, "probepulse_customwaveform": [66, 183], "dispers": [67, 68, 69], "constant": [67, 68, 69, 79, 80, 93, 99, 146, 147, 148, 183, 188], "acquisition_delai": [67, 68, 69, 70], "acquisit": [67, 68, 69, 70, 119, 127, 183, 188], "acquisition_typ": [67, 68, 69], "threshold": [67, 68, 69, 129], "amplitude_i": [67, 68, 69, 70, 79, 80, 81, 82, 83, 84, 85, 86, 99, 185], "amplitude_q": [67, 68, 69, 70, 79, 80, 81, 82, 83, 84, 85, 86, 99, 185], "integration_length": [67, 68, 69, 70, 183], "integr": [67, 68, 69, 70, 113, 121, 129, 130, 150, 183, 188], "integration_threshold": [67, 68, 69], "integration_weights_i": [67, 68, 69], "weight": [67, 68, 69, 121, 129, 183], "dtype": [67, 68, 69, 143, 145, 146, 147, 148, 149, 150, 185], "float64": [67, 68, 69], "integration_weights_q": [67, 68, 69], "demolit": 68, "dimension": 69, "len": 69, "intermedi": [69, 185], "IF": 69, "center": [69, 113, 148, 149, 150], "offset": [69, 126, 148, 150], "readouttrigg": [69, 70, 118, 129, 165, 184, 186], "_multiplexed_timebox": 69, "multiplexedprobetimebox": [69, 164, 183], "probe_timebox": 69, "_time_trac": 69, "time_trac": [69, 70, 119], "_build_instruct": [69, 70], "waveform_param": [69, 70], "root_param": [69, 70], "if_freq": 69, "acquisitionmethod": [69, 70, 118, 121, 127, 130], "do_acquisit": 69, "nake": 69, "trigger": [69, 70, 127, 136, 165, 183, 188], "goe": 69, "maintain": 69, "backward": [69, 88], "rout": [69, 129], "probelin": [69, 184, 188], "behav": [69, 120, 132], "featur": [69, 185, 186], "mode": 69, "pick": 69, "anywher": [69, 129, 183], "pass": [69, 75, 76, 77, 183, 188], "acquisition_dur": 69, "trace": [69, 70], "record": 69, "acqusit": 69, "contrari": 70, "probl": 70, "exchang": 71, "invari": 71, "span": 71, "00": 71, "rangl": [71, 91], "01": 71, "swap": 71, "anyth": [71, 185], "orthogon": [71, 185], "involut": 71, "_": 71, "i_": 71, "langl": 71, "undefin": [71, 184], "complex": [71, 121, 185, 188, 190], "degre": [71, 102], "freedom": [71, 188], "continuum": 71, "cancel": [71, 183], "due": [71, 73, 97, 123, 147, 184], "movemark": [71, 73, 183], "move_customwaveform": [71, 72, 74, 76, 183], "move_crf_crf": [71, 183], "move_tgss_crf": 71, "detun": [72, 73, 74, 75, 76, 183], "bookkeep": 73, "unknown": [73, 152, 177], "pair": [73, 126, 146, 147, 152, 185], "back": [73, 152, 159], "came": 73, "sandwich": [73, 76, 77, 183], "At": [73, 185], "annot": [73, 75, 187], "mark": [73, 187], "counteract": 73, "accumul": 73, "proport": 73, "sum": [73, 76, 126, 137, 143, 145, 149, 150, 168, 190], "complet": [73, 184], "apply_move_gate_phase_correct": [73, 183], "track": [73, 137, 160, 183, 187, 190], "right": [75, 183, 184, 187, 188, 190], "link": [75, 142, 183, 187], "noth": [75, 134, 136, 156, 158, 162, 163, 185, 187], "explicit": [75, 183, 184], "aforement": [75, 137, 160, 185], "marker": 75, "post": 75, "compil": [75, 77, 111, 120, 186, 187, 190], "apply_detuning_correct": 76, "level": [76, 77, 152, 184, 185, 186, 188, 190], "validate_prx": 77, "prepar": [77, 187], "conform": 77, "constraint": [77, 126, 184, 188], "unmodifi": 77, "x": [78, 79, 82, 84, 87, 88, 102, 104, 183, 185, 189], "r_": [78, 82, 100], "phi": [78, 82, 96, 100, 104, 105, 106, 145, 173, 183], "theta": [78, 82, 100, 104, 105, 106, 150, 173, 183], "co": [78, 104, 143, 145], "y": [78, 87, 102, 104, 106, 183], "sin": [78, 104, 148], "r_z": [78, 82, 96, 100, 104, 105], "r_x": 78, "dagger": 78, "around": [78, 102, 104, 149, 173], "li": 78, "bloch": [78, 104, 185], "sphere": [78, 104, 185], "prx_gateimplement": [78, 79, 88, 96], "prx_singlepulse_gateimplement": [78, 81, 82], "prx_customwaveform": [78, 83, 85, 183, 185], "prx_draggaussian": 78, "prx_dragcosinerisefal": 78, "prx_customwaveformssx": [78, 84, 86, 183], "prx_draggaussiansx": [78, 183], "prx_dragcosinerisefallsx": [78, 183], "abc_constant_smooth": [78, 80, 96], "constant_prx_with_smooth_rise_fal": [78, 96, 99, 183], "arbitrarili": [79, 146, 147, 183], "smooth": [79, 146, 147], "rise_waveform": [79, 80, 99], "main_waveform": [79, 80, 99], "fall_waveform": [79, 80, 99], "middl": [79, 149], "limit": [79, 103, 179, 182, 183, 187, 190], "memori": [79, 183, 184], "doesn": 79, "_main_puls": 79, "main": [79, 184, 185], "_rise_puls": 79, "_fall_puls": 79, "cosinefal": [80, 99, 142], "cosineris": [80, 99, 142], "iq": [81, 82, 83, 84, 85, 86, 88, 111, 112, 121, 126, 129, 130, 173, 179, 182], "hot": [81, 82], "swappabl": [81, 82], "rest_of_calibration_data": [81, 82], "x_pi": [81, 83, 183], "sx": [82, 103, 183], "manipul": [82, 185], "formula": 82, "rz_after": [82, 84, 86], "rz_befor": [82, 84, 86, 183], "sqrt": [82, 84, 102, 183], "cosinerisefallderiv": [83, 84, 142], "vz": [84, 86], "prx_customwaveformsvz": [84, 86], "truncatedgaussian": [85, 86, 185], "tg": [85, 86], "truncatedgaussianderiv": [85, 86, 185], "gaussian": [86, 185], "rx": [87, 188, 190], "ry": [87, 183, 190], "xy_gat": 87, "static": [88, 143, 145, 149, 150, 165, 168, 183], "_single_iq_puls": [88, 183], "resonantli": 88, "x_": 88, "linearli": [88, 185], "scale": [88, 123, 124, 128, 184, 185], "adjust": [88, 173, 183, 184, 188], "iq_puls": [88, 183], "2x2": [89, 101, 106], "gate_nam": [90, 185], "impl_class": [90, 185], "set_as_default": 90, "quantum_op_spec": [90, 185], "spec": 90, "reset_condit": [91, 188], "reset_wait": [91, 183], "__default_feedback": 92, "doubl": [92, 93], "underscor": [92, 93], "emphas": [92, 93], "fact": [92, 93], "manual": [92, 93, 145, 185], "__reset": 93, "reset": [94, 95, 124, 152, 183, 184, 185, 188], "necessari": [94, 156, 184, 185, 190], "accommod": 94, "upon": 94, "relax": [95, 183], "compar": [95, 129, 136, 183], "shot": [95, 184], "destroi": 95, "wait_box": 95, "rz_virtual": 96, "rz_acstarkshift": [96, 98], "rz_acstarkshift_cosinerisefal": 96, "rz_acstarkshift_smoothconst": [96, 183], "strong": 97, "off": [97, 183], "lead": [97, 183], "shift": [97, 123], "ac_stark_puls": 97, "ac_stark_waveform": 98, "increment": [98, 100, 124, 131, 173, 183], "techniqu": [100, 105], "oscil": [100, 131, 173], "shortest": 100, "algebra": [100, 131], "commut": [100, 173], "toward": 100, "hit": 100, "elimin": 100, "multi": 100, "hold": [100, 187], "diagon": 100, "immedi": [100, 156, 183], "conjug": 100, "alpha": [100, 143, 144], "accomplish": 100, "assumpt": [100, 150], "negat": 100, "sigma": [102, 185, 189], "_x": 102, "xz": 102, "90": [102, 189], "sxgate": [102, 183], "parametr": [104, 150, 185, 189], "euler": [104, 105], "lambda": [104, 105, 183, 185], "subsequ": [104, 187], "r_y": [104, 105], "express": [104, 150, 187], "h": 104, "8": [104, 186, 187], "http": [104, 183, 187], "openqasm": 104, "com": 104, "languag": [104, 184, 187], "html": [104, 141, 183], "ugat": [104, 183], "lam": [105, 106], "decomposit": 105, "cdot": 105, "probechannelproperti": 108, "channelconfigur": [108, 114], "realchannelconfig": [108, 110, 112], "iqchannelconfig": 108, "channeldescript": [108, 179, 180], "instruction_t": 110, "uniqu": [110, 152, 184, 185], "waveform_t": 110, "add_instruct": 110, "integ": [110, 111, 122, 168, 190], "similar": [110, 183, 185], "manner": 110, "instruction_duration_granular": [111, 113], "instruction_duration_min": [111, 113, 117], "compatible_instruct": [111, 113, 175], "is_iq": [111, 113], "is_virtu": [111, 113], "blocks_compon": [111, 113], "zi": 111, "hdawg": 111, "shfsg": 111, "shfqa": 111, "32": [111, 184], "16": [111, 136, 184, 189], "hack": 111, "frontend": 111, "sent": [111, 183, 184, 187], "might": [111, 184, 185, 188, 190], "duration_to_sampl": 111, "duration_to_second": 111, "duration_to_int_sampl": 111, "messag": [111, 154, 168], "check_min_sampl": 111, "close": [111, 190], "test": [111, 183], "output": [111, 120, 132, 141, 152, 183, 184, 188, 190], "unaccept": 111, "round_duration_to_granular": 111, "round_up": [111, 117], "force_min_dur": [111, 117], "closest": [111, 117], "upconvers": [112, 131], "center_frequ": 113, "integration_start_dead_tim": 113, "integration_stop_dead_tim": 113, "dead": 113, "real": [114, 124, 128, 129, 150, 184], "flux_control": 115, "readout_control": 115, "intern": [115, 183, 184, 190], "standard": [116, 190], "channel_properti": [116, 136, 161], "largest": 117, "realpuls": [118, 123, 179, 181, 182, 185], "multiplexediqpuls": [118, 127], "timetrac": 118, "complexintegr": [118, 129], "thresholdstatediscrimin": 118, "delay_sampl": [119, 121, 129, 130], "acquir": [119, 127, 184], "qb1__readout": 119, "window": [119, 130, 143, 145, 148, 149, 150], "strictli": [120, 184, 185], "strict": [120, 183, 184], "version": [120, 186, 187], "dd": 120, "outcom": 122, "choic": 122, "evalu": 122, "ok": [122, 124, 125, 128], "get_child_instruct": [122, 125], "child": [122, 125, 160, 161, 179, 182], "collect": [123, 184, 185], "scale_i": [124, 185], "scale_q": [124, 185], "upconvert": 124, "envelop": [124, 189], "factor": [124, 128, 150, 185], "success": 124, "carrier": 124, "get_waveform": [124, 125, 128], "command": [125, 184, 188], "entri": [126, 185], "outsid": [126, 184, 185], "interv": [126, 184, 185], "truncat": [126, 159, 183], "neg": 126, "probe_puls": 127, "shape": [128, 143, 145, 146, 147, 148, 149, 150, 186], "feedback_signal_label": [129, 183], "boolean": 129, "transmit": 129, "field": [129, 185, 187], "duration_sampl": 130, "captur": [130, 186], "updat": [131, 183, 188], "sure": 132, "synchron": 136, "program": 136, "critic": 136, "constructor": 136, "account": [136, 150, 183], "pprint": 136, "time_unit": 136, "fix": [136, 184], "width": [136, 148, 149], "graphic": 136, "represent": [136, 168, 184], "symbol": 136, "keysview": 136, "mutat": [136, 137], "vice": [136, 137], "versa": [136, 137], "immut": [136, 137], "add_channel": 136, "channel_nam": [136, 190], "front_pad": 136, "to_dur": 136, "variabl": [136, 160, 183], "front_pad_in_second": 136, "pad_to_hard_box": 136, "pad_to_hard_box_in_second": 136, "smallest": 136, "revers": 136, "preserv": [136, 156, 184, 190], "rear": 136, "reverse_hard_box": 136, "No": [136, 183], "synchronis": 136, "break": 136, "cleanup": [136, 183], "clean": [136, 183], "thing": [136, 146, 147], "has_content_in": 136, "keep": [137, 160], "_instruct": 137, "_durat": 137, "prepend": 137, "pop": 137, "idx": [137, 159], "12": [138, 162, 163], "comp": [138, 183], "1281": 138, "visualis": [140, 183], "view": [141, 183], "browser": 141, "jupyt": 141, "notebook": 141, "ipython": 141, "core": [141, 183], "displai": [141, 187], "inspect": 141, "don": [142, 187], "serial": 142, "reimport": 142, "document": [142, 183, 187], "appear": [142, 184, 187], "chirp": [142, 144, 183], "chirpimag": [142, 183], "freq_start": [143, 144], "freq_stop": [143, 144], "05": [143, 144], "omega": 143, "f_": 143, "mathrm": 143, "taper": 143, "rectangular": [143, 160], "hann": 143, "nyquist": 143, "zone": 143, "constrain": 143, "5": [143, 185, 187, 189, 190], "_sampl": [143, 145, 146, 147, 148, 149, 150, 185], "sample_coord": [143, 145, 146, 147, 148, 149, 150, 185], "coordin": [143, 145, 146, 147, 148, 149, 150], "non_timelike_attribut": [143, 145, 149, 150, 185], "timelik": [143, 145, 149, 150], "dimensionless": [143, 145, 149, 150], "invers": [143, 145, 149, 150], "5707963267948966": 144, "imaginari": 144, "period": 145, "sinusoid": [145, 148, 149], "made": [146, 147, 168, 185, 186, 187, 190], "dummi": 147, "bug": 147, "fixm": 147, "p": [148, 189], "plateau": 148, "Its": [148, 184], "midpoint": [148, 150], "descript": [149, 168, 187], "detail": [149, 150, 152, 184, 186, 188], "minim": [150, 156, 183], "adiabat": [150, 189], "prior": 150, "optim": [150, 162, 183], "lambda_n": 150, "tau_": 150, "acceler": 150, "reconstruct": 150, "tau": 150, "lab": 150, "interpol": 150, "v": [150, 179, 182, 183], "voltag": 150, "go": [150, 185], "advis": [150, 187], "look": [150, 185], "mathemat": [150, 186], "heavi": 150, "coeffici": 150, "leakag": 150, "strength": 150, "squid": [150, 183], "asymmetri": [150, 183], "_sample_normalized_slepian": 150, "coord": 150, "_t_tau": 150, "num_sampl": 150, "129": 150, "convers": [150, 185, 187], "analyt": 150, "solut": 150, "therefor": [150, 184], "numer": 150, "scipi": [150, 183], "romb": 150, "_theta_tau": 150, "fourier": 150, "shown": [150, 183, 188], "tau_puls": 150, "quantum_op": 152, "short": [152, 162], "simpl": [152, 168, 184, 185, 189], "unambigu": [152, 184, 185], "subsystem": 152, "qumod": 152, "pictur": [152, 188], "famili": [152, 184], "plural": 152, "intent": 152, "target": [152, 183, 190], "callabl": [152, 185], "lowest": [152, 184], "docstr": 152, "exact": [152, 185], "first_qubit_basis_ket": 152, "second_qubit_basis_ket": 152, "set_default_implement": [152, 185], "set_default_implementation_for_locu": [152, 185], "cal_data": 154, "impl": [154, 185], "noiseless": 156, "sync": 156, "try": [156, 183], "segmentpoint": 156, "nonsolid": 157, "nevertheless": 157, "tol": [159, 162, 163], "frac": 159, "serv": 159, "pointer": 159, "smaller": [159, 162, 163], "toler": 159, "remaind": 159, "cut_tail": 159, "cut": 159, "tail": 159, "onward": 159, "rewind": 159, "fastforward": 159, "forward": 159, "child_schedul": [160, 161], "child_compon": [160, 161], "neighborhood_compon": [160, 161, 165, 168], "component_dur": [160, 161], "is_alap": [160, 161], "respect": [160, 166, 179, 182, 184, 185], "hard": [160, 183], "rag": [160, 162, 163], "edg": [160, 183], "earliest": [160, 161], "max": 160, "combin": [160, 187], "extend_hard_boundary_in_second": 160, "computational_reson": [160, 161], "These": [160, 161, 168, 183, 184, 185, 190], "even": [160, 161, 183, 185, 187], "ever": [160, 161], "alap": [160, 161, 167, 168, 184, 190], "As": [160, 161, 168, 185, 188], "late": [160, 161, 167, 168], "extend_hard_boundari": 161, "incom": 161, "extens": [162, 163, 183], "reserv": 164, "resourc": 164, "schedulingstrategi": [164, 165, 166, 168, 190], "locus_compon": [165, 168, 185], "asap": [165, 167, 168, 184, 188, 190], "from_readout_trigg": 165, "readout_trigg": 165, "probe_channel": 165, "block_channel": 165, "block_dur": 165, "soon": [167, 168, 183, 188], "fragment": 168, "accord": [168, 190], "human": [168, 184, 185], "readabl": [168, 183, 184, 187], "union": [168, 187, 190], "rule": [168, 173, 183, 184, 185, 190], "operand": [168, 190], "pipe": [168, 190], "group": [168, 185, 190], "let": [168, 185], "a_then_b": 168, "c_then_d": 168, "set_alap": [168, 190], "abcd": 168, "abb": 168, "ccd": 168, "all_togeth": 168, "dictat": 168, "flatten": 168, "ancestor": 168, "set_asap": 168, "print": [168, 183, 187, 190], "_idx": 168, "python": [170, 171, 183, 185], "type_hint": 171, "typehint": 171, "psi_1": 173, "psi_2": 173, "decrement": 173, "beforehand": 173, "opposit": 173, "direct": [173, 187], "playlistvalidationerror": 174, "awgschedulevalidationdata": [174, 179], "awgschedulevalidationerror": 174, "invalidinstructionerror": 174, "sampling_r": 175, "min_number_of_sampl": 175, "fail": [176, 178], "issue_str": 177, "encount": 177, "channel_descript": [179, 180], "device_constraint": [179, 180, 182], "minimum": [179, 182, 184], "rework": 183, "delet": 183, "major": 183, "stai": 183, "register_implement": [183, 184, 185], "split": [183, 184], "seen": 183, "register_g": 183, "validate_oper": 183, "compare_oper": 183, "add_implement": 183, "validate_implement": 183, "set_default": 183, "build_quantum_op": [183, 184], "py": 183, "yield": 183, "issu": [183, 187], "virtualz": 183, "didn": 183, "renam": 183, "crystal": 183, "star": 183, "architectur": 183, "crystal_5": 183, "star_6": 183, "mini": 183, "mini_crystal_20": 183, "crystal_20": 183, "sw": 183, "1059": 183, "electron": [183, 185, 187], "bump": 183, "refactor": 183, "deprec": 183, "usag": [183, 185], "register_gate_implement": 183, "imposs": 183, "retain": [183, 187], "rapidjson": 183, "685": 183, "previous": 183, "x90": 183, "were": 183, "though": [183, 184, 185], "codebas": 183, "lint": 183, "467": 183, "speed": 183, "reshap": 183, "faster": 183, "neither": [183, 185], "assing": 183, "signific": 183, "speedup": 183, "anywai": 183, "diffrenet": 183, "broader": 183, "numpi": [183, 190], "verifi": 183, "compatibili": 183, "ruff": 183, "migrat": 183, "guid": 183, "org": [183, 187], "doc": [183, 185], "stabl": 183, "numpy_2_0_migration_guid": 183, "builtin": 183, "easili": [183, 186, 190], "quantumcircuit": 183, "extract": 183, "crf_acstarkcrf": 183, "slepian_acstarkcrf": 183, "repo": 183, "organ": [183, 190], "1042": 183, "disabl": 183, "horizont": 183, "scroll": 183, "toggl": 183, "cover": 183, "concept": [183, 185, 186], "531": 183, "gitlab": 183, "public": 183, "page": [183, 186, 187], "776": 183, "mr": 183, "514": 183, "client": [183, 184, 185, 186], "licens": [183, 186], "apach": [183, 187], "extlink": 183, "sphinx": 183, "916": 183, "intersphinx": 183, "665": 183, "becaus": [183, 185], "proper": 183, "realiz": [183, 189], "former": 183, "semant": [183, 184], "disturb": 183, "774": 183, "leak": 183, "web": 183, "artifact": 183, "resetwait": 183, "comfort": [183, 185], "timelin": [183, 184], "broken": 183, "redisplai": 183, "upcom": 183, "releas": 183, "prefer": [183, 185, 187], "font": 183, "viewer": 183, "358": 183, "typo": 183, "api": [183, 185, 186, 190], "workflow": [183, 190], "meth": 183, "pulla": [183, 186, 190], "potenti": 183, "crash": 183, "discoveri": 183, "throw": 183, "sc": 183, "nonsens": 183, "mcm": 183, "cc_prx": [183, 188], "merge_dict": 183, "crf_crf": 183, "interfac": [183, 185, 187], "feedback_label": 183, "similarli": [183, 185], "conditional_prx": 183, "hopefulli": 183, "yml": 183, "conditionalreset": 183, "mid": 183, "constant_qnd": 183, "qndness": 183, "phase_increment_befor": 183, "transform": [183, 184, 186, 187], "sign": 183, "phase_transform": 183, "fulfil": 183, "satisfi": [183, 188], "conditionalprx": 183, "accept": [183, 187], "signifi": 183, "weigth": 183, "canon": [183, 185], "whitelist": 183, "2112": 183, "write": [183, 185, 187], "1831": 183, "drag_crf_sx": 183, "drag_gaussian_sx": 183, "prx_u": 183, "prx_sx": 183, "_x_pi_puls": 183, "547": 183, "prioritis": 183, "1929": 183, "1468": 183, "programm": 183, "1925": 183, "crude": 183, "visual": [183, 184, 188], "measure_nop": 183, "small": [183, 184], "validate_move_instruct": 183, "2056": 183, "pipelin": [183, 188], "packag": 183, "give": [184, 185, 187, 190], "overview": 184, "terminologi": 184, "deliv": 184, "send": [184, 188], "assembli": 184, "batch": 184, "summar": 184, "imag": [184, 188], "illustr": [184, 188], "visibl": 184, "microwav": [184, 186], "ambigu": 184, "machin": 184, "violat": 184, "concern": 184, "philosophi": 184, "inaccess": 184, "attempt": 184, "smart": 184, "magic": 184, "inconsist": 184, "transpar": 184, "technic": 184, "apart": 184, "few": 184, "instant": 184, "thought": [184, 188], "desir": [184, 190], "read": [184, 188, 190], "importantli": 184, "disjoint": [184, 190], "partli": 184, "figur": [184, 188], "demonstr": 184, "explain": 184, "necessarili": [184, 185, 187], "variou": [184, 185], "runtim": [184, 188, 190], "bridg": 184, "gap": 184, "repeat": [184, 190], "repetit": 184, "encod": 184, "aim": 184, "fit": [184, 187], "chunk": 184, "inspect_playlist": 184, "neat": 184, "metadata": 185, "question": [185, 190], "cnot": 185, "NOT": 185, "On": [185, 188], "hand": 185, "frozen": 185, "programmat": 185, "procedur": 185, "invok": 185, "random": 185, "benchmark": 185, "getter": 185, "qc": 185, "introduc": 185, "emphasi": 185, "def": 185, "code": [185, 187, 188], "_default": 185, "implementation_": 185, "default_prx_qb1": 185, "special_prx_qb1": 185, "my_special_prx": 185, "default_box": 185, "chain": [185, 188], "default_cz_box": 185, "pure": 185, "develop": 185, "choos": [185, 187], "thumb": 185, "rest": 185, "simplifi": [185, 188], "educ": 185, "__class__": 185, "__name__": 185, "low": 185, "subsect": 185, "relai": 185, "live": 185, "denot": 185, "asymmetr": 185, "tri": 185, "replic": 185, "mandatori": 185, "alter": 185, "physcial": 185, "averag": 185, "mu": 185, "spread": 185, "recip": 185, "offset_coord": 185, "exp": 185, "resampl": 185, "understand": [185, 188, 189], "unitless": 185, "scalar_coeffieci": 185, "quick": [185, 186, 190], "simplest": 185, "composteg": 185, "compositehadamard": 185, "hadamard": 185, "_this_": 185, "member_prx": 185, "latter": 185, "onelin": 185, "prx_mycoolwaveform": 185, "coolwaveformi": 185, "coolwaveformq": 185, "my": 185, "cool": 185, "cz_mycoolwaveform": 185, "coolcouplerwaveform": 185, "coolqubitwaveform": 185, "measure_mycoolwaveform": 185, "preload": 185, "altogeth": 185, "snippet": 185, "cnot_matrix": 185, "cnot_op": 185, "my_build": 185, "my_cnot_impl": 185, "mycnotclass": 185, "implementation_class": 185, "access": [185, 190], "9": [186, 187, 188, 190], "date": [186, 187], "2025": 186, "04": 186, "02": 186, "high": [186, 189], "unifi": 186, "hide": 186, "But": 186, "framework": [186, 190], "machineri": 186, "standalon": 186, "librari": [186, 188], "encourag": [186, 190], "familiar": 186, "especi": [186, 190], "miscellan": 186, "pitfal": 186, "changelog": 186, "search": 186, "januari": 187, "2004": [187, 189], "www": 187, "AND": 187, "FOR": 187, "reproduct": 187, "distribut": 187, "shall": 187, "licensor": 187, "copyright": 187, "owner": 187, "entiti": 187, "author": 187, "grant": 187, "legal": 187, "power": 187, "indirect": 187, "manag": 187, "contract": 187, "ii": 187, "ownership": 187, "fifti": 187, "percent": 187, "50": 187, "outstand": 187, "iii": 187, "benefici": 187, "exercis": 187, "permiss": 187, "modif": 187, "softwar": [187, 189], "mechan": 187, "translat": 187, "media": 187, "authorship": 187, "notic": [187, 190], "appendix": 187, "editori": 187, "revis": 187, "elabor": 187, "mere": 187, "bind": 187, "thereof": 187, "contribut": 187, "intention": 187, "submit": 187, "inclus": 187, "behalf": 187, "verbal": 187, "written": 187, "commun": 187, "mail": 187, "discuss": 187, "conspicu": 187, "Not": [187, 190], "contributor": 187, "whom": 187, "incorpor": 187, "herebi": 187, "perpetu": 187, "worldwid": 187, "exclus": 187, "charg": 187, "royalti": 187, "free": [187, 189], "irrevoc": 187, "reproduc": 187, "publicli": 187, "sublicens": 187, "patent": 187, "offer": 187, "sell": 187, "claim": 187, "infring": 187, "alon": 187, "institut": 187, "litig": 187, "counterclaim": 187, "lawsuit": 187, "alleg": 187, "contributori": 187, "termin": 187, "redistribut": 187, "medium": 187, "meet": 187, "recipi": 187, "promin": 187, "trademark": 187, "pertain": 187, "along": 187, "wherev": 187, "third": 187, "parti": 187, "alongsid": 187, "addendum": 187, "constru": 187, "statement": [187, 188], "compli": 187, "submiss": 187, "notwithstand": 187, "herein": 187, "supersed": 187, "agreement": 187, "regard": 187, "6": 187, "trade": 187, "servic": 187, "customari": 187, "7": 187, "disclaim": 187, "warranti": 187, "law": 187, "agre": 187, "AS": 187, "OR": 187, "OF": 187, "kind": 187, "titl": 187, "merchant": 187, "sole": 187, "risk": 187, "liabil": 187, "event": 187, "theori": 187, "tort": 187, "neglig": 187, "deliber": 187, "grossli": 187, "liabl": 187, "damag": 187, "incident": 187, "consequenti": 187, "inabl": 187, "loss": 187, "goodwil": 187, "stoppag": 187, "failur": 187, "malfunct": 187, "commerci": 187, "fee": 187, "indemn": 187, "oblig": 187, "indemnifi": 187, "harmless": 187, "incur": 187, "assert": 187, "boilerpl": 187, "enclos": 187, "bracket": 187, "comment": 187, "recommend": 187, "easier": 187, "identif": 187, "archiv": 187, "2024": 187, "complianc": 187, "govern": 187, "show": 188, "flexibl": 188, "goal": 188, "finit": 188, "condition": 188, "qccsw": 188, "excut": 188, "last": [188, 190], "too": 188, "earli": 188, "facilit": 188, "effici": 188, "travel": 188, "conditionalinstrucion": 188, "equaival": 188, "feedaback_kei": 188, "reset_qb2": 188, "set_qb3_to_1": 188, "cc_prx_qb4": 188, "2nd": [188, 189], "prx_qb3": 188, "prx_qb4": 188, "80e": [188, 190], "clariti": 188, "bottom": 188, "master": 188, "slave": 188, "compens": 188, "trigger_delai": 188, "explan": 188, "end_delai": 188, "spcecifi": 188, "trigger_mast": 188, "emit": 188, "daisi": 188, "central": 188, "cabl": 188, "john": 189, "m": 189, "martini": 189, "michael": 189, "geller": 189, "_z": 189, "phy": 189, "rev": 189, "022307": 189, "aug": 189, "2014": 189, "arxiv": 189, "1402": 189, "5467": 189, "doi": 189, "1103": 189, "physreva": 189, "lyon": 189, "digit": 189, "prentic": 189, "hall": 189, "edit": 189, "isbn": 189, "978": 189, "0131089891": 189, "cecilia": 189, "gisel": 189, "jarn": 189, "heurist": 189, "approach": 189, "anal": 189, "afa": 189, "29": 189, "51": 189, "57": 189, "2018": 189, "1703": 189, "06812": 189, "31527": 189, "analesafa": 189, "eyob": 189, "sete": 189, "nicola": 189, "didier": 189, "angela": 189, "chen": 189, "shobhan": 189, "kulshreshtha": 189, "riccardo": 189, "manenti": 189, "stefano": 189, "poletto": 189, "entangl": 189, "appl": 189, "024050": 189, "2021": 189, "2104": 189, "03511": 189, "physrevappli": 189, "youngkyu": 189, "sung": 189, "leon": 189, "ding": 189, "jochen": 189, "braum\u00fcller": 189, "antti": 189, "veps\u00e4l\u00e4inen": 189, "bharath": 189, "kannan": 189, "morten": 189, "kjaergaard": 189, "ami": 189, "green": 189, "gabriel": 189, "o": 189, "samach": 189, "chri": 189, "mcnalli": 189, "david": 189, "kim": 189, "alexand": 189, "melvil": 189, "bethani": 189, "niedzielski": 189, "molli": 189, "schwartz": 189, "jonilyn": 189, "l": 189, "yoder": 189, "terri": 189, "orlando": 189, "simon": 189, "gustavsson": 189, "william": 189, "oliv": 189, "fidel": 189, "zz": 189, "021058": 189, "jun": 189, "2011": 189, "01261": 189, "physrevx": 189, "capabl": 190, "ask": 190, "recogn": 190, "cz_gate_impl": 190, "prx_gate_impl": 190, "measure_gate_impl": 190, "keyword": 190, "instanti": 190, "x180": 190, "y90": 190, "100e": 190, "decid": 190, "p1": 190, "p2": 190, "handi": 190, "circuit3": 190, "sub": 190, "word": 190, "slide": 190, "past": 190, "neighbour": 190, "neighbourhood": 190, "worri": 190, "advers": 190, "ruin": 190, "best": 190, "arrang": 190, "aid": 190, "discov": 190, "all_qubit": 190, "get_neighbor_locus_compon": 190, "160e": 190, "cz_schedul": 190, "forget": 190}, "objects": {"iqm": [[1, 0, 0, "-", "pulse"]], "iqm.pulse": [[2, 0, 0, "-", "base_utils"], [4, 0, 0, "-", "builder"], [10, 0, 0, "-", "circuit_operations"], [16, 0, 0, "-", "gate_implementation"], [33, 0, 0, "-", "gates"], [107, 0, 0, "-", "playlist"], [151, 0, 0, "-", "quantum_ops"], [156, 0, 0, "-", "scheduler"], [164, 0, 0, "-", "timebox"], [169, 0, 0, "-", "utils"], [174, 0, 0, "-", "validation"]], "iqm.pulse.base_utils": [[3, 1, 1, "", "merge_dicts"]], "iqm.pulse.builder": [[5, 2, 1, "", "CircuitOperation"], [6, 2, 1, "", "ScheduleBuilder"], [7, 1, 1, "", "build_quantum_ops"], [8, 1, 1, "", "load_config"], [9, 1, 1, "", "validate_quantum_circuit"]], "iqm.pulse.builder.CircuitOperation": [[5, 3, 1, "", "args"], [5, 3, 1, "", "implementation"], [5, 3, 1, "", "locus"], [5, 3, 1, "", "name"], [5, 4, 1, "", "validate"]], "iqm.pulse.builder.ScheduleBuilder": [[6, 4, 1, "", "_block_neighborhood_tetris"], [6, 3, 1, "", "_cache"], [6, 3, 1, "", "_channel_templates"], [6, 3, 1, "", "_channel_to_component"], [6, 3, 1, "", "_channel_types"], [6, 4, 1, "", "_find_implementation_and_locus"], [6, 4, 1, "", "_finish_schedule"], [6, 4, 1, "", "_fuse_long_distance_virtual_rzs"], [6, 4, 1, "", "_get_channel_for_component"], [6, 4, 1, "", "_get_implementation"], [6, 4, 1, "", "_get_neighborhood_hard_boundary"], [6, 3, 1, "", "_require_scheduling_in_seconds"], [6, 4, 1, "", "_resolve_timebox_hard_boundary"], [6, 4, 1, "", "_resolve_timebox_tetris"], [6, 4, 1, "", "_set_gate_implementation_shortcut"], [6, 4, 1, "", "build_playlist"], [6, 4, 1, "", "circuit_to_timebox"], [6, 3, 1, "", "composite_cache"], [6, 4, 1, "", "get_calibration"], [6, 4, 1, "", "get_control_channels"], [6, 4, 1, "", "get_drive_channel"], [6, 4, 1, "", "get_flux_channel"], [6, 4, 1, "", "get_implementation"], [6, 4, 1, "", "get_implementation_class"], [6, 4, 1, "", "get_probe_channel"], [6, 4, 1, "", "get_virtual_feedback_channel_for"], [6, 4, 1, "", "get_virtual_feedback_channels"], [6, 4, 1, "", "has_calibration"], [6, 4, 1, "", "inject_calibration"], [6, 4, 1, "", "resolve_timebox"], [6, 4, 1, "", "timebox_to_schedule"], [6, 4, 1, "", "timeboxes_to_front_padded_playlist"], [6, 4, 1, "", "timeboxes_to_playlist"], [6, 4, 1, "", "validate_calibration"], [6, 4, 1, "", "validate_quantum_circuit"], [6, 4, 1, "", "wait"]], "iqm.pulse.circuit_operations": [[11, 2, 1, "", "CircuitOperationList"], [12, 1, 1, "", "get_unitary_from_circuit"], [13, 1, 1, "", "get_unitary_from_op"], [14, 1, 1, "", "reorder"], [15, 1, 1, "", "reshape_unitary"]], "iqm.pulse.circuit_operations.CircuitOperationList": [[11, 4, 1, "", "_set_specific_operation_shortcut"], [11, 4, 1, "", "add_op"], [11, 4, 1, "", "add_qubits"], [11, 4, 1, "", "barrier"], [11, 4, 1, "", "compose"], [11, 4, 1, "", "count_ops"], [11, 4, 1, "", "find_qubits"], [11, 4, 1, "", "get_unitary"], [11, 4, 1, "", "map_loci"]], "iqm.pulse.gate_implementation": [[17, 2, 1, "", "CompositeCache"], [18, 2, 1, "", "CompositeGate"], [19, 2, 1, "", "CustomIQWaveforms"], [20, 2, 1, "", "GateImplementation"], [21, 6, 1, "", "Locus"], [22, 6, 1, "", "NestedParams"], [23, 6, 1, "", "OCalibrationData"], [24, 6, 1, "", "OICalibrationData"], [25, 6, 1, "", "OILCalibrationData"], [26, 6, 1, "", "OpCalibrationDataTree"], [27, 6, 1, "", "PROBE_LINES_LOCUS_MAPPING"], [28, 6, 1, "", "SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING"], [29, 6, 1, "", "SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING"], [30, 6, 1, "", "SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING"], [31, 2, 1, "", "SinglePulseGate"], [32, 1, 1, "", "get_waveform_parameters"]], "iqm.pulse.gate_implementation.CompositeCache": [[17, 4, 1, "", "flush"], [17, 4, 1, "", "get"], [17, 4, 1, "", "set"]], "iqm.pulse.gate_implementation.CompositeGate": [[18, 4, 1, "", "build"], [18, 3, 1, "", "default_implementations"], [18, 3, 1, "", "registered_gates"]], "iqm.pulse.gate_implementation.CustomIQWaveforms": [[19, 3, 1, "", "dependent_waves"], [19, 3, 1, "", "excluded_parameters"], [19, 3, 1, "", "root_parameters"], [19, 3, 1, "", "wave_i"], [19, 3, 1, "", "wave_q"]], "iqm.pulse.gate_implementation.GateImplementation": [[20, 4, 1, "", "_call"], [20, 4, 1, "", "build"], [20, 4, 1, "", "convert_calibration_data"], [20, 4, 1, "", "duration_in_seconds"], [20, 4, 1, "", "get_custom_locus_mapping"], [20, 4, 1, "", "get_locus_mapping_name"], [20, 4, 1, "", "get_parameters"], [20, 4, 1, "", "needs_calibration"], [20, 3, 1, "", "parameters"], [20, 5, 1, "", "qualified_name"], [20, 3, 1, "", "special_implementation"], [20, 3, 1, "", "symmetric"], [20, 4, 1, "", "to_timebox"]], "iqm.pulse.gate_implementation.SinglePulseGate": [[31, 4, 1, "", "_call"], [31, 4, 1, "", "_get_pulse"], [31, 4, 1, "", "_get_pulse_channel"], [31, 4, 1, "", "duration_in_seconds"]], "iqm.pulse.gates": [[34, 0, 0, "-", "barrier"], [36, 0, 0, "-", "conditional"], [40, 0, 0, "-", "cz"], [52, 0, 0, "-", "default_gates"], [53, 0, 0, "-", "delay"], [56, 0, 0, "-", "enums"], [61, 1, 1, "", "expose_implementation"], [62, 0, 0, "-", "flux_multiplexer"], [65, 1, 1, "", "get_implementation_class"], [66, 0, 0, "-", "measure"], [71, 0, 0, "-", "move"], [78, 0, 0, "-", "prx"], [90, 1, 1, "", "register_implementation"], [91, 0, 0, "-", "reset"], [96, 0, 0, "-", "rz"], [102, 0, 0, "-", "sx"], [104, 0, 0, "-", "u"]], "iqm.pulse.gates.barrier": [[35, 2, 1, "", "Barrier"]], "iqm.pulse.gates.barrier.Barrier": [[35, 4, 1, "", "_call"], [35, 4, 1, "", "duration_in_seconds"], [35, 3, 1, "", "symmetric"]], "iqm.pulse.gates.conditional": [[37, 2, 1, "", "CCPRX_Composite"], [38, 2, 1, "", "CCPRX_Composite_DRAGCosineRiseFall"], [39, 2, 1, "", "CCPRX_Composite_DRAGGaussian"]], "iqm.pulse.gates.conditional.CCPRX_Composite": [[37, 4, 1, "", "_call"], [37, 3, 1, "", "parameters"]], "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall": [[38, 3, 1, "", "default_implementations"]], "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian": [[39, 3, 1, "", "default_implementations"]], "iqm.pulse.gates.cz": [[41, 2, 1, "", "CZ_CRF"], [42, 2, 1, "", "CZ_CRF_ACStarkCRF"], [43, 2, 1, "", "CZ_GaussianSmoothedSquare"], [44, 2, 1, "", "CZ_Slepian"], [45, 2, 1, "", "CZ_Slepian_ACStarkCRF"], [46, 2, 1, "", "CZ_Slepian_CRF"], [47, 2, 1, "", "CZ_TruncatedGaussianSmoothedSquare"], [48, 2, 1, "", "CouplerFluxPulseQubitACStarkPulseGate"], [49, 2, 1, "", "FluxPulseGate"], [50, 2, 1, "", "FluxPulseGate_CRF_CRF"], [51, 2, 1, "", "FluxPulseGate_TGSS_CRF"]], "iqm.pulse.gates.cz.CZ_CRF": [[41, 3, 1, "", "coupler_wave"], [41, 3, 1, "", "parameters"], [41, 3, 1, "", "qubit_wave"], [41, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF": [[42, 3, 1, "", "coupler_wave"], [42, 3, 1, "", "parameters"], [42, 3, 1, "", "qubit_drive_wave"], [42, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare": [[43, 3, 1, "", "coupler_wave"], [43, 3, 1, "", "parameters"], [43, 3, 1, "", "qubit_wave"], [43, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_Slepian": [[44, 3, 1, "", "coupler_wave"], [44, 3, 1, "", "parameters"], [44, 3, 1, "", "qubit_wave"], [44, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF": [[45, 3, 1, "", "coupler_wave"], [45, 3, 1, "", "parameters"], [45, 3, 1, "", "qubit_drive_wave"], [45, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_Slepian_CRF": [[46, 3, 1, "", "coupler_wave"], [46, 3, 1, "", "parameters"], [46, 3, 1, "", "qubit_wave"], [46, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare": [[47, 3, 1, "", "coupler_wave"], [47, 3, 1, "", "parameters"], [47, 3, 1, "", "qubit_wave"], [47, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate": [[48, 4, 1, "", "_ac_stark_pulse"], [48, 4, 1, "", "_call"], [48, 3, 1, "", "coupler_wave"], [48, 4, 1, "", "duration_in_seconds"], [48, 3, 1, "", "excluded_parameters"], [48, 4, 1, "", "get_locus_mapping_name"], [48, 3, 1, "", "qubit_drive_wave"]], "iqm.pulse.gates.cz.FluxPulseGate": [[49, 4, 1, "", "_call"], [49, 3, 1, "", "coupler_wave"], [49, 4, 1, "", "duration_in_seconds"], [49, 3, 1, "", "excluded_parameters"], [49, 4, 1, "", "get_locus_mapping_name"], [49, 3, 1, "", "qubit_wave"], [49, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF": [[50, 3, 1, "", "coupler_wave"], [50, 3, 1, "", "parameters"], [50, 3, 1, "", "qubit_wave"], [50, 3, 1, "", "symmetric"]], "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF": [[51, 3, 1, "", "coupler_wave"], [51, 3, 1, "", "parameters"], [51, 3, 1, "", "qubit_wave"], [51, 3, 1, "", "symmetric"]], "iqm.pulse.gates.delay": [[54, 6, 1, "", "DELAY_MAX_DURATION_SECONDS"], [55, 2, 1, "", "Delay"]], "iqm.pulse.gates.delay.Delay": [[55, 4, 1, "", "_call"], [55, 3, 1, "", "symmetric"]], "iqm.pulse.gates.enums": [[57, 6, 1, "", "TWO_QUBIT_UNITARIES"], [58, 2, 1, "", "TwoQubitGate"], [59, 6, 1, "", "XYGATE_UNITARIES"], [60, 2, 1, "", "XYGate"]], "iqm.pulse.gates.enums.TwoQubitGate": [[58, 3, 1, "", "CZ"], [58, 3, 1, "", "ISWAP"], [58, 3, 1, "", "SQRT_ISWAP"]], "iqm.pulse.gates.flux_multiplexer": [[63, 2, 1, "", "FluxMultiplexer_SampleLinear"], [64, 6, 1, "", "TOLERANCE"]], "iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear": [[63, 4, 1, "", "get_custom_locus_mapping"], [63, 3, 1, "", "parameters"]], "iqm.pulse.gates.measure": [[67, 2, 1, "", "Measure_Constant"], [68, 2, 1, "", "Measure_Constant_Qnd"], [69, 2, 1, "", "Measure_CustomWaveforms"], [70, 2, 1, "", "ProbePulse_CustomWaveforms"]], "iqm.pulse.gates.measure.Measure_Constant": [[67, 3, 1, "", "dependent_waves"], [67, 3, 1, "", "parameters"], [67, 3, 1, "", "wave_i"], [67, 3, 1, "", "wave_q"]], "iqm.pulse.gates.measure.Measure_Constant_Qnd": [[68, 3, 1, "", "dependent_waves"], [68, 3, 1, "", "parameters"], [68, 3, 1, "", "wave_i"], [68, 3, 1, "", "wave_q"]], "iqm.pulse.gates.measure.Measure_CustomWaveforms": [[69, 4, 1, "", "_build_instructions"], [69, 4, 1, "", "_call"], [69, 3, 1, "", "_multiplexed_timeboxes"], [69, 3, 1, "", "_time_traces"], [69, 3, 1, "", "dependent_waves"], [69, 4, 1, "", "duration_in_seconds"], [69, 4, 1, "", "get_locus_mapping_name"], [69, 4, 1, "", "probe_timebox"], [69, 3, 1, "", "root_parameters"], [69, 4, 1, "", "time_trace"]], "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms": [[70, 4, 1, "", "_build_instructions"], [70, 4, 1, "", "_call"], [70, 3, 1, "", "dependent_waves"], [70, 4, 1, "", "duration_in_seconds"], [70, 4, 1, "", "get_locus_mapping_name"], [70, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.move": [[72, 2, 1, "", "MOVE_CRF_CRF"], [73, 2, 1, "", "MOVE_CustomWaveforms"], [74, 2, 1, "", "MOVE_TGSS_CRF"], [75, 2, 1, "", "MoveMarker"], [76, 1, 1, "", "apply_move_gate_phase_corrections"], [77, 1, 1, "", "validate_move_instructions"]], "iqm.pulse.gates.move.MOVE_CRF_CRF": [[72, 3, 1, "", "coupler_wave"], [72, 3, 1, "", "parameters"], [72, 3, 1, "", "qubit_wave"], [72, 3, 1, "", "symmetric"]], "iqm.pulse.gates.move.MOVE_CustomWaveforms": [[73, 4, 1, "", "_call"], [73, 3, 1, "", "coupler_wave"], [73, 3, 1, "", "parameters"], [73, 3, 1, "", "qubit_wave"], [73, 3, 1, "", "root_parameters"], [73, 3, 1, "", "symmetric"]], "iqm.pulse.gates.move.MOVE_TGSS_CRF": [[74, 3, 1, "", "coupler_wave"], [74, 3, 1, "", "parameters"], [74, 3, 1, "", "qubit_wave"], [74, 3, 1, "", "symmetric"]], "iqm.pulse.gates.move.MoveMarker": [[75, 3, 1, "", "duration"]], "iqm.pulse.gates.prx": [[79, 2, 1, "", "ABC_Constant_smooth"], [80, 2, 1, "", "Constant_PRX_with_smooth_rise_fall"], [81, 2, 1, "", "PRX_CustomWaveforms"], [82, 2, 1, "", "PRX_CustomWaveformsSX"], [83, 2, 1, "", "PRX_DRAGCosineRiseFall"], [84, 2, 1, "", "PRX_DRAGCosineRiseFallSX"], [85, 2, 1, "", "PRX_DRAGGaussian"], [86, 2, 1, "", "PRX_DRAGGaussianSX"], [87, 2, 1, "", "PRX_GateImplementation"], [88, 2, 1, "", "PRX_SinglePulse_GateImplementation"], [89, 1, 1, "", "get_unitary_prx"]], "iqm.pulse.gates.prx.ABC_Constant_smooth": [[79, 4, 1, "", "_call"], [79, 4, 1, "", "_fall_pulse"], [79, 4, 1, "", "_main_pulse"], [79, 4, 1, "", "_rise_pulse"]], "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall": [[80, 3, 1, "", "fall_waveform"], [80, 3, 1, "", "main_waveform"], [80, 3, 1, "", "parameters"], [80, 3, 1, "", "rise_waveform"], [80, 3, 1, "", "symmetric"]], "iqm.pulse.gates.prx.PRX_CustomWaveforms": [[81, 4, 1, "", "_get_pulse"], [81, 3, 1, "", "dependent_waves"], [81, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.prx.PRX_CustomWaveformsSX": [[82, 4, 1, "", "_call"], [82, 4, 1, "", "_get_pulse"], [82, 3, 1, "", "dependent_waves"], [82, 3, 1, "", "root_parameters"]], "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall": [[83, 4, 1, "", "_get_pulse"], [83, 3, 1, "", "dependent_waves"], [83, 3, 1, "", "excluded_parameters"], [83, 3, 1, "", "parameters"], [83, 3, 1, "", "wave_i"], [83, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX": [[84, 4, 1, "", "_get_pulse"], [84, 3, 1, "", "dependent_waves"], [84, 3, 1, "", "excluded_parameters"], [84, 3, 1, "", "parameters"], [84, 3, 1, "", "wave_i"], [84, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_DRAGGaussian": [[85, 3, 1, "", "dependent_waves"], [85, 3, 1, "", "parameters"], [85, 3, 1, "", "wave_i"], [85, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_DRAGGaussianSX": [[86, 3, 1, "", "dependent_waves"], [86, 3, 1, "", "parameters"], [86, 3, 1, "", "wave_i"], [86, 3, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_GateImplementation": [[87, 4, 1, "", "_call"], [87, 4, 1, "", "clifford"], [87, 4, 1, "", "get_locus_mapping_name"], [87, 4, 1, "", "rx"], [87, 4, 1, "", "ry"]], "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation": [[88, 4, 1, "", "_call"], [88, 5, 1, "", "iq_pulse"]], "iqm.pulse.gates.reset": [[92, 6, 1, "", "RESET_FEEDBACK_KEY"], [93, 6, 1, "", "RESET_MEASUREMENT_KEY"], [94, 2, 1, "", "Reset_Conditional"], [95, 2, 1, "", "Reset_Wait"]], "iqm.pulse.gates.reset.Reset_Conditional": [[94, 4, 1, "", "_call"], [94, 4, 1, "", "get_locus_mapping_name"], [94, 3, 1, "", "registered_gates"]], "iqm.pulse.gates.reset.Reset_Wait": [[95, 4, 1, "", "_call"], [95, 4, 1, "", "duration_in_seconds"], [95, 4, 1, "", "get_custom_locus_mapping"], [95, 3, 1, "", "parameters"], [95, 4, 1, "", "wait_box"]], "iqm.pulse.gates.rz": [[97, 2, 1, "", "RZ_ACStarkShift"], [98, 2, 1, "", "RZ_ACStarkShift_CosineRiseFall"], [99, 2, 1, "", "RZ_ACStarkShift_smoothConstant"], [100, 2, 1, "", "RZ_Virtual"], [101, 1, 1, "", "get_unitary_rz"]], "iqm.pulse.gates.rz.RZ_ACStarkShift": [[97, 4, 1, "", "_ac_stark_pulse"], [97, 4, 1, "", "_call"], [97, 4, 1, "", "duration_in_seconds"]], "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall": [[98, 3, 1, "", "ac_stark_waveform"], [98, 3, 1, "", "parameters"], [98, 3, 1, "", "symmetric"]], "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant": [[99, 3, 1, "", "fall_waveform"], [99, 3, 1, "", "main_waveform"], [99, 3, 1, "", "parameters"], [99, 3, 1, "", "rise_waveform"], [99, 3, 1, "", "symmetric"]], "iqm.pulse.gates.rz.RZ_Virtual": [[100, 4, 1, "", "_call"], [100, 4, 1, "", "duration_in_seconds"], [100, 4, 1, "", "get_locus_mapping_name"], [100, 3, 1, "", "parameters"]], "iqm.pulse.gates.sx": [[103, 2, 1, "", "SXGate"]], "iqm.pulse.gates.sx.SXGate": [[103, 4, 1, "", "_call"], [103, 3, 1, "", "registered_gates"]], "iqm.pulse.gates.u": [[105, 2, 1, "", "UGate"], [106, 1, 1, "", "get_unitary_u"]], "iqm.pulse.gates.u.UGate": [[105, 4, 1, "", "_call"], [105, 3, 1, "", "registered_gates"]], "iqm.pulse.playlist": [[108, 0, 0, "-", "channel"], [118, 0, 0, "-", "instructions"], [133, 0, 0, "-", "playlist"], [134, 0, 0, "-", "schedule"], [139, 0, 0, "-", "visualisation"], [142, 0, 0, "-", "waveforms"]], "iqm.pulse.playlist.channel": [[109, 2, 1, "", "ChannelConfiguration"], [110, 2, 1, "", "ChannelDescription"], [111, 2, 1, "", "ChannelProperties"], [112, 2, 1, "", "IQChannelConfig"], [113, 2, 1, "", "ProbeChannelProperties"], [114, 2, 1, "", "RealChannelConfig"], [115, 1, 1, "", "get_channel_properties"], [116, 1, 1, "", "get_channel_properties_from_station_settings"], [117, 1, 1, "", "round_duration_to_granularity_samples"]], "iqm.pulse.playlist.channel.ChannelDescription": [[110, 4, 1, "", "add_instruction"]], "iqm.pulse.playlist.channel.ChannelProperties": [[111, 3, 1, "", "blocks_component"], [111, 3, 1, "", "compatible_instructions"], [111, 4, 1, "", "duration_to_int_samples"], [111, 4, 1, "", "duration_to_samples"], [111, 4, 1, "", "duration_to_seconds"], [111, 3, 1, "", "instruction_duration_granularity"], [111, 3, 1, "", "instruction_duration_min"], [111, 3, 1, "", "is_iq"], [111, 3, 1, "", "is_virtual"], [111, 4, 1, "", "round_duration_to_granularity"], [111, 3, 1, "", "sample_rate"]], "iqm.pulse.playlist.channel.IQChannelConfig": [[112, 3, 1, "", "frequency"]], "iqm.pulse.playlist.channel.ProbeChannelProperties": [[113, 3, 1, "", "center_frequency"], [113, 3, 1, "", "integration_start_dead_time"], [113, 3, 1, "", "integration_stop_dead_time"]], "iqm.pulse.playlist.channel.RealChannelConfig": [[114, 3, 1, "", "sample_rate"]], "iqm.pulse.playlist.instructions": [[119, 2, 1, "", "AcquisitionMethod"], [120, 2, 1, "", "Block"], [121, 2, 1, "", "ComplexIntegration"], [122, 2, 1, "", "ConditionalInstruction"], [123, 2, 1, "", "FluxPulse"], [124, 2, 1, "", "IQPulse"], [125, 2, 1, "", "Instruction"], [126, 2, 1, "", "MultiplexedIQPulse"], [127, 2, 1, "", "ReadoutTrigger"], [128, 2, 1, "", "RealPulse"], [129, 2, 1, "", "ThresholdStateDiscrimination"], [130, 2, 1, "", "TimeTrace"], [131, 2, 1, "", "VirtualRZ"], [132, 2, 1, "", "Wait"]], "iqm.pulse.playlist.instructions.AcquisitionMethod": [[119, 3, 1, "", "delay_samples"], [119, 3, 1, "", "label"]], "iqm.pulse.playlist.instructions.ComplexIntegration": [[121, 3, 1, "", "weights"]], "iqm.pulse.playlist.instructions.ConditionalInstruction": [[122, 3, 1, "", "condition"], [122, 4, 1, "", "get_child_instructions"], [122, 3, 1, "", "outcomes"], [122, 4, 1, "", "validate"]], "iqm.pulse.playlist.instructions.FluxPulse": [[123, 3, 1, "", "rzs"]], "iqm.pulse.playlist.instructions.IQPulse": [[124, 4, 1, "", "get_waveforms"], [124, 3, 1, "", "modulation_frequency"], [124, 3, 1, "", "phase"], [124, 3, 1, "", "phase_increment"], [124, 3, 1, "", "scale_i"], [124, 3, 1, "", "scale_q"], [124, 4, 1, "", "validate"], [124, 3, 1, "", "wave_i"], [124, 3, 1, "", "wave_q"]], "iqm.pulse.playlist.instructions.Instruction": [[125, 4, 1, "", "copy"], [125, 3, 1, "", "duration"], [125, 4, 1, "", "get_child_instructions"], [125, 4, 1, "", "get_waveforms"], [125, 4, 1, "", "validate"]], "iqm.pulse.playlist.instructions.MultiplexedIQPulse": [[126, 3, 1, "", "entries"]], "iqm.pulse.playlist.instructions.ReadoutTrigger": [[127, 3, 1, "", "acquisitions"], [127, 3, 1, "", "probe_pulse"]], "iqm.pulse.playlist.instructions.RealPulse": [[128, 4, 1, "", "get_waveforms"], [128, 3, 1, "", "scale"], [128, 4, 1, "", "validate"], [128, 3, 1, "", "wave"]], "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination": [[129, 3, 1, "", "feedback_signal_label"], [129, 3, 1, "", "threshold"]], "iqm.pulse.playlist.instructions.TimeTrace": [[130, 3, 1, "", "duration_samples"]], "iqm.pulse.playlist.instructions.VirtualRZ": [[131, 3, 1, "", "phase_increment"]], "iqm.pulse.playlist.schedule": [[135, 2, 1, "", "Nothing"], [136, 2, 1, "", "Schedule"], [137, 2, 1, "", "Segment"], [138, 6, 1, "", "TOLERANCE"]], "iqm.pulse.playlist.schedule.Schedule": [[136, 4, 1, "", "add_channels"], [136, 4, 1, "", "append"], [136, 4, 1, "", "channels"], [136, 4, 1, "", "cleanup"], [136, 4, 1, "", "copy"], [136, 5, 1, "", "duration"], [136, 4, 1, "", "duration_in_seconds"], [136, 4, 1, "", "extend"], [136, 4, 1, "", "front_pad"], [136, 4, 1, "", "front_pad_in_seconds"], [136, 4, 1, "", "has_content_in"], [136, 4, 1, "", "items"], [136, 4, 1, "", "pad_to_hard_box"], [136, 4, 1, "", "pad_to_hard_box_in_seconds"], [136, 4, 1, "", "pprint"], [136, 4, 1, "", "reverse"], [136, 4, 1, "", "reverse_hard_box"], [136, 4, 1, "", "validate"]], "iqm.pulse.playlist.schedule.Segment": [[137, 3, 1, "", "_duration"], [137, 3, 1, "", "_instructions"], [137, 4, 1, "", "append"], [137, 4, 1, "", "copy"], [137, 5, 1, "", "duration"], [137, 4, 1, "", "extend"], [137, 4, 1, "", "pop"], [137, 4, 1, "", "prepend"]], "iqm.pulse.playlist.visualisation": [[140, 0, 0, "-", "base"]], "iqm.pulse.playlist.visualisation.base": [[141, 1, 1, "", "inspect_playlist"]], "iqm.pulse.playlist.waveforms": [[143, 2, 1, "", "Chirp"], [144, 2, 1, "", "ChirpImag"], [145, 2, 1, "", "Cosine"], [146, 2, 1, "", "CosineFall"], [147, 2, 1, "", "CosineRise"], [148, 2, 1, "", "CosineRiseFallDerivative"], [149, 2, 1, "", "ModulatedCosineRiseFall"], [150, 2, 1, "", "Slepian"]], "iqm.pulse.playlist.waveforms.Chirp": [[143, 4, 1, "", "_sample"], [143, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.ChirpImag": [[144, 3, 1, "", "phase"]], "iqm.pulse.playlist.waveforms.Cosine": [[145, 4, 1, "", "_sample"], [145, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.CosineFall": [[146, 4, 1, "", "_sample"]], "iqm.pulse.playlist.waveforms.CosineRise": [[147, 4, 1, "", "_sample"]], "iqm.pulse.playlist.waveforms.CosineRiseFallDerivative": [[148, 4, 1, "", "_sample"]], "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall": [[149, 4, 1, "", "_sample"], [149, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.Slepian": [[150, 4, 1, "", "_sample"], [150, 4, 1, "", "_sample_normalized_slepian"], [150, 4, 1, "", "_t_tau"], [150, 4, 1, "", "_theta_tau"], [150, 4, 1, "", "non_timelike_attributes"]], "iqm.pulse.quantum_ops": [[152, 2, 1, "", "QuantumOp"], [153, 6, 1, "", "QuantumOpTable"], [154, 1, 1, "", "validate_locus_calibration"], [155, 1, 1, "", "validate_op_calibration"]], "iqm.pulse.quantum_ops.QuantumOp": [[152, 3, 1, "", "arity"], [152, 4, 1, "", "copy"], [152, 5, 1, "", "default_implementation"], [152, 3, 1, "", "defaults_for_locus"], [152, 3, 1, "", "factorizable"], [152, 4, 1, "", "get_default_implementation_for_locus"], [152, 3, 1, "", "implementations"], [152, 3, 1, "", "name"], [152, 3, 1, "", "params"], [152, 4, 1, "", "set_default_implementation"], [152, 4, 1, "", "set_default_implementation_for_locus"], [152, 3, 1, "", "symmetric"], [152, 3, 1, "", "unitary"]], "iqm.pulse.scheduler": [[157, 6, 1, "", "BLOCKING"], [158, 6, 1, "", "NONSOLID"], [159, 2, 1, "", "SegmentPointer"], [160, 1, 1, "", "extend_hard_boundary"], [161, 1, 1, "", "extend_hard_boundary_in_seconds"], [162, 1, 1, "", "extend_schedule"], [163, 1, 1, "", "extend_schedule_new"]], "iqm.pulse.scheduler.SegmentPointer": [[159, 3, 1, "", "TOL"], [159, 4, 1, "", "cut_tail"], [159, 4, 1, "", "fastforward"], [159, 3, 1, "", "frac"], [159, 4, 1, "", "get"], [159, 3, 1, "", "idx"], [159, 4, 1, "", "next"], [159, 5, 1, "", "remainder"], [159, 4, 1, "", "rewind"], [159, 3, 1, "", "source"], [159, 4, 1, "", "tail"]], "iqm.pulse.timebox": [[165, 2, 1, "", "MultiplexedProbeTimeBox"], [166, 2, 1, "", "SchedulingAlgorithm"], [167, 2, 1, "", "SchedulingStrategy"], [168, 2, 1, "", "TimeBox"]], "iqm.pulse.timebox.MultiplexedProbeTimeBox": [[165, 4, 1, "", "from_readout_trigger"]], "iqm.pulse.timebox.SchedulingAlgorithm": [[166, 3, 1, "", "HARD_BOUNDARY"], [166, 3, 1, "", "TETRIS"]], "iqm.pulse.timebox.SchedulingStrategy": [[167, 3, 1, "", "ALAP"], [167, 3, 1, "", "ASAP"]], "iqm.pulse.timebox.TimeBox": [[168, 3, 1, "", "atom"], [168, 4, 1, "", "atomic"], [168, 3, 1, "", "children"], [168, 4, 1, "", "composite"], [168, 3, 1, "", "label"], [168, 3, 1, "", "locus_components"], [168, 3, 1, "", "neighborhood_components"], [168, 4, 1, "", "print"], [168, 3, 1, "", "scheduling"], [168, 3, 1, "", "scheduling_algorithm"], [168, 4, 1, "", "set_alap"], [168, 4, 1, "", "set_asap"], [168, 4, 1, "", "validate"]], "iqm.pulse.utils": [[170, 1, 1, "", "load_yaml"], [171, 1, 1, "", "map_waveform_param_types"], [172, 1, 1, "", "normalize_angle"], [173, 1, 1, "", "phase_transformation"]], "iqm.pulse.validation": [[175, 2, 1, "", "AWGScheduleValidationData"], [176, 7, 1, "", "AWGScheduleValidationError"], [177, 7, 1, "", "InvalidInstructionError"], [178, 7, 1, "", "PlaylistValidationError"], [179, 1, 1, "", "validate_awg_and_schedule_compatibility"], [180, 1, 1, "", "validate_channel"], [181, 1, 1, "", "validate_instruction_and_wf_length"], [182, 1, 1, "", "validate_playlist_compatibility"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:property", "6": "py:data", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "property", "Python property"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"api": 0, "refer": [0, 184, 189], "puls": [1, 3, 7, 8, 9, 12, 13, 14, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 54, 57, 59, 61, 64, 65, 76, 77, 89, 90, 92, 93, 101, 106, 115, 116, 117, 138, 141, 153, 154, 155, 157, 158, 160, 161, 162, 163, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 186, 188], "base_util": [2, 3], "iqm": [3, 7, 8, 9, 12, 13, 14, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 54, 57, 59, 61, 64, 65, 76, 77, 89, 90, 92, 93, 101, 106, 115, 116, 117, 138, 141, 153, 154, 155, 157, 158, 160, 161, 162, 163, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 186], "merge_dict": 3, "builder": [4, 7, 8, 9], "circuitoper": 5, "schedulebuild": [6, 190], "build_quantum_op": 7, "load_config": 8, "validate_quantum_circuit": 9, "circuit_oper": [10, 12, 13, 14, 15], "circuitoperationlist": 11, "get_unitary_from_circuit": 12, "get_unitary_from_op": 13, "reorder": 14, "reshape_unitari": 15, "gate_implement": [16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32], "compositecach": 17, "compositeg": 18, "customiqwaveform": 19, "gateimplement": [20, 184, 185], "locu": 21, "nestedparam": 22, "ocalibrationdata": 23, "oicalibrationdata": 24, "oilcalibrationdata": 25, "opcalibrationdatatre": 26, "probe_lines_locus_map": 27, "single_components_with_drive_locus_map": 28, "single_components_with_flux_awg_locus_map": 29, "single_components_with_readout_locus_map": 30, "singlepulseg": 31, "get_waveform_paramet": 32, "gate": [33, 54, 57, 59, 61, 64, 65, 76, 77, 89, 90, 92, 93, 101, 106, 185], "barrier": [34, 35], "condit": 36, "ccprx_composit": 37, "ccprx_composite_dragcosinerisefal": 38, "ccprx_composite_draggaussian": 39, "cz": 40, "cz_crf": 41, "cz_crf_acstarkcrf": 42, "cz_gaussiansmoothedsquar": 43, "cz_slepian": 44, "cz_slepian_acstarkcrf": 45, "cz_slepian_crf": 46, "cz_truncatedgaussiansmoothedsquar": 47, "couplerfluxpulsequbitacstarkpulseg": 48, "fluxpulseg": 49, "fluxpulsegate_crf_crf": 50, "fluxpulsegate_tgss_crf": 51, "default_g": 52, "delai": [53, 54, 55], "delay_max_duration_second": 54, "enum": [56, 57, 59], "two_qubit_unitari": 57, "twoqubitg": 58, "xygate_unitari": 59, "xygat": 60, "expose_implement": 61, "flux_multiplex": [62, 64], "fluxmultiplexer_samplelinear": 63, "toler": [64, 138], "get_implementation_class": 65, "measur": [66, 188], "measure_const": 67, "measure_constant_qnd": 68, "measure_customwaveform": 69, "probepulse_customwaveform": 70, "move": [71, 76, 77], "move_crf_crf": 72, "move_customwaveform": 73, "move_tgss_crf": 74, "movemark": 75, "apply_move_gate_phase_correct": 76, "validate_move_instruct": 77, "prx": [78, 89], "abc_constant_smooth": 79, "constant_prx_with_smooth_rise_fal": 80, "prx_customwaveform": 81, "prx_customwaveformssx": 82, "prx_dragcosinerisefal": 83, "prx_dragcosinerisefallsx": 84, "prx_draggaussian": 85, "prx_draggaussiansx": 86, "prx_gateimplement": 87, "prx_singlepulse_gateimplement": 88, "get_unitary_prx": 89, "register_implement": 90, "reset": [91, 92, 93], "reset_feedback_kei": 92, "reset_measurement_kei": 93, "reset_condit": 94, "reset_wait": 95, "rz": [96, 101], "rz_acstarkshift": 97, "rz_acstarkshift_cosinerisefal": 98, "rz_acstarkshift_smoothconst": 99, "rz_virtual": 100, "get_unitary_rz": 101, "sx": 102, "sxgate": 103, "u": [104, 106], "ugat": 105, "get_unitary_u": 106, "playlist": [107, 115, 116, 117, 133, 138, 141, 184], "channel": [108, 115, 116, 117], "channelconfigur": 109, "channeldescript": 110, "channelproperti": 111, "iqchannelconfig": 112, "probechannelproperti": 113, "realchannelconfig": 114, "get_channel_properti": 115, "get_channel_properties_from_station_set": 116, "round_duration_to_granularity_sampl": 117, "instruct": [118, 125, 184, 185], "acquisitionmethod": 119, "block": [120, 157], "complexintegr": 121, "conditionalinstruct": 122, "fluxpuls": 123, "iqpuls": 124, "multiplexediqpuls": 126, "readouttrigg": [127, 188], "realpuls": 128, "thresholdstatediscrimin": 129, "timetrac": 130, "virtualrz": 131, "wait": 132, "schedul": [134, 136, 138, 156, 157, 158, 160, 161, 162, 163, 184, 190], "noth": 135, "segment": 137, "visualis": [139, 141], "base": [140, 141, 185], "inspect_playlist": 141, "waveform": [142, 185], "chirp": 143, "chirpimag": 144, "cosin": 145, "cosinefal": 146, "cosineris": 147, "cosinerisefallderiv": 148, "modulatedcosinerisefal": 149, "slepian": 150, "quantum_op": [151, 153, 154, 155], "quantumop": [152, 184, 185], "quantumopt": 153, "validate_locus_calibr": 154, "validate_op_calibr": 155, "nonsolid": 158, "segmentpoint": 159, "extend_hard_boundari": 160, "extend_hard_boundary_in_second": 161, "extend_schedul": 162, "extend_schedule_new": 163, "timebox": [164, 168, 184, 190], "multiplexedprobetimebox": 165, "schedulingalgorithm": 166, "schedulingstrategi": 167, "util": [169, 170, 171, 172, 173], "load_yaml": 170, "map_waveform_param_typ": 171, "normalize_angl": 172, "phase_transform": 173, "valid": [174, 176, 177, 178, 179, 180, 181, 182], "awgschedulevalidationdata": 175, "awgschedulevalidationerror": 176, "invalidinstructionerror": 177, "playlistvalidationerror": 178, "validate_awg_and_schedule_compat": 179, "validate_channel": 180, "validate_instruction_and_wf_length": 181, "validate_playlist_compat": 182, "changelog": 183, "version": 183, "8": 183, "9": 183, "2025": 183, "03": 183, "28": 183, "featur": [183, 190], "7": 183, "27": 183, "6": 183, "26": 183, "5": 183, "bug": 183, "fix": 183, "4": 183, "21": 183, "3": 183, "19": 183, "2": 183, "13": 183, "1": 183, "02": 183, "0": 183, "24": 183, "20": 183, "23": 183, "22": 183, "10": 183, "07": 183, "04": 183, "18": 183, "17": 183, "16": 183, "15": 183, "01": 183, "14": 183, "12": 183, "11": 183, "08": 183, "2024": 183, "30": 183, "09": 183, "05": 183, "29": 183, "break": 183, "chang": 183, "31": 183, "25": 183, "06": 183, "concept": 184, "class": [184, 185], "quick": 184, "custom": 185, "implement": 185, "calibr": 185, "data": 185, "more": 185, "regist": 185, "content": 186, "indic": 186, "tabl": 186, "licens": 187, "time": 188, "fast": 188, "feedback": 188, "us": 190, "creat": 190, "compos": 190, "resolv": 190, "miscellan": 190, "common": 190, "pitfal": 190}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinxcontrib.bibtex": 9, "sphinx": 60}, "alltitles": {"API Reference": [[0, "api-reference"]], "pulse": [[1, "module-iqm.pulse"]], "base_utils": [[2, "module-iqm.pulse.base_utils"]], "iqm.pulse.base_utils.merge_dicts": [[3, "iqm-pulse-base-utils-merge-dicts"]], "builder": [[4, "module-iqm.pulse.builder"]], "CircuitOperation": [[5, "circuitoperation"]], "ScheduleBuilder": [[6, "schedulebuilder"]], "iqm.pulse.builder.build_quantum_ops": [[7, "iqm-pulse-builder-build-quantum-ops"]], "iqm.pulse.builder.load_config": [[8, "iqm-pulse-builder-load-config"]], "iqm.pulse.builder.validate_quantum_circuit": [[9, "iqm-pulse-builder-validate-quantum-circuit"]], "circuit_operations": [[10, "module-iqm.pulse.circuit_operations"]], "CircuitOperationList": [[11, "circuitoperationlist"]], "iqm.pulse.circuit_operations.get_unitary_from_circuit": [[12, "iqm-pulse-circuit-operations-get-unitary-from-circuit"]], "iqm.pulse.circuit_operations.get_unitary_from_op": [[13, "iqm-pulse-circuit-operations-get-unitary-from-op"]], "iqm.pulse.circuit_operations.reorder": [[14, "iqm-pulse-circuit-operations-reorder"]], "iqm.pulse.circuit_operations.reshape_unitary": [[15, "iqm-pulse-circuit-operations-reshape-unitary"]], "gate_implementation": [[16, "module-iqm.pulse.gate_implementation"]], "CompositeCache": [[17, "compositecache"]], "CompositeGate": [[18, "compositegate"]], "CustomIQWaveforms": [[19, "customiqwaveforms"]], "GateImplementation": [[20, "gateimplementation"]], "iqm.pulse.gate_implementation.Locus": [[21, "iqm-pulse-gate-implementation-locus"]], "iqm.pulse.gate_implementation.NestedParams": [[22, "iqm-pulse-gate-implementation-nestedparams"]], "iqm.pulse.gate_implementation.OCalibrationData": [[23, "iqm-pulse-gate-implementation-ocalibrationdata"]], "iqm.pulse.gate_implementation.OICalibrationData": [[24, "iqm-pulse-gate-implementation-oicalibrationdata"]], "iqm.pulse.gate_implementation.OILCalibrationData": [[25, "iqm-pulse-gate-implementation-oilcalibrationdata"]], "iqm.pulse.gate_implementation.OpCalibrationDataTree": [[26, "iqm-pulse-gate-implementation-opcalibrationdatatree"]], "iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING": [[27, "iqm-pulse-gate-implementation-probe-lines-locus-mapping"]], "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING": [[28, "iqm-pulse-gate-implementation-single-components-with-drive-locus-mapping"]], "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING": [[29, "iqm-pulse-gate-implementation-single-components-with-flux-awg-locus-mapping"]], "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING": [[30, "iqm-pulse-gate-implementation-single-components-with-readout-locus-mapping"]], "SinglePulseGate": [[31, "singlepulsegate"]], "iqm.pulse.gate_implementation.get_waveform_parameters": [[32, "iqm-pulse-gate-implementation-get-waveform-parameters"]], "gates": [[33, "module-iqm.pulse.gates"]], "barrier": [[34, "module-iqm.pulse.gates.barrier"]], "Barrier": [[35, "barrier"]], "conditional": [[36, "module-iqm.pulse.gates.conditional"]], "CCPRX_Composite": [[37, "ccprx-composite"]], "CCPRX_Composite_DRAGCosineRiseFall": [[38, "ccprx-composite-dragcosinerisefall"]], "CCPRX_Composite_DRAGGaussian": [[39, "ccprx-composite-draggaussian"]], "cz": [[40, "module-iqm.pulse.gates.cz"]], "CZ_CRF": [[41, "cz-crf"]], "CZ_CRF_ACStarkCRF": [[42, "cz-crf-acstarkcrf"]], "CZ_GaussianSmoothedSquare": [[43, "cz-gaussiansmoothedsquare"]], "CZ_Slepian": [[44, "cz-slepian"]], "CZ_Slepian_ACStarkCRF": [[45, "cz-slepian-acstarkcrf"]], "CZ_Slepian_CRF": [[46, "cz-slepian-crf"]], "CZ_TruncatedGaussianSmoothedSquare": [[47, "cz-truncatedgaussiansmoothedsquare"]], "CouplerFluxPulseQubitACStarkPulseGate": [[48, "couplerfluxpulsequbitacstarkpulsegate"]], "FluxPulseGate": [[49, "fluxpulsegate"]], "FluxPulseGate_CRF_CRF": [[50, "fluxpulsegate-crf-crf"]], "FluxPulseGate_TGSS_CRF": [[51, "fluxpulsegate-tgss-crf"]], "default_gates": [[52, "module-iqm.pulse.gates.default_gates"]], "delay": [[53, "module-iqm.pulse.gates.delay"]], "iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS": [[54, "iqm-pulse-gates-delay-delay-max-duration-seconds"]], "Delay": [[55, "delay"]], "enums": [[56, "module-iqm.pulse.gates.enums"]], "iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES": [[57, "iqm-pulse-gates-enums-two-qubit-unitaries"]], "TwoQubitGate": [[58, "twoqubitgate"]], "iqm.pulse.gates.enums.XYGATE_UNITARIES": [[59, "iqm-pulse-gates-enums-xygate-unitaries"]], "XYGate": [[60, "xygate"]], "iqm.pulse.gates.expose_implementation": [[61, "iqm-pulse-gates-expose-implementation"]], "flux_multiplexer": [[62, "module-iqm.pulse.gates.flux_multiplexer"]], "FluxMultiplexer_SampleLinear": [[63, "fluxmultiplexer-samplelinear"]], "iqm.pulse.gates.flux_multiplexer.TOLERANCE": [[64, "iqm-pulse-gates-flux-multiplexer-tolerance"]], "iqm.pulse.gates.get_implementation_class": [[65, "iqm-pulse-gates-get-implementation-class"]], "measure": [[66, "module-iqm.pulse.gates.measure"]], "Measure_Constant": [[67, "measure-constant"]], "Measure_Constant_Qnd": [[68, "measure-constant-qnd"]], "Measure_CustomWaveforms": [[69, "measure-customwaveforms"]], "ProbePulse_CustomWaveforms": [[70, "probepulse-customwaveforms"]], "move": [[71, "module-iqm.pulse.gates.move"]], "MOVE_CRF_CRF": [[72, "move-crf-crf"]], "MOVE_CustomWaveforms": [[73, "move-customwaveforms"]], "MOVE_TGSS_CRF": [[74, "move-tgss-crf"]], "MoveMarker": [[75, "movemarker"]], "iqm.pulse.gates.move.apply_move_gate_phase_corrections": [[76, "iqm-pulse-gates-move-apply-move-gate-phase-corrections"]], "iqm.pulse.gates.move.validate_move_instructions": [[77, "iqm-pulse-gates-move-validate-move-instructions"]], "prx": [[78, "module-iqm.pulse.gates.prx"]], "ABC_Constant_smooth": [[79, "abc-constant-smooth"]], "Constant_PRX_with_smooth_rise_fall": [[80, "constant-prx-with-smooth-rise-fall"]], "PRX_CustomWaveforms": [[81, "prx-customwaveforms"]], "PRX_CustomWaveformsSX": [[82, "prx-customwaveformssx"]], "PRX_DRAGCosineRiseFall": [[83, "prx-dragcosinerisefall"]], "PRX_DRAGCosineRiseFallSX": [[84, "prx-dragcosinerisefallsx"]], "PRX_DRAGGaussian": [[85, "prx-draggaussian"]], "PRX_DRAGGaussianSX": [[86, "prx-draggaussiansx"]], "PRX_GateImplementation": [[87, "prx-gateimplementation"]], "PRX_SinglePulse_GateImplementation": [[88, "prx-singlepulse-gateimplementation"]], "iqm.pulse.gates.prx.get_unitary_prx": [[89, "iqm-pulse-gates-prx-get-unitary-prx"]], "iqm.pulse.gates.register_implementation": [[90, "iqm-pulse-gates-register-implementation"]], "reset": [[91, "module-iqm.pulse.gates.reset"]], "iqm.pulse.gates.reset.RESET_FEEDBACK_KEY": [[92, "iqm-pulse-gates-reset-reset-feedback-key"]], "iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY": [[93, "iqm-pulse-gates-reset-reset-measurement-key"]], "Reset_Conditional": [[94, "reset-conditional"]], "Reset_Wait": [[95, "reset-wait"]], "rz": [[96, "module-iqm.pulse.gates.rz"]], "RZ_ACStarkShift": [[97, "rz-acstarkshift"]], "RZ_ACStarkShift_CosineRiseFall": [[98, "rz-acstarkshift-cosinerisefall"]], "RZ_ACStarkShift_smoothConstant": [[99, "rz-acstarkshift-smoothconstant"]], "RZ_Virtual": [[100, "rz-virtual"]], "iqm.pulse.gates.rz.get_unitary_rz": [[101, "iqm-pulse-gates-rz-get-unitary-rz"]], "sx": [[102, "module-iqm.pulse.gates.sx"]], "SXGate": [[103, "sxgate"]], "u": [[104, "module-iqm.pulse.gates.u"]], "UGate": [[105, "ugate"]], "iqm.pulse.gates.u.get_unitary_u": [[106, "iqm-pulse-gates-u-get-unitary-u"]], "playlist": [[107, "module-iqm.pulse.playlist"], [133, "module-iqm.pulse.playlist.playlist"]], "channel": [[108, "module-iqm.pulse.playlist.channel"]], "ChannelConfiguration": [[109, "channelconfiguration"]], "ChannelDescription": [[110, "channeldescription"]], "ChannelProperties": [[111, "channelproperties"]], "IQChannelConfig": [[112, "iqchannelconfig"]], "ProbeChannelProperties": [[113, "probechannelproperties"]], "RealChannelConfig": [[114, "realchannelconfig"]], "iqm.pulse.playlist.channel.get_channel_properties": [[115, "iqm-pulse-playlist-channel-get-channel-properties"]], "iqm.pulse.playlist.channel.get_channel_properties_from_station_settings": [[116, "iqm-pulse-playlist-channel-get-channel-properties-from-station-settings"]], "iqm.pulse.playlist.channel.round_duration_to_granularity_samples": [[117, "iqm-pulse-playlist-channel-round-duration-to-granularity-samples"]], "instructions": [[118, "module-iqm.pulse.playlist.instructions"]], "AcquisitionMethod": [[119, "acquisitionmethod"]], "Block": [[120, "block"]], "ComplexIntegration": [[121, "complexintegration"]], "ConditionalInstruction": [[122, "conditionalinstruction"]], "FluxPulse": [[123, "fluxpulse"]], "IQPulse": [[124, "iqpulse"]], "Instruction": [[125, "instruction"]], "MultiplexedIQPulse": [[126, "multiplexediqpulse"]], "ReadoutTrigger": [[127, "readouttrigger"]], "RealPulse": [[128, "realpulse"]], "ThresholdStateDiscrimination": [[129, "thresholdstatediscrimination"]], "TimeTrace": [[130, "timetrace"]], "VirtualRZ": [[131, "virtualrz"]], "Wait": [[132, "wait"]], "schedule": [[134, "module-iqm.pulse.playlist.schedule"]], "Nothing": [[135, "nothing"]], "Schedule": [[136, "schedule"]], "Segment": [[137, "segment"]], "iqm.pulse.playlist.schedule.TOLERANCE": [[138, "iqm-pulse-playlist-schedule-tolerance"]], "visualisation": [[139, "module-iqm.pulse.playlist.visualisation"]], "base": [[140, "module-iqm.pulse.playlist.visualisation.base"]], "iqm.pulse.playlist.visualisation.base.inspect_playlist": [[141, "iqm-pulse-playlist-visualisation-base-inspect-playlist"]], "waveforms": [[142, "module-iqm.pulse.playlist.waveforms"]], "Chirp": [[143, "chirp"]], "ChirpImag": [[144, "chirpimag"]], "Cosine": [[145, "cosine"]], "CosineFall": [[146, "cosinefall"]], "CosineRise": [[147, "cosinerise"]], "CosineRiseFallDerivative": [[148, "cosinerisefallderivative"]], "ModulatedCosineRiseFall": [[149, "modulatedcosinerisefall"]], "Slepian": [[150, "slepian"]], "quantum_ops": [[151, "module-iqm.pulse.quantum_ops"]], "QuantumOp": [[152, "quantumop"], [185, "quantumop"]], "iqm.pulse.quantum_ops.QuantumOpTable": [[153, "iqm-pulse-quantum-ops-quantumoptable"]], "iqm.pulse.quantum_ops.validate_locus_calibration": [[154, "iqm-pulse-quantum-ops-validate-locus-calibration"]], "iqm.pulse.quantum_ops.validate_op_calibration": [[155, "iqm-pulse-quantum-ops-validate-op-calibration"]], "scheduler": [[156, "module-iqm.pulse.scheduler"]], "iqm.pulse.scheduler.BLOCKING": [[157, "iqm-pulse-scheduler-blocking"]], "iqm.pulse.scheduler.NONSOLID": [[158, "iqm-pulse-scheduler-nonsolid"]], "SegmentPointer": [[159, "segmentpointer"]], "iqm.pulse.scheduler.extend_hard_boundary": [[160, "iqm-pulse-scheduler-extend-hard-boundary"]], "iqm.pulse.scheduler.extend_hard_boundary_in_seconds": [[161, "iqm-pulse-scheduler-extend-hard-boundary-in-seconds"]], "iqm.pulse.scheduler.extend_schedule": [[162, "iqm-pulse-scheduler-extend-schedule"]], "iqm.pulse.scheduler.extend_schedule_new": [[163, "iqm-pulse-scheduler-extend-schedule-new"]], "timebox": [[164, "module-iqm.pulse.timebox"]], "MultiplexedProbeTimeBox": [[165, "multiplexedprobetimebox"]], "SchedulingAlgorithm": [[166, "schedulingalgorithm"]], "SchedulingStrategy": [[167, "schedulingstrategy"]], "TimeBox": [[168, "timebox"]], "utils": [[169, "module-iqm.pulse.utils"]], "iqm.pulse.utils.load_yaml": [[170, "iqm-pulse-utils-load-yaml"]], "iqm.pulse.utils.map_waveform_param_types": [[171, "iqm-pulse-utils-map-waveform-param-types"]], "iqm.pulse.utils.normalize_angle": [[172, "iqm-pulse-utils-normalize-angle"]], "iqm.pulse.utils.phase_transformation": [[173, "iqm-pulse-utils-phase-transformation"]], "validation": [[174, "module-iqm.pulse.validation"]], "AWGScheduleValidationData": [[175, "awgschedulevalidationdata"]], "iqm.pulse.validation.AWGScheduleValidationError": [[176, "iqm-pulse-validation-awgschedulevalidationerror"]], "iqm.pulse.validation.InvalidInstructionError": [[177, "iqm-pulse-validation-invalidinstructionerror"]], "iqm.pulse.validation.PlaylistValidationError": [[178, "iqm-pulse-validation-playlistvalidationerror"]], "iqm.pulse.validation.validate_awg_and_schedule_compatibility": [[179, "iqm-pulse-validation-validate-awg-and-schedule-compatibility"]], "iqm.pulse.validation.validate_channel": [[180, "iqm-pulse-validation-validate-channel"]], "iqm.pulse.validation.validate_instruction_and_wf_length": [[181, "iqm-pulse-validation-validate-instruction-and-wf-length"]], "iqm.pulse.validation.validate_playlist_compatibility": [[182, "iqm-pulse-validation-validate-playlist-compatibility"]], "Changelog": [[183, "changelog"]], "Version 8.9 (2025-03-28)": [[183, "version-8-9-2025-03-28"]], "### Features": [[183, "features"]], "Version 8.8 (2025-03-28)": [[183, "version-8-8-2025-03-28"]], "Features": [[183, "id1"], [183, "id2"], [183, "id3"], [183, "id8"], [183, "id10"], [183, "id12"], [183, "id13"], [183, "id16"], [183, "id17"], [183, "id20"], [183, "id22"], [183, "id25"], [183, "id26"], [183, "id29"], [183, "id30"], [183, "id33"], [183, "id36"], [183, "id39"], [183, "id42"], [183, "id45"], [183, "id48"], [183, "id50"], [183, "id53"], [183, "id56"], [183, "id59"], [183, "id61"], [183, "id62"], [183, "id67"], [183, "id72"], [183, "id77"], [183, "id79"], [183, "id80"], [183, "id82"], [183, "id85"], [183, "id88"], [183, "id90"], [183, "id93"], [183, "id94"], [183, "id95"], [183, "id96"], [183, "id99"], [183, "id100"], [183, "id102"], [183, "id105"], [183, "id106"], [183, "id107"], [183, "id108"], [183, "id109"], [183, "id110"], [183, "id111"], [183, "id112"], [183, "id115"], [183, "id117"], [183, "id120"], [183, "id122"], [183, "id123"], [183, "id126"]], "Version 8.7 (2025-03-27)": [[183, "version-8-7-2025-03-27"]], "Version 8.6 (2025-03-26)": [[183, "version-8-6-2025-03-26"]], "Version 8.5 (2025-03-26)": [[183, "version-8-5-2025-03-26"]], "Bug fix": [[183, "bug-fix"], [183, "id9"], [183, "id28"], [183, "id49"]], "Version 8.4 (2025-03-21)": [[183, "version-8-4-2025-03-21"]], "Version 8.3 (2025-03-19)": [[183, "version-8-3-2025-03-19"]], "Bug fixes": [[183, "bug-fixes"], [183, "id11"], [183, "id27"], [183, "id60"], [183, "id65"], [183, "id66"], [183, "id75"], [183, "id76"], [183, "id81"], [183, "id83"], [183, "id84"], [183, "id86"], [183, "id116"]], "Version 8.2 (2025-03-13)": [[183, "version-8-2-2025-03-13"]], "Version 8.1 (2025-02-28)": [[183, "version-8-1-2025-02-28"]], "Version 8.0 (2025-02-27)": [[183, "version-8-0-2025-02-27"]], "Version 7.24 (2025-02-20)": [[183, "version-7-24-2025-02-20"]], "Version 7.23 (2025-02-19)": [[183, "version-7-23-2025-02-19"]], "Version 7.22 (2025-02-10)": [[183, "version-7-22-2025-02-10"]], "Version 7.21 (2025-02-07)": [[183, "version-7-21-2025-02-07"]], "Version 7.20 (2025-02-04)": [[183, "version-7-20-2025-02-04"]], "Version 7.19 (2025-02-04)": [[183, "version-7-19-2025-02-04"]], "Bug Fixes": [[183, "id21"]], "Version 7.18 (2025-02-04)": [[183, "version-7-18-2025-02-04"]], "Version 7.17 (2025-02-03)": [[183, "version-7-17-2025-02-03"]], "Version 7.16 (2025-02-03)": [[183, "version-7-16-2025-02-03"]], "Version 7.15 (2025-01-28)": [[183, "version-7-15-2025-01-28"]], "Version 7.14 (2025-01-28)": [[183, "version-7-14-2025-01-28"]], "Version 7.13 (2025-01-28)": [[183, "version-7-13-2025-01-28"]], "Version 7.12 (2025-01-27)": [[183, "version-7-12-2025-01-27"]], "Version 7.11 (2025-01-24)": [[183, "version-7-11-2025-01-24"]], "Version 7.10 (2025-01-17)": [[183, "version-7-10-2025-01-17"]], "Version 7.9 (2025-01-08)": [[183, "version-7-9-2025-01-08"]], "Version 7.8 (2025-01-02)": [[183, "version-7-8-2025-01-02"]], "Version 7.7 (2024-12-30)": [[183, "version-7-7-2024-12-30"]], "Version 7.6 (2024-12-30)": [[183, "version-7-6-2024-12-30"]], "Version 7.5 (2024-12-12)": [[183, "version-7-5-2024-12-12"]], "Version 7.4 (2024-12-10)": [[183, "version-7-4-2024-12-10"]], "Version 7.3 (2024-12-09)": [[183, "version-7-3-2024-12-09"]], "Version 7.2 (2024-12-05)": [[183, "version-7-2-2024-12-05"]], "Version 7.1 (2024-12-04)": [[183, "version-7-1-2024-12-04"]], "Version 7.0 (2024-11-29)": [[183, "version-7-0-2024-11-29"]], "Breaking changes": [[183, "breaking-changes"], [183, "id78"], [183, "id87"], [183, "id89"], [183, "id101"], [183, "id121"]], "Version 6.14 (2024-11-27)": [[183, "version-6-14-2024-11-27"]], "Version 6.13 (2024-11-20)": [[183, "version-6-13-2024-11-20"]], "Version 6.12 (2024-11-19)": [[183, "version-6-12-2024-11-19"]], "Version 6.11 (2024-11-18)": [[183, "version-6-11-2024-11-18"]], "Version 6.10 (2024-11-15)": [[183, "version-6-10-2024-11-15"]], "Version 6.9 (2024-11-13)": [[183, "version-6-9-2024-11-13"]], "Version 6.8 (2024-11-12)": [[183, "version-6-8-2024-11-12"]], "Version 6.7 (2024-11-12)": [[183, "version-6-7-2024-11-12"]], "Version 6.6 (2024-11-08)": [[183, "version-6-6-2024-11-08"]], "Version 6.5 (2024-10-31)": [[183, "version-6-5-2024-10-31"]], "Version 6.4 (2024-10-30)": [[183, "version-6-4-2024-10-30"]], "Version 6.3 (2024-10-30)": [[183, "version-6-3-2024-10-30"]], "Version 6.2 (2024-10-28)": [[183, "version-6-2-2024-10-28"]], "Version 6.1 (2024-10-28)": [[183, "version-6-1-2024-10-28"]], "Version 6.0 (2024-10-25)": [[183, "version-6-0-2024-10-25"]], "Version 5.9 (2024-10-24)": [[183, "version-5-9-2024-10-24"]], "Version 5.8 (2024-10-21)": [[183, "version-5-8-2024-10-21"]], "Version 5.7 (2024-10-16)": [[183, "version-5-7-2024-10-16"]], "Version 5.6 (2024-10-16)": [[183, "version-5-6-2024-10-16"]], "Version 5.5 (2024-10-15)": [[183, "version-5-5-2024-10-15"]], "Version 5.4 (2024-10-15)": [[183, "version-5-4-2024-10-15"]], "Version 5.3 (2024-10-11)": [[183, "version-5-3-2024-10-11"]], "Version 5.2 (2024-10-11)": [[183, "version-5-2-2024-10-11"]], "Version 5.1 (2024-10-11)": [[183, "version-5-1-2024-10-11"]], "Version 5.0 (2024-10-08)": [[183, "version-5-0-2024-10-08"]], "Version 4.0 (2024-10-02)": [[183, "version-4-0-2024-10-02"]], "Version 3.5 (2024-09-25)": [[183, "version-3-5-2024-09-25"]], "Version 3.4 (2024-09-23)": [[183, "version-3-4-2024-09-23"]], "Version 3.3 (2024-09-19)": [[183, "version-3-3-2024-09-19"]], "Version 3.2 (2024-09-11)": [[183, "version-3-2-2024-09-11"]], "Version 3.1 (2024-09-11)": [[183, "version-3-1-2024-09-11"]], "Version 3.0 (2024-09-06)": [[183, "version-3-0-2024-09-06"]], "Version 2.13 (2024-09-04)": [[183, "version-2-13-2024-09-04"]], "Version 2.12 (2024-08-27)": [[183, "version-2-12-2024-08-27"]], "Version 2.11 (2024-08-26)": [[183, "version-2-11-2024-08-26"]], "Version 2.10 (2024-08-26)": [[183, "version-2-10-2024-08-26"]], "Version 2.9 (2024-08-23)": [[183, "version-2-9-2024-08-23"]], "Version 2.8 (2024-08-22)": [[183, "version-2-8-2024-08-22"]], "Version 2.7 (2024-08-16)": [[183, "version-2-7-2024-08-16"]], "Version 2.6 (2024-08-16)": [[183, "version-2-6-2024-08-16"]], "Version 2.5 (2024-08-15)": [[183, "version-2-5-2024-08-15"]], "Version 2.4 (2024-08-09)": [[183, "version-2-4-2024-08-09"]], "Version 2.3 (2024-08-05)": [[183, "version-2-3-2024-08-05"]], "Version 2.2 (2024-07-29)": [[183, "version-2-2-2024-07-29"]], "Version 2.1 (2024-07-23)": [[183, "version-2-1-2024-07-23"]], "Version 2.0 (2024-07-15)": [[183, "version-2-0-2024-07-15"]], "Version 1.6 (2024-07-12)": [[183, "version-1-6-2024-07-12"]], "Version 1.5 (2024-07-05)": [[183, "version-1-5-2024-07-05"]], "Version 1.4 (2024-07-04)": [[183, "version-1-4-2024-07-04"]], "Version 1.3 (2024-07-04)": [[183, "version-1-3-2024-07-04"]], "Version 1.2 (2024-07-03)": [[183, "version-1-2-2024-07-03"]], "Version 1.1 (2024-07-02)": [[183, "version-1-1-2024-07-02"]], "Version 1.0 (2024-07-01)": [[183, "version-1-0-2024-07-01"]], "Concepts and Classes": [[184, "concepts-and-classes"]], "Quick reference": [[184, "quick-reference"]], "Instructions": [[184, "instructions"]], "Schedules": [[184, "schedules"]], "TimeBoxes": [[184, "timeboxes"]], "QuantumOps": [[184, "quantumops"]], "GateImplementations": [[184, "gateimplementations"]], "Playlists": [[184, "playlists"]], "Custom gate implementations": [[185, "custom-gate-implementations"], [185, "id1"]], "GateImplementation class": [[185, "gateimplementation-class"]], "Instructions, Waveforms and calibration data": [[185, "instructions-waveforms-and-calibration-data"]], "More base classes": [[185, "more-base-classes"]], "Registering gates and implementations": [[185, "registering-gates-and-implementations"]], "IQM Pulse": [[186, "iqm-pulse"]], "Contents": [[186, "contents"]], "Indices and tables": [[186, "indices-and-tables"]], "License": [[187, "license"]], "Pulse timing": [[188, "pulse-timing"]], "Measure and ReadoutTrigger": [[188, "measure-and-readouttrigger"]], "Fast feedback timing": [[188, "fast-feedback-timing"]], "References": [[189, "references"]], "Using ScheduleBuilder": [[190, "using-schedulebuilder"]], "Creating TimeBoxes": [[190, "creating-timeboxes"]], "Composing TimeBoxes": [[190, "composing-timeboxes"]], "Resolving TimeBoxes into a Schedule": [[190, "resolving-timeboxes-into-a-schedule"]], "Miscellaneous features": [[190, "miscellaneous-features"]], "Common pitfalls": [[190, "common-pitfalls"]]}, "indexentries": {"iqm.pulse": [[1, "module-iqm.pulse"]], "module": [[1, "module-iqm.pulse"], [2, "module-iqm.pulse.base_utils"], [4, "module-iqm.pulse.builder"], [10, "module-iqm.pulse.circuit_operations"], [16, "module-iqm.pulse.gate_implementation"], [33, "module-iqm.pulse.gates"], [34, "module-iqm.pulse.gates.barrier"], [36, "module-iqm.pulse.gates.conditional"], [40, "module-iqm.pulse.gates.cz"], [52, "module-iqm.pulse.gates.default_gates"], [53, "module-iqm.pulse.gates.delay"], [56, "module-iqm.pulse.gates.enums"], [62, "module-iqm.pulse.gates.flux_multiplexer"], [66, "module-iqm.pulse.gates.measure"], [71, "module-iqm.pulse.gates.move"], [78, "module-iqm.pulse.gates.prx"], [91, "module-iqm.pulse.gates.reset"], [96, "module-iqm.pulse.gates.rz"], [102, "module-iqm.pulse.gates.sx"], [104, "module-iqm.pulse.gates.u"], [107, "module-iqm.pulse.playlist"], [108, "module-iqm.pulse.playlist.channel"], [118, "module-iqm.pulse.playlist.instructions"], [133, "module-iqm.pulse.playlist.playlist"], [134, "module-iqm.pulse.playlist.schedule"], [139, "module-iqm.pulse.playlist.visualisation"], [140, "module-iqm.pulse.playlist.visualisation.base"], [142, "module-iqm.pulse.playlist.waveforms"], [151, "module-iqm.pulse.quantum_ops"], [156, "module-iqm.pulse.scheduler"], [164, "module-iqm.pulse.timebox"], [169, "module-iqm.pulse.utils"], [174, "module-iqm.pulse.validation"]], "iqm.pulse.base_utils": [[2, "module-iqm.pulse.base_utils"]], "merge_dicts() (in module iqm.pulse.base_utils)": [[3, "iqm.pulse.base_utils.merge_dicts"]], "iqm.pulse.builder": [[4, "module-iqm.pulse.builder"]], "circuitoperation (class in iqm.pulse.builder)": [[5, "iqm.pulse.builder.CircuitOperation"]], "args (iqm.pulse.builder.circuitoperation attribute)": [[5, "iqm.pulse.builder.CircuitOperation.args"]], "implementation (iqm.pulse.builder.circuitoperation attribute)": [[5, "iqm.pulse.builder.CircuitOperation.implementation"]], "locus (iqm.pulse.builder.circuitoperation attribute)": [[5, "iqm.pulse.builder.CircuitOperation.locus"]], "name (iqm.pulse.builder.circuitoperation attribute)": [[5, "iqm.pulse.builder.CircuitOperation.name"]], "validate() (iqm.pulse.builder.circuitoperation method)": [[5, "iqm.pulse.builder.CircuitOperation.validate"]], "schedulebuilder (class in iqm.pulse.builder)": [[6, "iqm.pulse.builder.ScheduleBuilder"]], "_block_neighborhood_tetris() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._block_neighborhood_tetris"]], "_cache (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._cache"]], "_channel_templates (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._channel_templates"]], "_channel_to_component (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._channel_to_component"]], "_channel_types (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._channel_types"]], "_find_implementation_and_locus() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._find_implementation_and_locus"]], "_finish_schedule() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._finish_schedule"]], "_fuse_long_distance_virtual_rzs() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._fuse_long_distance_virtual_rzs"]], "_get_channel_for_component() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._get_channel_for_component"]], "_get_implementation() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._get_implementation"]], "_get_neighborhood_hard_boundary() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._get_neighborhood_hard_boundary"]], "_require_scheduling_in_seconds (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder._require_scheduling_in_seconds"]], "_resolve_timebox_hard_boundary() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._resolve_timebox_hard_boundary"]], "_resolve_timebox_tetris() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._resolve_timebox_tetris"]], "_set_gate_implementation_shortcut() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder._set_gate_implementation_shortcut"]], "build_playlist() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.build_playlist"]], "circuit_to_timebox() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.circuit_to_timebox"]], "composite_cache (iqm.pulse.builder.schedulebuilder attribute)": [[6, "iqm.pulse.builder.ScheduleBuilder.composite_cache"]], "get_calibration() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_calibration"]], "get_control_channels() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_control_channels"]], "get_drive_channel() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_drive_channel"]], "get_flux_channel() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_flux_channel"]], "get_implementation() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_implementation"]], "get_implementation_class() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_implementation_class"]], "get_probe_channel() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_probe_channel"]], "get_virtual_feedback_channel_for() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_virtual_feedback_channel_for"]], "get_virtual_feedback_channels() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.get_virtual_feedback_channels"]], "has_calibration() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.has_calibration"]], "inject_calibration() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.inject_calibration"]], "resolve_timebox() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.resolve_timebox"]], "timebox_to_schedule() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.timebox_to_schedule"]], "timeboxes_to_front_padded_playlist() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.timeboxes_to_front_padded_playlist"]], "timeboxes_to_playlist() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.timeboxes_to_playlist"]], "validate_calibration() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.validate_calibration"]], "validate_quantum_circuit() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.validate_quantum_circuit"]], "wait() (iqm.pulse.builder.schedulebuilder method)": [[6, "iqm.pulse.builder.ScheduleBuilder.wait"]], "build_quantum_ops() (in module iqm.pulse.builder)": [[7, "iqm.pulse.builder.build_quantum_ops"]], "load_config() (in module iqm.pulse.builder)": [[8, "iqm.pulse.builder.load_config"]], "validate_quantum_circuit() (in module iqm.pulse.builder)": [[9, "iqm.pulse.builder.validate_quantum_circuit"]], "iqm.pulse.circuit_operations": [[10, "module-iqm.pulse.circuit_operations"]], "circuitoperationlist (class in iqm.pulse.circuit_operations)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList"]], "_set_specific_operation_shortcut() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList._set_specific_operation_shortcut"]], "add_op() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.add_op"]], "add_qubits() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.add_qubits"]], "barrier() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.barrier"]], "compose() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.compose"]], "count_ops() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.count_ops"]], "find_qubits() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.find_qubits"]], "get_unitary() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.get_unitary"]], "map_loci() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[11, "iqm.pulse.circuit_operations.CircuitOperationList.map_loci"]], "get_unitary_from_circuit() (in module iqm.pulse.circuit_operations)": [[12, "iqm.pulse.circuit_operations.get_unitary_from_circuit"]], "get_unitary_from_op() (in module iqm.pulse.circuit_operations)": [[13, "iqm.pulse.circuit_operations.get_unitary_from_op"]], "reorder() (in module iqm.pulse.circuit_operations)": [[14, "iqm.pulse.circuit_operations.reorder"]], "reshape_unitary() (in module iqm.pulse.circuit_operations)": [[15, "iqm.pulse.circuit_operations.reshape_unitary"]], "iqm.pulse.gate_implementation": [[16, "module-iqm.pulse.gate_implementation"]], "compositecache (class in iqm.pulse.gate_implementation)": [[17, "iqm.pulse.gate_implementation.CompositeCache"]], "flush() (iqm.pulse.gate_implementation.compositecache method)": [[17, "iqm.pulse.gate_implementation.CompositeCache.flush"]], "get() (iqm.pulse.gate_implementation.compositecache method)": [[17, "iqm.pulse.gate_implementation.CompositeCache.get"]], "set() (iqm.pulse.gate_implementation.compositecache method)": [[17, "iqm.pulse.gate_implementation.CompositeCache.set"]], "compositegate (class in iqm.pulse.gate_implementation)": [[18, "iqm.pulse.gate_implementation.CompositeGate"]], "build() (iqm.pulse.gate_implementation.compositegate method)": [[18, "iqm.pulse.gate_implementation.CompositeGate.build"]], "default_implementations (iqm.pulse.gate_implementation.compositegate attribute)": [[18, "iqm.pulse.gate_implementation.CompositeGate.default_implementations"]], "registered_gates (iqm.pulse.gate_implementation.compositegate attribute)": [[18, "iqm.pulse.gate_implementation.CompositeGate.registered_gates"]], "customiqwaveforms (class in iqm.pulse.gate_implementation)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms"]], "dependent_waves (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms.dependent_waves"]], "excluded_parameters (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms.excluded_parameters"]], "root_parameters (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms.root_parameters"]], "wave_i (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms.wave_i"]], "wave_q (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[19, "iqm.pulse.gate_implementation.CustomIQWaveforms.wave_q"]], "gateimplementation (class in iqm.pulse.gate_implementation)": [[20, "iqm.pulse.gate_implementation.GateImplementation"]], "_call() (iqm.pulse.gate_implementation.gateimplementation method)": [[20, "iqm.pulse.gate_implementation.GateImplementation._call"]], "build() (iqm.pulse.gate_implementation.gateimplementation method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.build"]], "convert_calibration_data() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.convert_calibration_data"]], "duration_in_seconds() (iqm.pulse.gate_implementation.gateimplementation method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.duration_in_seconds"]], "get_custom_locus_mapping() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.get_custom_locus_mapping"]], "get_locus_mapping_name() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.get_locus_mapping_name"]], "get_parameters() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.get_parameters"]], "needs_calibration() (iqm.pulse.gate_implementation.gateimplementation class method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.needs_calibration"]], "parameters (iqm.pulse.gate_implementation.gateimplementation attribute)": [[20, "iqm.pulse.gate_implementation.GateImplementation.parameters"]], "qualified_name (iqm.pulse.gate_implementation.gateimplementation property)": [[20, "iqm.pulse.gate_implementation.GateImplementation.qualified_name"]], "special_implementation (iqm.pulse.gate_implementation.gateimplementation attribute)": [[20, "iqm.pulse.gate_implementation.GateImplementation.special_implementation"]], "symmetric (iqm.pulse.gate_implementation.gateimplementation attribute)": [[20, "iqm.pulse.gate_implementation.GateImplementation.symmetric"]], "to_timebox() (iqm.pulse.gate_implementation.gateimplementation method)": [[20, "iqm.pulse.gate_implementation.GateImplementation.to_timebox"]], "locus (in module iqm.pulse.gate_implementation)": [[21, "iqm.pulse.gate_implementation.Locus"]], "nestedparams (in module iqm.pulse.gate_implementation)": [[22, "iqm.pulse.gate_implementation.NestedParams"]], "ocalibrationdata (in module iqm.pulse.gate_implementation)": [[23, "iqm.pulse.gate_implementation.OCalibrationData"]], "oicalibrationdata (in module iqm.pulse.gate_implementation)": [[24, "iqm.pulse.gate_implementation.OICalibrationData"]], "oilcalibrationdata (in module iqm.pulse.gate_implementation)": [[25, "iqm.pulse.gate_implementation.OILCalibrationData"]], "opcalibrationdatatree (in module iqm.pulse.gate_implementation)": [[26, "iqm.pulse.gate_implementation.OpCalibrationDataTree"]], "probe_lines_locus_mapping (in module iqm.pulse.gate_implementation)": [[27, "iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING"]], "single_components_with_drive_locus_mapping (in module iqm.pulse.gate_implementation)": [[28, "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING"]], "single_components_with_flux_awg_locus_mapping (in module iqm.pulse.gate_implementation)": [[29, "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING"]], "single_components_with_readout_locus_mapping (in module iqm.pulse.gate_implementation)": [[30, "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING"]], "singlepulsegate (class in iqm.pulse.gate_implementation)": [[31, "iqm.pulse.gate_implementation.SinglePulseGate"]], "_call() (iqm.pulse.gate_implementation.singlepulsegate method)": [[31, "iqm.pulse.gate_implementation.SinglePulseGate._call"]], "_get_pulse() (iqm.pulse.gate_implementation.singlepulsegate method)": [[31, "iqm.pulse.gate_implementation.SinglePulseGate._get_pulse"]], "_get_pulse_channel() (iqm.pulse.gate_implementation.singlepulsegate method)": [[31, "iqm.pulse.gate_implementation.SinglePulseGate._get_pulse_channel"]], "duration_in_seconds() (iqm.pulse.gate_implementation.singlepulsegate method)": [[31, "iqm.pulse.gate_implementation.SinglePulseGate.duration_in_seconds"]], "get_waveform_parameters() (in module iqm.pulse.gate_implementation)": [[32, "iqm.pulse.gate_implementation.get_waveform_parameters"]], "iqm.pulse.gates": [[33, "module-iqm.pulse.gates"]], "iqm.pulse.gates.barrier": [[34, "module-iqm.pulse.gates.barrier"]], "barrier (class in iqm.pulse.gates.barrier)": [[35, "iqm.pulse.gates.barrier.Barrier"]], "_call() (iqm.pulse.gates.barrier.barrier method)": [[35, "iqm.pulse.gates.barrier.Barrier._call"]], "duration_in_seconds() (iqm.pulse.gates.barrier.barrier method)": [[35, "iqm.pulse.gates.barrier.Barrier.duration_in_seconds"]], "symmetric (iqm.pulse.gates.barrier.barrier attribute)": [[35, "iqm.pulse.gates.barrier.Barrier.symmetric"]], "iqm.pulse.gates.conditional": [[36, "module-iqm.pulse.gates.conditional"]], "ccprx_composite (class in iqm.pulse.gates.conditional)": [[37, "iqm.pulse.gates.conditional.CCPRX_Composite"]], "_call() (iqm.pulse.gates.conditional.ccprx_composite method)": [[37, "iqm.pulse.gates.conditional.CCPRX_Composite._call"]], "parameters (iqm.pulse.gates.conditional.ccprx_composite attribute)": [[37, "iqm.pulse.gates.conditional.CCPRX_Composite.parameters"]], "ccprx_composite_dragcosinerisefall (class in iqm.pulse.gates.conditional)": [[38, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall"]], "default_implementations (iqm.pulse.gates.conditional.ccprx_composite_dragcosinerisefall attribute)": [[38, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall.default_implementations"]], "ccprx_composite_draggaussian (class in iqm.pulse.gates.conditional)": [[39, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian"]], "default_implementations (iqm.pulse.gates.conditional.ccprx_composite_draggaussian attribute)": [[39, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian.default_implementations"]], "iqm.pulse.gates.cz": [[40, "module-iqm.pulse.gates.cz"]], "cz_crf (class in iqm.pulse.gates.cz)": [[41, "iqm.pulse.gates.cz.CZ_CRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_crf attribute)": [[41, "iqm.pulse.gates.cz.CZ_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_crf attribute)": [[41, "iqm.pulse.gates.cz.CZ_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_crf attribute)": [[41, "iqm.pulse.gates.cz.CZ_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_crf attribute)": [[41, "iqm.pulse.gates.cz.CZ_CRF.symmetric"]], "cz_crf_acstarkcrf (class in iqm.pulse.gates.cz)": [[42, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[42, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[42, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.parameters"]], "qubit_drive_wave (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[42, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.qubit_drive_wave"]], "symmetric (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[42, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.symmetric"]], "cz_gaussiansmoothedsquare (class in iqm.pulse.gates.cz)": [[43, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare"]], "coupler_wave (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[43, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[43, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[43, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[43, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.symmetric"]], "cz_slepian (class in iqm.pulse.gates.cz)": [[44, "iqm.pulse.gates.cz.CZ_Slepian"]], "coupler_wave (iqm.pulse.gates.cz.cz_slepian attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_slepian attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_slepian attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_slepian attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian.symmetric"]], "cz_slepian_acstarkcrf (class in iqm.pulse.gates.cz)": [[45, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[45, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[45, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.parameters"]], "qubit_drive_wave (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[45, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.qubit_drive_wave"]], "symmetric (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[45, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.symmetric"]], "cz_slepian_crf (class in iqm.pulse.gates.cz)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_CRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[46, "iqm.pulse.gates.cz.CZ_Slepian_CRF.symmetric"]], "cz_truncatedgaussiansmoothedsquare (class in iqm.pulse.gates.cz)": [[47, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare"]], "coupler_wave (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[47, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[47, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[47, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[47, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.symmetric"]], "couplerfluxpulsequbitacstarkpulsegate (class in iqm.pulse.gates.cz)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate"]], "_ac_stark_pulse() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate class method)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate._ac_stark_pulse"]], "_call() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate method)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate._call"]], "coupler_wave (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate attribute)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.coupler_wave"]], "duration_in_seconds() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate method)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.duration_in_seconds"]], "excluded_parameters (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate attribute)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.excluded_parameters"]], "get_locus_mapping_name() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate class method)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.get_locus_mapping_name"]], "qubit_drive_wave (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate attribute)": [[48, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.qubit_drive_wave"]], "fluxpulsegate (class in iqm.pulse.gates.cz)": [[49, "iqm.pulse.gates.cz.FluxPulseGate"]], "_call() (iqm.pulse.gates.cz.fluxpulsegate method)": [[49, "iqm.pulse.gates.cz.FluxPulseGate._call"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.coupler_wave"]], "duration_in_seconds() (iqm.pulse.gates.cz.fluxpulsegate method)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.duration_in_seconds"]], "excluded_parameters (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.excluded_parameters"]], "get_locus_mapping_name() (iqm.pulse.gates.cz.fluxpulsegate class method)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.get_locus_mapping_name"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.qubit_wave"]], "root_parameters (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate.root_parameters"]], "fluxpulsegate_crf_crf (class in iqm.pulse.gates.cz)": [[50, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[50, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[50, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[50, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[50, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.symmetric"]], "fluxpulsegate_tgss_crf (class in iqm.pulse.gates.cz)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[51, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.symmetric"]], "iqm.pulse.gates.default_gates": [[52, "module-iqm.pulse.gates.default_gates"]], "iqm.pulse.gates.delay": [[53, "module-iqm.pulse.gates.delay"]], "delay_max_duration_seconds (in module iqm.pulse.gates.delay)": [[54, "iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS"]], "delay (class in iqm.pulse.gates.delay)": [[55, "iqm.pulse.gates.delay.Delay"]], "_call() (iqm.pulse.gates.delay.delay method)": [[55, "iqm.pulse.gates.delay.Delay._call"]], "symmetric (iqm.pulse.gates.delay.delay attribute)": [[55, "iqm.pulse.gates.delay.Delay.symmetric"]], "iqm.pulse.gates.enums": [[56, "module-iqm.pulse.gates.enums"]], "two_qubit_unitaries (in module iqm.pulse.gates.enums)": [[57, "iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES"]], "cz (iqm.pulse.gates.enums.twoqubitgate attribute)": [[58, "iqm.pulse.gates.enums.TwoQubitGate.CZ"]], "iswap (iqm.pulse.gates.enums.twoqubitgate attribute)": [[58, "iqm.pulse.gates.enums.TwoQubitGate.ISWAP"]], "sqrt_iswap (iqm.pulse.gates.enums.twoqubitgate attribute)": [[58, "iqm.pulse.gates.enums.TwoQubitGate.SQRT_ISWAP"]], "twoqubitgate (class in iqm.pulse.gates.enums)": [[58, "iqm.pulse.gates.enums.TwoQubitGate"]], "xygate_unitaries (in module iqm.pulse.gates.enums)": [[59, "iqm.pulse.gates.enums.XYGATE_UNITARIES"]], "xygate (class in iqm.pulse.gates.enums)": [[60, "iqm.pulse.gates.enums.XYGate"]], "expose_implementation() (in module iqm.pulse.gates)": [[61, "iqm.pulse.gates.expose_implementation"]], "iqm.pulse.gates.flux_multiplexer": [[62, "module-iqm.pulse.gates.flux_multiplexer"]], "fluxmultiplexer_samplelinear (class in iqm.pulse.gates.flux_multiplexer)": [[63, "iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear"]], "get_custom_locus_mapping() (iqm.pulse.gates.flux_multiplexer.fluxmultiplexer_samplelinear class method)": [[63, "iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear.get_custom_locus_mapping"]], "parameters (iqm.pulse.gates.flux_multiplexer.fluxmultiplexer_samplelinear attribute)": [[63, "iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear.parameters"]], "tolerance (in module iqm.pulse.gates.flux_multiplexer)": [[64, "iqm.pulse.gates.flux_multiplexer.TOLERANCE"]], "get_implementation_class() (in module iqm.pulse.gates)": [[65, "iqm.pulse.gates.get_implementation_class"]], "iqm.pulse.gates.measure": [[66, "module-iqm.pulse.gates.measure"]], "measure_constant (class in iqm.pulse.gates.measure)": [[67, "iqm.pulse.gates.measure.Measure_Constant"]], "dependent_waves (iqm.pulse.gates.measure.measure_constant attribute)": [[67, "iqm.pulse.gates.measure.Measure_Constant.dependent_waves"]], "parameters (iqm.pulse.gates.measure.measure_constant attribute)": [[67, "iqm.pulse.gates.measure.Measure_Constant.parameters"]], "wave_i (iqm.pulse.gates.measure.measure_constant attribute)": [[67, "iqm.pulse.gates.measure.Measure_Constant.wave_i"]], "wave_q (iqm.pulse.gates.measure.measure_constant attribute)": [[67, "iqm.pulse.gates.measure.Measure_Constant.wave_q"]], "measure_constant_qnd (class in iqm.pulse.gates.measure)": [[68, "iqm.pulse.gates.measure.Measure_Constant_Qnd"]], "dependent_waves (iqm.pulse.gates.measure.measure_constant_qnd attribute)": [[68, "iqm.pulse.gates.measure.Measure_Constant_Qnd.dependent_waves"]], "parameters (iqm.pulse.gates.measure.measure_constant_qnd attribute)": [[68, "iqm.pulse.gates.measure.Measure_Constant_Qnd.parameters"]], "wave_i (iqm.pulse.gates.measure.measure_constant_qnd attribute)": [[68, "iqm.pulse.gates.measure.Measure_Constant_Qnd.wave_i"]], "wave_q (iqm.pulse.gates.measure.measure_constant_qnd attribute)": [[68, "iqm.pulse.gates.measure.Measure_Constant_Qnd.wave_q"]], "measure_customwaveforms (class in iqm.pulse.gates.measure)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms"]], "_build_instructions() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms._build_instructions"]], "_call() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms._call"]], "_multiplexed_timeboxes (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms._multiplexed_timeboxes"]], "_time_traces (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms._time_traces"]], "dependent_waves (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms.dependent_waves"]], "duration_in_seconds() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.measure.measure_customwaveforms class method)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms.get_locus_mapping_name"]], "probe_timebox() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms.probe_timebox"]], "root_parameters (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms.root_parameters"]], "time_trace() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[69, "iqm.pulse.gates.measure.Measure_CustomWaveforms.time_trace"]], "probepulse_customwaveforms (class in iqm.pulse.gates.measure)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms"]], "_build_instructions() (iqm.pulse.gates.measure.probepulse_customwaveforms method)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms._build_instructions"]], "_call() (iqm.pulse.gates.measure.probepulse_customwaveforms method)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms._call"]], "dependent_waves (iqm.pulse.gates.measure.probepulse_customwaveforms attribute)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.dependent_waves"]], "duration_in_seconds() (iqm.pulse.gates.measure.probepulse_customwaveforms method)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.measure.probepulse_customwaveforms class method)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.get_locus_mapping_name"]], "root_parameters (iqm.pulse.gates.measure.probepulse_customwaveforms attribute)": [[70, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.root_parameters"]], "iqm.pulse.gates.move": [[71, "module-iqm.pulse.gates.move"]], "move_crf_crf (class in iqm.pulse.gates.move)": [[72, "iqm.pulse.gates.move.MOVE_CRF_CRF"]], "coupler_wave (iqm.pulse.gates.move.move_crf_crf attribute)": [[72, "iqm.pulse.gates.move.MOVE_CRF_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_crf_crf attribute)": [[72, "iqm.pulse.gates.move.MOVE_CRF_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_crf_crf attribute)": [[72, "iqm.pulse.gates.move.MOVE_CRF_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.move.move_crf_crf attribute)": [[72, "iqm.pulse.gates.move.MOVE_CRF_CRF.symmetric"]], "move_customwaveforms (class in iqm.pulse.gates.move)": [[73, "iqm.pulse.gates.move.MOVE_CustomWaveforms"]], "_call() (iqm.pulse.gates.move.move_customwaveforms method)": [[73, "iqm.pulse.gates.move.MOVE_CustomWaveforms._call"]], "coupler_wave (iqm.pulse.gates.move.move_customwaveforms attribute)": [[73, "iqm.pulse.gates.move.MOVE_CustomWaveforms.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_customwaveforms attribute)": [[73, "iqm.pulse.gates.move.MOVE_CustomWaveforms.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_customwaveforms attribute)": [[73, "iqm.pulse.gates.move.MOVE_CustomWaveforms.qubit_wave"]], "root_parameters (iqm.pulse.gates.move.move_customwaveforms attribute)": [[73, "iqm.pulse.gates.move.MOVE_CustomWaveforms.root_parameters"]], "symmetric (iqm.pulse.gates.move.move_customwaveforms attribute)": [[73, "iqm.pulse.gates.move.MOVE_CustomWaveforms.symmetric"]], "move_tgss_crf (class in iqm.pulse.gates.move)": [[74, "iqm.pulse.gates.move.MOVE_TGSS_CRF"]], "coupler_wave (iqm.pulse.gates.move.move_tgss_crf attribute)": [[74, "iqm.pulse.gates.move.MOVE_TGSS_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_tgss_crf attribute)": [[74, "iqm.pulse.gates.move.MOVE_TGSS_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_tgss_crf attribute)": [[74, "iqm.pulse.gates.move.MOVE_TGSS_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.move.move_tgss_crf attribute)": [[74, "iqm.pulse.gates.move.MOVE_TGSS_CRF.symmetric"]], "movemarker (class in iqm.pulse.gates.move)": [[75, "iqm.pulse.gates.move.MoveMarker"]], "duration (iqm.pulse.gates.move.movemarker attribute)": [[75, "iqm.pulse.gates.move.MoveMarker.duration"]], "apply_move_gate_phase_corrections() (in module iqm.pulse.gates.move)": [[76, "iqm.pulse.gates.move.apply_move_gate_phase_corrections"]], "validate_move_instructions() (in module iqm.pulse.gates.move)": [[77, "iqm.pulse.gates.move.validate_move_instructions"]], "iqm.pulse.gates.prx": [[78, "module-iqm.pulse.gates.prx"]], "abc_constant_smooth (class in iqm.pulse.gates.prx)": [[79, "iqm.pulse.gates.prx.ABC_Constant_smooth"]], "_call() (iqm.pulse.gates.prx.abc_constant_smooth method)": [[79, "iqm.pulse.gates.prx.ABC_Constant_smooth._call"]], "_fall_pulse() (iqm.pulse.gates.prx.abc_constant_smooth class method)": [[79, "iqm.pulse.gates.prx.ABC_Constant_smooth._fall_pulse"]], "_main_pulse() (iqm.pulse.gates.prx.abc_constant_smooth class method)": [[79, "iqm.pulse.gates.prx.ABC_Constant_smooth._main_pulse"]], "_rise_pulse() (iqm.pulse.gates.prx.abc_constant_smooth class method)": [[79, "iqm.pulse.gates.prx.ABC_Constant_smooth._rise_pulse"]], "constant_prx_with_smooth_rise_fall (class in iqm.pulse.gates.prx)": [[80, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall"]], "fall_waveform (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[80, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.fall_waveform"]], "main_waveform (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[80, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.main_waveform"]], "parameters (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[80, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.parameters"]], "rise_waveform (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[80, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.rise_waveform"]], "symmetric (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[80, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.symmetric"]], "prx_customwaveforms (class in iqm.pulse.gates.prx)": [[81, "iqm.pulse.gates.prx.PRX_CustomWaveforms"]], "_get_pulse() (iqm.pulse.gates.prx.prx_customwaveforms class method)": [[81, "iqm.pulse.gates.prx.PRX_CustomWaveforms._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_customwaveforms attribute)": [[81, "iqm.pulse.gates.prx.PRX_CustomWaveforms.dependent_waves"]], "root_parameters (iqm.pulse.gates.prx.prx_customwaveforms attribute)": [[81, "iqm.pulse.gates.prx.PRX_CustomWaveforms.root_parameters"]], "prx_customwaveformssx (class in iqm.pulse.gates.prx)": [[82, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX"]], "_call() (iqm.pulse.gates.prx.prx_customwaveformssx method)": [[82, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX._call"]], "_get_pulse() (iqm.pulse.gates.prx.prx_customwaveformssx class method)": [[82, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_customwaveformssx attribute)": [[82, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX.dependent_waves"]], "root_parameters (iqm.pulse.gates.prx.prx_customwaveformssx attribute)": [[82, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX.root_parameters"]], "prx_dragcosinerisefall (class in iqm.pulse.gates.prx)": [[83, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall"]], "_get_pulse() (iqm.pulse.gates.prx.prx_dragcosinerisefall class method)": [[83, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[83, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.dependent_waves"]], "excluded_parameters (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[83, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.excluded_parameters"]], "parameters (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[83, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[83, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[83, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.wave_q"]], "prx_dragcosinerisefallsx (class in iqm.pulse.gates.prx)": [[84, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX"]], "_get_pulse() (iqm.pulse.gates.prx.prx_dragcosinerisefallsx class method)": [[84, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[84, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.dependent_waves"]], "excluded_parameters (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[84, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.excluded_parameters"]], "parameters (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[84, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[84, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[84, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.wave_q"]], "prx_draggaussian (class in iqm.pulse.gates.prx)": [[85, "iqm.pulse.gates.prx.PRX_DRAGGaussian"]], "dependent_waves (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[85, "iqm.pulse.gates.prx.PRX_DRAGGaussian.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[85, "iqm.pulse.gates.prx.PRX_DRAGGaussian.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[85, "iqm.pulse.gates.prx.PRX_DRAGGaussian.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[85, "iqm.pulse.gates.prx.PRX_DRAGGaussian.wave_q"]], "prx_draggaussiansx (class in iqm.pulse.gates.prx)": [[86, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX"]], "dependent_waves (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[86, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[86, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[86, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[86, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.wave_q"]], "prx_gateimplementation (class in iqm.pulse.gates.prx)": [[87, "iqm.pulse.gates.prx.PRX_GateImplementation"]], "_call() (iqm.pulse.gates.prx.prx_gateimplementation method)": [[87, "iqm.pulse.gates.prx.PRX_GateImplementation._call"]], "clifford() (iqm.pulse.gates.prx.prx_gateimplementation method)": [[87, "iqm.pulse.gates.prx.PRX_GateImplementation.clifford"]], "get_locus_mapping_name() (iqm.pulse.gates.prx.prx_gateimplementation class method)": [[87, "iqm.pulse.gates.prx.PRX_GateImplementation.get_locus_mapping_name"]], "rx() (iqm.pulse.gates.prx.prx_gateimplementation method)": [[87, "iqm.pulse.gates.prx.PRX_GateImplementation.rx"]], "ry() (iqm.pulse.gates.prx.prx_gateimplementation method)": [[87, "iqm.pulse.gates.prx.PRX_GateImplementation.ry"]], "prx_singlepulse_gateimplementation (class in iqm.pulse.gates.prx)": [[88, "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation"]], "_call() (iqm.pulse.gates.prx.prx_singlepulse_gateimplementation method)": [[88, "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation._call"]], "iq_pulse (iqm.pulse.gates.prx.prx_singlepulse_gateimplementation property)": [[88, "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation.iq_pulse"]], "get_unitary_prx() (in module iqm.pulse.gates.prx)": [[89, "iqm.pulse.gates.prx.get_unitary_prx"]], "register_implementation() (in module iqm.pulse.gates)": [[90, "iqm.pulse.gates.register_implementation"]], "iqm.pulse.gates.reset": [[91, "module-iqm.pulse.gates.reset"]], "reset_feedback_key (in module iqm.pulse.gates.reset)": [[92, "iqm.pulse.gates.reset.RESET_FEEDBACK_KEY"]], "reset_measurement_key (in module iqm.pulse.gates.reset)": [[93, "iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY"]], "reset_conditional (class in iqm.pulse.gates.reset)": [[94, "iqm.pulse.gates.reset.Reset_Conditional"]], "_call() (iqm.pulse.gates.reset.reset_conditional method)": [[94, "iqm.pulse.gates.reset.Reset_Conditional._call"]], "get_locus_mapping_name() (iqm.pulse.gates.reset.reset_conditional class method)": [[94, "iqm.pulse.gates.reset.Reset_Conditional.get_locus_mapping_name"]], "registered_gates (iqm.pulse.gates.reset.reset_conditional attribute)": [[94, "iqm.pulse.gates.reset.Reset_Conditional.registered_gates"]], "reset_wait (class in iqm.pulse.gates.reset)": [[95, "iqm.pulse.gates.reset.Reset_Wait"]], "_call() (iqm.pulse.gates.reset.reset_wait method)": [[95, "iqm.pulse.gates.reset.Reset_Wait._call"]], "duration_in_seconds() (iqm.pulse.gates.reset.reset_wait method)": [[95, "iqm.pulse.gates.reset.Reset_Wait.duration_in_seconds"]], "get_custom_locus_mapping() (iqm.pulse.gates.reset.reset_wait class method)": [[95, "iqm.pulse.gates.reset.Reset_Wait.get_custom_locus_mapping"]], "parameters (iqm.pulse.gates.reset.reset_wait attribute)": [[95, "iqm.pulse.gates.reset.Reset_Wait.parameters"]], "wait_box() (iqm.pulse.gates.reset.reset_wait method)": [[95, "iqm.pulse.gates.reset.Reset_Wait.wait_box"]], "iqm.pulse.gates.rz": [[96, "module-iqm.pulse.gates.rz"]], "rz_acstarkshift (class in iqm.pulse.gates.rz)": [[97, "iqm.pulse.gates.rz.RZ_ACStarkShift"]], "_ac_stark_pulse() (iqm.pulse.gates.rz.rz_acstarkshift class method)": [[97, "iqm.pulse.gates.rz.RZ_ACStarkShift._ac_stark_pulse"]], "_call() (iqm.pulse.gates.rz.rz_acstarkshift method)": [[97, "iqm.pulse.gates.rz.RZ_ACStarkShift._call"]], "duration_in_seconds() (iqm.pulse.gates.rz.rz_acstarkshift method)": [[97, "iqm.pulse.gates.rz.RZ_ACStarkShift.duration_in_seconds"]], "rz_acstarkshift_cosinerisefall (class in iqm.pulse.gates.rz)": [[98, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall"]], "ac_stark_waveform (iqm.pulse.gates.rz.rz_acstarkshift_cosinerisefall attribute)": [[98, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.ac_stark_waveform"]], "parameters (iqm.pulse.gates.rz.rz_acstarkshift_cosinerisefall attribute)": [[98, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.parameters"]], "symmetric (iqm.pulse.gates.rz.rz_acstarkshift_cosinerisefall attribute)": [[98, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.symmetric"]], "rz_acstarkshift_smoothconstant (class in iqm.pulse.gates.rz)": [[99, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant"]], "fall_waveform (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[99, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.fall_waveform"]], "main_waveform (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[99, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.main_waveform"]], "parameters (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[99, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.parameters"]], "rise_waveform (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[99, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.rise_waveform"]], "symmetric (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[99, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.symmetric"]], "rz_virtual (class in iqm.pulse.gates.rz)": [[100, "iqm.pulse.gates.rz.RZ_Virtual"]], "_call() (iqm.pulse.gates.rz.rz_virtual method)": [[100, "iqm.pulse.gates.rz.RZ_Virtual._call"]], "duration_in_seconds() (iqm.pulse.gates.rz.rz_virtual method)": [[100, "iqm.pulse.gates.rz.RZ_Virtual.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.rz.rz_virtual class method)": [[100, "iqm.pulse.gates.rz.RZ_Virtual.get_locus_mapping_name"]], "parameters (iqm.pulse.gates.rz.rz_virtual attribute)": [[100, "iqm.pulse.gates.rz.RZ_Virtual.parameters"]], "get_unitary_rz() (in module iqm.pulse.gates.rz)": [[101, "iqm.pulse.gates.rz.get_unitary_rz"]], "iqm.pulse.gates.sx": [[102, "module-iqm.pulse.gates.sx"]], "sxgate (class in iqm.pulse.gates.sx)": [[103, "iqm.pulse.gates.sx.SXGate"]], "_call() (iqm.pulse.gates.sx.sxgate method)": [[103, "iqm.pulse.gates.sx.SXGate._call"]], "registered_gates (iqm.pulse.gates.sx.sxgate attribute)": [[103, "iqm.pulse.gates.sx.SXGate.registered_gates"]], "iqm.pulse.gates.u": [[104, "module-iqm.pulse.gates.u"]], "ugate (class in iqm.pulse.gates.u)": [[105, "iqm.pulse.gates.u.UGate"]], "_call() (iqm.pulse.gates.u.ugate method)": [[105, "iqm.pulse.gates.u.UGate._call"]], "registered_gates (iqm.pulse.gates.u.ugate attribute)": [[105, "iqm.pulse.gates.u.UGate.registered_gates"]], "get_unitary_u() (in module iqm.pulse.gates.u)": [[106, "iqm.pulse.gates.u.get_unitary_u"]], "iqm.pulse.playlist": [[107, "module-iqm.pulse.playlist"]], "iqm.pulse.playlist.channel": [[108, "module-iqm.pulse.playlist.channel"]], "channelconfiguration (class in iqm.pulse.playlist.channel)": [[109, "iqm.pulse.playlist.channel.ChannelConfiguration"]], "channeldescription (class in iqm.pulse.playlist.channel)": [[110, "iqm.pulse.playlist.channel.ChannelDescription"]], "add_instruction() (iqm.pulse.playlist.channel.channeldescription method)": [[110, "iqm.pulse.playlist.channel.ChannelDescription.add_instruction"]], "channelproperties (class in iqm.pulse.playlist.channel)": [[111, "iqm.pulse.playlist.channel.ChannelProperties"]], "blocks_component (iqm.pulse.playlist.channel.channelproperties attribute)": [[111, "iqm.pulse.playlist.channel.ChannelProperties.blocks_component"]], "compatible_instructions (iqm.pulse.playlist.channel.channelproperties attribute)": [[111, "iqm.pulse.playlist.channel.ChannelProperties.compatible_instructions"]], "duration_to_int_samples() (iqm.pulse.playlist.channel.channelproperties method)": [[111, "iqm.pulse.playlist.channel.ChannelProperties.duration_to_int_samples"]], "duration_to_samples() (iqm.pulse.playlist.channel.channelproperties method)": [[111, "iqm.pulse.playlist.channel.ChannelProperties.duration_to_samples"]], "duration_to_seconds() (iqm.pulse.playlist.channel.channelproperties method)": [[111, "iqm.pulse.playlist.channel.ChannelProperties.duration_to_seconds"]], "instruction_duration_granularity (iqm.pulse.playlist.channel.channelproperties attribute)": [[111, "iqm.pulse.playlist.channel.ChannelProperties.instruction_duration_granularity"]], "instruction_duration_min (iqm.pulse.playlist.channel.channelproperties attribute)": [[111, "iqm.pulse.playlist.channel.ChannelProperties.instruction_duration_min"]], "is_iq (iqm.pulse.playlist.channel.channelproperties attribute)": [[111, "iqm.pulse.playlist.channel.ChannelProperties.is_iq"]], "is_virtual (iqm.pulse.playlist.channel.channelproperties attribute)": [[111, "iqm.pulse.playlist.channel.ChannelProperties.is_virtual"]], "round_duration_to_granularity() (iqm.pulse.playlist.channel.channelproperties method)": [[111, "iqm.pulse.playlist.channel.ChannelProperties.round_duration_to_granularity"]], "sample_rate (iqm.pulse.playlist.channel.channelproperties attribute)": [[111, "iqm.pulse.playlist.channel.ChannelProperties.sample_rate"]], "iqchannelconfig (class in iqm.pulse.playlist.channel)": [[112, "iqm.pulse.playlist.channel.IQChannelConfig"]], "frequency (iqm.pulse.playlist.channel.iqchannelconfig attribute)": [[112, "iqm.pulse.playlist.channel.IQChannelConfig.frequency"]], "probechannelproperties (class in iqm.pulse.playlist.channel)": [[113, "iqm.pulse.playlist.channel.ProbeChannelProperties"]], "center_frequency (iqm.pulse.playlist.channel.probechannelproperties attribute)": [[113, "iqm.pulse.playlist.channel.ProbeChannelProperties.center_frequency"]], "integration_start_dead_time (iqm.pulse.playlist.channel.probechannelproperties attribute)": [[113, "iqm.pulse.playlist.channel.ProbeChannelProperties.integration_start_dead_time"]], "integration_stop_dead_time (iqm.pulse.playlist.channel.probechannelproperties attribute)": [[113, "iqm.pulse.playlist.channel.ProbeChannelProperties.integration_stop_dead_time"]], "realchannelconfig (class in iqm.pulse.playlist.channel)": [[114, "iqm.pulse.playlist.channel.RealChannelConfig"]], "sample_rate (iqm.pulse.playlist.channel.realchannelconfig attribute)": [[114, "iqm.pulse.playlist.channel.RealChannelConfig.sample_rate"]], "get_channel_properties() (in module iqm.pulse.playlist.channel)": [[115, "iqm.pulse.playlist.channel.get_channel_properties"]], "get_channel_properties_from_station_settings() (in module iqm.pulse.playlist.channel)": [[116, "iqm.pulse.playlist.channel.get_channel_properties_from_station_settings"]], "round_duration_to_granularity_samples() (in module iqm.pulse.playlist.channel)": [[117, "iqm.pulse.playlist.channel.round_duration_to_granularity_samples"]], "iqm.pulse.playlist.instructions": [[118, "module-iqm.pulse.playlist.instructions"]], "acquisitionmethod (class in iqm.pulse.playlist.instructions)": [[119, "iqm.pulse.playlist.instructions.AcquisitionMethod"]], "delay_samples (iqm.pulse.playlist.instructions.acquisitionmethod attribute)": [[119, "iqm.pulse.playlist.instructions.AcquisitionMethod.delay_samples"]], "label (iqm.pulse.playlist.instructions.acquisitionmethod attribute)": [[119, "iqm.pulse.playlist.instructions.AcquisitionMethod.label"]], "block (class in iqm.pulse.playlist.instructions)": [[120, "iqm.pulse.playlist.instructions.Block"]], "complexintegration (class in iqm.pulse.playlist.instructions)": [[121, "iqm.pulse.playlist.instructions.ComplexIntegration"]], "weights (iqm.pulse.playlist.instructions.complexintegration attribute)": [[121, "iqm.pulse.playlist.instructions.ComplexIntegration.weights"]], "conditionalinstruction (class in iqm.pulse.playlist.instructions)": [[122, "iqm.pulse.playlist.instructions.ConditionalInstruction"]], "condition (iqm.pulse.playlist.instructions.conditionalinstruction attribute)": [[122, "iqm.pulse.playlist.instructions.ConditionalInstruction.condition"]], "get_child_instructions() (iqm.pulse.playlist.instructions.conditionalinstruction method)": [[122, "iqm.pulse.playlist.instructions.ConditionalInstruction.get_child_instructions"]], "outcomes (iqm.pulse.playlist.instructions.conditionalinstruction attribute)": [[122, "iqm.pulse.playlist.instructions.ConditionalInstruction.outcomes"]], "validate() (iqm.pulse.playlist.instructions.conditionalinstruction method)": [[122, "iqm.pulse.playlist.instructions.ConditionalInstruction.validate"]], "fluxpulse (class in iqm.pulse.playlist.instructions)": [[123, "iqm.pulse.playlist.instructions.FluxPulse"]], "rzs (iqm.pulse.playlist.instructions.fluxpulse attribute)": [[123, "iqm.pulse.playlist.instructions.FluxPulse.rzs"]], "iqpulse (class in iqm.pulse.playlist.instructions)": [[124, "iqm.pulse.playlist.instructions.IQPulse"]], "get_waveforms() (iqm.pulse.playlist.instructions.iqpulse method)": [[124, "iqm.pulse.playlist.instructions.IQPulse.get_waveforms"]], "modulation_frequency (iqm.pulse.playlist.instructions.iqpulse attribute)": [[124, "iqm.pulse.playlist.instructions.IQPulse.modulation_frequency"]], "phase (iqm.pulse.playlist.instructions.iqpulse attribute)": [[124, "iqm.pulse.playlist.instructions.IQPulse.phase"]], "phase_increment (iqm.pulse.playlist.instructions.iqpulse attribute)": [[124, "iqm.pulse.playlist.instructions.IQPulse.phase_increment"]], "scale_i (iqm.pulse.playlist.instructions.iqpulse attribute)": [[124, "iqm.pulse.playlist.instructions.IQPulse.scale_i"]], "scale_q (iqm.pulse.playlist.instructions.iqpulse attribute)": [[124, "iqm.pulse.playlist.instructions.IQPulse.scale_q"]], "validate() (iqm.pulse.playlist.instructions.iqpulse method)": [[124, "iqm.pulse.playlist.instructions.IQPulse.validate"]], "wave_i (iqm.pulse.playlist.instructions.iqpulse attribute)": [[124, "iqm.pulse.playlist.instructions.IQPulse.wave_i"]], "wave_q (iqm.pulse.playlist.instructions.iqpulse attribute)": [[124, "iqm.pulse.playlist.instructions.IQPulse.wave_q"]], "instruction (class in iqm.pulse.playlist.instructions)": [[125, "iqm.pulse.playlist.instructions.Instruction"]], "copy() (iqm.pulse.playlist.instructions.instruction method)": [[125, "iqm.pulse.playlist.instructions.Instruction.copy"]], "duration (iqm.pulse.playlist.instructions.instruction attribute)": [[125, "iqm.pulse.playlist.instructions.Instruction.duration"]], "get_child_instructions() (iqm.pulse.playlist.instructions.instruction method)": [[125, "iqm.pulse.playlist.instructions.Instruction.get_child_instructions"]], "get_waveforms() (iqm.pulse.playlist.instructions.instruction method)": [[125, "iqm.pulse.playlist.instructions.Instruction.get_waveforms"]], "validate() (iqm.pulse.playlist.instructions.instruction method)": [[125, "iqm.pulse.playlist.instructions.Instruction.validate"]], "multiplexediqpulse (class in iqm.pulse.playlist.instructions)": [[126, "iqm.pulse.playlist.instructions.MultiplexedIQPulse"]], "entries (iqm.pulse.playlist.instructions.multiplexediqpulse attribute)": [[126, "iqm.pulse.playlist.instructions.MultiplexedIQPulse.entries"]], "readouttrigger (class in iqm.pulse.playlist.instructions)": [[127, "iqm.pulse.playlist.instructions.ReadoutTrigger"]], "acquisitions (iqm.pulse.playlist.instructions.readouttrigger attribute)": [[127, "iqm.pulse.playlist.instructions.ReadoutTrigger.acquisitions"]], "probe_pulse (iqm.pulse.playlist.instructions.readouttrigger attribute)": [[127, "iqm.pulse.playlist.instructions.ReadoutTrigger.probe_pulse"]], "realpulse (class in iqm.pulse.playlist.instructions)": [[128, "iqm.pulse.playlist.instructions.RealPulse"]], "get_waveforms() (iqm.pulse.playlist.instructions.realpulse method)": [[128, "iqm.pulse.playlist.instructions.RealPulse.get_waveforms"]], "scale (iqm.pulse.playlist.instructions.realpulse attribute)": [[128, "iqm.pulse.playlist.instructions.RealPulse.scale"]], "validate() (iqm.pulse.playlist.instructions.realpulse method)": [[128, "iqm.pulse.playlist.instructions.RealPulse.validate"]], "wave (iqm.pulse.playlist.instructions.realpulse attribute)": [[128, "iqm.pulse.playlist.instructions.RealPulse.wave"]], "thresholdstatediscrimination (class in iqm.pulse.playlist.instructions)": [[129, "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination"]], "feedback_signal_label (iqm.pulse.playlist.instructions.thresholdstatediscrimination attribute)": [[129, "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination.feedback_signal_label"]], "threshold (iqm.pulse.playlist.instructions.thresholdstatediscrimination attribute)": [[129, "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination.threshold"]], "timetrace (class in iqm.pulse.playlist.instructions)": [[130, "iqm.pulse.playlist.instructions.TimeTrace"]], "duration_samples (iqm.pulse.playlist.instructions.timetrace attribute)": [[130, "iqm.pulse.playlist.instructions.TimeTrace.duration_samples"]], "virtualrz (class in iqm.pulse.playlist.instructions)": [[131, "iqm.pulse.playlist.instructions.VirtualRZ"]], "phase_increment (iqm.pulse.playlist.instructions.virtualrz attribute)": [[131, "iqm.pulse.playlist.instructions.VirtualRZ.phase_increment"]], "wait (class in iqm.pulse.playlist.instructions)": [[132, "iqm.pulse.playlist.instructions.Wait"]], "iqm.pulse.playlist.playlist": [[133, "module-iqm.pulse.playlist.playlist"]], "iqm.pulse.playlist.schedule": [[134, "module-iqm.pulse.playlist.schedule"]], "nothing (class in iqm.pulse.playlist.schedule)": [[135, "iqm.pulse.playlist.schedule.Nothing"]], "schedule (class in iqm.pulse.playlist.schedule)": [[136, "iqm.pulse.playlist.schedule.Schedule"]], "add_channels() (iqm.pulse.playlist.schedule.schedule method)": [[136, "iqm.pulse.playlist.schedule.Schedule.add_channels"]], "append() (iqm.pulse.playlist.schedule.schedule method)": [[136, "iqm.pulse.playlist.schedule.Schedule.append"]], "channels() (iqm.pulse.playlist.schedule.schedule method)": [[136, "iqm.pulse.playlist.schedule.Schedule.channels"]], "cleanup() (iqm.pulse.playlist.schedule.schedule method)": [[136, "iqm.pulse.playlist.schedule.Schedule.cleanup"]], "copy() (iqm.pulse.playlist.schedule.schedule method)": [[136, "iqm.pulse.playlist.schedule.Schedule.copy"]], "duration (iqm.pulse.playlist.schedule.schedule property)": [[136, "iqm.pulse.playlist.schedule.Schedule.duration"]], "duration_in_seconds() (iqm.pulse.playlist.schedule.schedule method)": [[136, "iqm.pulse.playlist.schedule.Schedule.duration_in_seconds"]], "extend() (iqm.pulse.playlist.schedule.schedule method)": [[136, "iqm.pulse.playlist.schedule.Schedule.extend"]], "front_pad() (iqm.pulse.playlist.schedule.schedule method)": [[136, "iqm.pulse.playlist.schedule.Schedule.front_pad"]], "front_pad_in_seconds() (iqm.pulse.playlist.schedule.schedule method)": [[136, "iqm.pulse.playlist.schedule.Schedule.front_pad_in_seconds"]], "has_content_in() (iqm.pulse.playlist.schedule.schedule method)": [[136, "iqm.pulse.playlist.schedule.Schedule.has_content_in"]], "items() (iqm.pulse.playlist.schedule.schedule method)": [[136, "iqm.pulse.playlist.schedule.Schedule.items"]], "pad_to_hard_box() (iqm.pulse.playlist.schedule.schedule method)": [[136, "iqm.pulse.playlist.schedule.Schedule.pad_to_hard_box"]], "pad_to_hard_box_in_seconds() (iqm.pulse.playlist.schedule.schedule method)": [[136, "iqm.pulse.playlist.schedule.Schedule.pad_to_hard_box_in_seconds"]], "pprint() (iqm.pulse.playlist.schedule.schedule method)": [[136, "iqm.pulse.playlist.schedule.Schedule.pprint"]], "reverse() (iqm.pulse.playlist.schedule.schedule method)": [[136, "iqm.pulse.playlist.schedule.Schedule.reverse"]], "reverse_hard_box() (iqm.pulse.playlist.schedule.schedule method)": [[136, "iqm.pulse.playlist.schedule.Schedule.reverse_hard_box"]], "validate() (iqm.pulse.playlist.schedule.schedule method)": [[136, "iqm.pulse.playlist.schedule.Schedule.validate"]], "segment (class in iqm.pulse.playlist.schedule)": [[137, "iqm.pulse.playlist.schedule.Segment"]], "_duration (iqm.pulse.playlist.schedule.segment attribute)": [[137, "iqm.pulse.playlist.schedule.Segment._duration"]], "_instructions (iqm.pulse.playlist.schedule.segment attribute)": [[137, "iqm.pulse.playlist.schedule.Segment._instructions"]], "append() (iqm.pulse.playlist.schedule.segment method)": [[137, "iqm.pulse.playlist.schedule.Segment.append"]], "copy() (iqm.pulse.playlist.schedule.segment method)": [[137, "iqm.pulse.playlist.schedule.Segment.copy"]], "duration (iqm.pulse.playlist.schedule.segment property)": [[137, "iqm.pulse.playlist.schedule.Segment.duration"]], "extend() (iqm.pulse.playlist.schedule.segment method)": [[137, "iqm.pulse.playlist.schedule.Segment.extend"]], "pop() (iqm.pulse.playlist.schedule.segment method)": [[137, "iqm.pulse.playlist.schedule.Segment.pop"]], "prepend() (iqm.pulse.playlist.schedule.segment method)": [[137, "iqm.pulse.playlist.schedule.Segment.prepend"]], "tolerance (in module iqm.pulse.playlist.schedule)": [[138, "iqm.pulse.playlist.schedule.TOLERANCE"]], "iqm.pulse.playlist.visualisation": [[139, "module-iqm.pulse.playlist.visualisation"]], "iqm.pulse.playlist.visualisation.base": [[140, "module-iqm.pulse.playlist.visualisation.base"]], "inspect_playlist() (in module iqm.pulse.playlist.visualisation.base)": [[141, "iqm.pulse.playlist.visualisation.base.inspect_playlist"]], "iqm.pulse.playlist.waveforms": [[142, "module-iqm.pulse.playlist.waveforms"]], "chirp (class in iqm.pulse.playlist.waveforms)": [[143, "iqm.pulse.playlist.waveforms.Chirp"]], "_sample() (iqm.pulse.playlist.waveforms.chirp method)": [[143, "iqm.pulse.playlist.waveforms.Chirp._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.chirp static method)": [[143, "iqm.pulse.playlist.waveforms.Chirp.non_timelike_attributes"]], "chirpimag (class in iqm.pulse.playlist.waveforms)": [[144, "iqm.pulse.playlist.waveforms.ChirpImag"]], "phase (iqm.pulse.playlist.waveforms.chirpimag attribute)": [[144, "iqm.pulse.playlist.waveforms.ChirpImag.phase"]], "cosine (class in iqm.pulse.playlist.waveforms)": [[145, "iqm.pulse.playlist.waveforms.Cosine"]], "_sample() (iqm.pulse.playlist.waveforms.cosine method)": [[145, "iqm.pulse.playlist.waveforms.Cosine._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.cosine static method)": [[145, "iqm.pulse.playlist.waveforms.Cosine.non_timelike_attributes"]], "cosinefall (class in iqm.pulse.playlist.waveforms)": [[146, "iqm.pulse.playlist.waveforms.CosineFall"]], "_sample() (iqm.pulse.playlist.waveforms.cosinefall method)": [[146, "iqm.pulse.playlist.waveforms.CosineFall._sample"]], "cosinerise (class in iqm.pulse.playlist.waveforms)": [[147, "iqm.pulse.playlist.waveforms.CosineRise"]], "_sample() (iqm.pulse.playlist.waveforms.cosinerise method)": [[147, "iqm.pulse.playlist.waveforms.CosineRise._sample"]], "cosinerisefallderivative (class in iqm.pulse.playlist.waveforms)": [[148, "iqm.pulse.playlist.waveforms.CosineRiseFallDerivative"]], "_sample() (iqm.pulse.playlist.waveforms.cosinerisefallderivative method)": [[148, "iqm.pulse.playlist.waveforms.CosineRiseFallDerivative._sample"]], "modulatedcosinerisefall (class in iqm.pulse.playlist.waveforms)": [[149, "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall"]], "_sample() (iqm.pulse.playlist.waveforms.modulatedcosinerisefall method)": [[149, "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.modulatedcosinerisefall static method)": [[149, "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall.non_timelike_attributes"]], "slepian (class in iqm.pulse.playlist.waveforms)": [[150, "iqm.pulse.playlist.waveforms.Slepian"]], "_sample() (iqm.pulse.playlist.waveforms.slepian method)": [[150, "iqm.pulse.playlist.waveforms.Slepian._sample"]], "_sample_normalized_slepian() (iqm.pulse.playlist.waveforms.slepian method)": [[150, "iqm.pulse.playlist.waveforms.Slepian._sample_normalized_slepian"]], "_t_tau() (iqm.pulse.playlist.waveforms.slepian method)": [[150, "iqm.pulse.playlist.waveforms.Slepian._t_tau"]], "_theta_tau() (iqm.pulse.playlist.waveforms.slepian method)": [[150, "iqm.pulse.playlist.waveforms.Slepian._theta_tau"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.slepian static method)": [[150, "iqm.pulse.playlist.waveforms.Slepian.non_timelike_attributes"]], "iqm.pulse.quantum_ops": [[151, "module-iqm.pulse.quantum_ops"]], "quantumop (class in iqm.pulse.quantum_ops)": [[152, "iqm.pulse.quantum_ops.QuantumOp"]], "arity (iqm.pulse.quantum_ops.quantumop attribute)": [[152, "iqm.pulse.quantum_ops.QuantumOp.arity"]], "copy() (iqm.pulse.quantum_ops.quantumop method)": [[152, "iqm.pulse.quantum_ops.QuantumOp.copy"]], "default_implementation (iqm.pulse.quantum_ops.quantumop property)": [[152, "iqm.pulse.quantum_ops.QuantumOp.default_implementation"]], "defaults_for_locus (iqm.pulse.quantum_ops.quantumop attribute)": [[152, "iqm.pulse.quantum_ops.QuantumOp.defaults_for_locus"]], "factorizable (iqm.pulse.quantum_ops.quantumop attribute)": [[152, "iqm.pulse.quantum_ops.QuantumOp.factorizable"]], "get_default_implementation_for_locus() (iqm.pulse.quantum_ops.quantumop method)": [[152, "iqm.pulse.quantum_ops.QuantumOp.get_default_implementation_for_locus"]], "implementations (iqm.pulse.quantum_ops.quantumop attribute)": [[152, "iqm.pulse.quantum_ops.QuantumOp.implementations"]], "name (iqm.pulse.quantum_ops.quantumop attribute)": [[152, "iqm.pulse.quantum_ops.QuantumOp.name"]], "params (iqm.pulse.quantum_ops.quantumop attribute)": [[152, "iqm.pulse.quantum_ops.QuantumOp.params"]], "set_default_implementation() (iqm.pulse.quantum_ops.quantumop method)": [[152, "iqm.pulse.quantum_ops.QuantumOp.set_default_implementation"]], "set_default_implementation_for_locus() (iqm.pulse.quantum_ops.quantumop method)": [[152, "iqm.pulse.quantum_ops.QuantumOp.set_default_implementation_for_locus"]], "symmetric (iqm.pulse.quantum_ops.quantumop attribute)": [[152, "iqm.pulse.quantum_ops.QuantumOp.symmetric"]], "unitary (iqm.pulse.quantum_ops.quantumop attribute)": [[152, "iqm.pulse.quantum_ops.QuantumOp.unitary"]], "quantumoptable (in module iqm.pulse.quantum_ops)": [[153, "iqm.pulse.quantum_ops.QuantumOpTable"]], "validate_locus_calibration() (in module iqm.pulse.quantum_ops)": [[154, "iqm.pulse.quantum_ops.validate_locus_calibration"]], "validate_op_calibration() (in module iqm.pulse.quantum_ops)": [[155, "iqm.pulse.quantum_ops.validate_op_calibration"]], "iqm.pulse.scheduler": [[156, "module-iqm.pulse.scheduler"]], "blocking (in module iqm.pulse.scheduler)": [[157, "iqm.pulse.scheduler.BLOCKING"]], "nonsolid (in module iqm.pulse.scheduler)": [[158, "iqm.pulse.scheduler.NONSOLID"]], "segmentpointer (class in iqm.pulse.scheduler)": [[159, "iqm.pulse.scheduler.SegmentPointer"]], "tol (iqm.pulse.scheduler.segmentpointer attribute)": [[159, "iqm.pulse.scheduler.SegmentPointer.TOL"]], "cut_tail() (iqm.pulse.scheduler.segmentpointer method)": [[159, "iqm.pulse.scheduler.SegmentPointer.cut_tail"]], "fastforward() (iqm.pulse.scheduler.segmentpointer method)": [[159, "iqm.pulse.scheduler.SegmentPointer.fastforward"]], "frac (iqm.pulse.scheduler.segmentpointer attribute)": [[159, "iqm.pulse.scheduler.SegmentPointer.frac"]], "get() (iqm.pulse.scheduler.segmentpointer method)": [[159, "iqm.pulse.scheduler.SegmentPointer.get"]], "idx (iqm.pulse.scheduler.segmentpointer attribute)": [[159, "iqm.pulse.scheduler.SegmentPointer.idx"]], "next() (iqm.pulse.scheduler.segmentpointer method)": [[159, "iqm.pulse.scheduler.SegmentPointer.next"]], "remainder (iqm.pulse.scheduler.segmentpointer property)": [[159, "iqm.pulse.scheduler.SegmentPointer.remainder"]], "rewind() (iqm.pulse.scheduler.segmentpointer method)": [[159, "iqm.pulse.scheduler.SegmentPointer.rewind"]], "source (iqm.pulse.scheduler.segmentpointer attribute)": [[159, "iqm.pulse.scheduler.SegmentPointer.source"]], "tail() (iqm.pulse.scheduler.segmentpointer method)": [[159, "iqm.pulse.scheduler.SegmentPointer.tail"]], "extend_hard_boundary() (in module iqm.pulse.scheduler)": [[160, "iqm.pulse.scheduler.extend_hard_boundary"]], "extend_hard_boundary_in_seconds() (in module iqm.pulse.scheduler)": [[161, "iqm.pulse.scheduler.extend_hard_boundary_in_seconds"]], "extend_schedule() (in module iqm.pulse.scheduler)": [[162, "iqm.pulse.scheduler.extend_schedule"]], "extend_schedule_new() (in module iqm.pulse.scheduler)": [[163, "iqm.pulse.scheduler.extend_schedule_new"]], "iqm.pulse.timebox": [[164, "module-iqm.pulse.timebox"]], "multiplexedprobetimebox (class in iqm.pulse.timebox)": [[165, "iqm.pulse.timebox.MultiplexedProbeTimeBox"]], "from_readout_trigger() (iqm.pulse.timebox.multiplexedprobetimebox static method)": [[165, "iqm.pulse.timebox.MultiplexedProbeTimeBox.from_readout_trigger"]], "hard_boundary (iqm.pulse.timebox.schedulingalgorithm attribute)": [[166, "iqm.pulse.timebox.SchedulingAlgorithm.HARD_BOUNDARY"]], "schedulingalgorithm (class in iqm.pulse.timebox)": [[166, "iqm.pulse.timebox.SchedulingAlgorithm"]], "tetris (iqm.pulse.timebox.schedulingalgorithm attribute)": [[166, "iqm.pulse.timebox.SchedulingAlgorithm.TETRIS"]], "alap (iqm.pulse.timebox.schedulingstrategy attribute)": [[167, "iqm.pulse.timebox.SchedulingStrategy.ALAP"]], "asap (iqm.pulse.timebox.schedulingstrategy attribute)": [[167, "iqm.pulse.timebox.SchedulingStrategy.ASAP"]], "schedulingstrategy (class in iqm.pulse.timebox)": [[167, "iqm.pulse.timebox.SchedulingStrategy"]], "timebox (class in iqm.pulse.timebox)": [[168, "iqm.pulse.timebox.TimeBox"]], "atom (iqm.pulse.timebox.timebox attribute)": [[168, "iqm.pulse.timebox.TimeBox.atom"]], "atomic() (iqm.pulse.timebox.timebox static method)": [[168, "iqm.pulse.timebox.TimeBox.atomic"]], "children (iqm.pulse.timebox.timebox attribute)": [[168, "iqm.pulse.timebox.TimeBox.children"]], "composite() (iqm.pulse.timebox.timebox static method)": [[168, "iqm.pulse.timebox.TimeBox.composite"]], "label (iqm.pulse.timebox.timebox attribute)": [[168, "iqm.pulse.timebox.TimeBox.label"]], "locus_components (iqm.pulse.timebox.timebox attribute)": [[168, "iqm.pulse.timebox.TimeBox.locus_components"]], "neighborhood_components (iqm.pulse.timebox.timebox attribute)": [[168, "iqm.pulse.timebox.TimeBox.neighborhood_components"]], "print() (iqm.pulse.timebox.timebox method)": [[168, "iqm.pulse.timebox.TimeBox.print"]], "scheduling (iqm.pulse.timebox.timebox attribute)": [[168, "iqm.pulse.timebox.TimeBox.scheduling"]], "scheduling_algorithm (iqm.pulse.timebox.timebox attribute)": [[168, "iqm.pulse.timebox.TimeBox.scheduling_algorithm"]], "set_alap() (iqm.pulse.timebox.timebox method)": [[168, "iqm.pulse.timebox.TimeBox.set_alap"]], "set_asap() (iqm.pulse.timebox.timebox method)": [[168, "iqm.pulse.timebox.TimeBox.set_asap"]], "validate() (iqm.pulse.timebox.timebox method)": [[168, "iqm.pulse.timebox.TimeBox.validate"]], "iqm.pulse.utils": [[169, "module-iqm.pulse.utils"]], "load_yaml() (in module iqm.pulse.utils)": [[170, "iqm.pulse.utils.load_yaml"]], "map_waveform_param_types() (in module iqm.pulse.utils)": [[171, "iqm.pulse.utils.map_waveform_param_types"]], "normalize_angle() (in module iqm.pulse.utils)": [[172, "iqm.pulse.utils.normalize_angle"]], "phase_transformation() (in module iqm.pulse.utils)": [[173, "iqm.pulse.utils.phase_transformation"]], "iqm.pulse.validation": [[174, "module-iqm.pulse.validation"]], "awgschedulevalidationdata (class in iqm.pulse.validation)": [[175, "iqm.pulse.validation.AWGScheduleValidationData"]], "awgschedulevalidationerror": [[176, "iqm.pulse.validation.AWGScheduleValidationError"]], "invalidinstructionerror": [[177, "iqm.pulse.validation.InvalidInstructionError"]], "playlistvalidationerror": [[178, "iqm.pulse.validation.PlaylistValidationError"]], "validate_awg_and_schedule_compatibility() (in module iqm.pulse.validation)": [[179, "iqm.pulse.validation.validate_awg_and_schedule_compatibility"]], "validate_channel() (in module iqm.pulse.validation)": [[180, "iqm.pulse.validation.validate_channel"]], "validate_instruction_and_wf_length() (in module iqm.pulse.validation)": [[181, "iqm.pulse.validation.validate_instruction_and_wf_length"]], "validate_playlist_compatibility() (in module iqm.pulse.validation)": [[182, "iqm.pulse.validation.validate_playlist_compatibility"]]}})