Search.setIndex({"docnames": ["API", "api/iqm.benchmarks", "api/iqm.benchmarks.benchmark", "api/iqm.benchmarks.benchmark.BenchmarkBase", "api/iqm.benchmarks.benchmark.BenchmarkConfigurationBase", "api/iqm.benchmarks.benchmark_definition", "api/iqm.benchmarks.benchmark_definition.Benchmark", "api/iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservation", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier", "api/iqm.benchmarks.benchmark_definition.BenchmarkRunResult", "api/iqm.benchmarks.benchmark_definition.add_counts_to_dataset", "api/iqm.benchmarks.benchmark_definition.default_analysis_function", "api/iqm.benchmarks.benchmark_definition.merge_datasets_dac", "api/iqm.benchmarks.benchmark_definition.show_figure", "api/iqm.benchmarks.circuit_containers", "api/iqm.benchmarks.circuit_containers.BenchmarkCircuit", "api/iqm.benchmarks.circuit_containers.CircuitGroup", "api/iqm.benchmarks.circuit_containers.Circuits", "api/iqm.benchmarks.entanglement", "api/iqm.benchmarks.entanglement.ghz", "api/iqm.benchmarks.entanglement.ghz.GHZBenchmark", "api/iqm.benchmarks.entanglement.ghz.GHZConfiguration", "api/iqm.benchmarks.entanglement.ghz.fidelity_analysis", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_linear", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_star", "api/iqm.benchmarks.entanglement.ghz.get_cx_map", "api/iqm.benchmarks.entanglement.ghz.get_edges", "api/iqm.benchmarks.entanglement.ghz.plot_fidelities", "api/iqm.benchmarks.entanglement.graph_states", "api/iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark", "api/iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration", "api/iqm.benchmarks.entanglement.graph_states.find_edges_with_disjoint_neighbors", "api/iqm.benchmarks.entanglement.graph_states.generate_graph_state", "api/iqm.benchmarks.entanglement.graph_states.generate_minimal_edge_layers", "api/iqm.benchmarks.entanglement.graph_states.negativity_analysis", "api/iqm.benchmarks.entanglement.graph_states.plot_density_matrix", "api/iqm.benchmarks.entanglement.graph_states.plot_max_negativities", "api/iqm.benchmarks.entanglement.graph_states.plot_max_negativities_graph", "api/iqm.benchmarks.entanglement.graph_states.shadow_tomography_analysis", "api/iqm.benchmarks.entanglement.graph_states.state_tomography_analysis", "api/iqm.benchmarks.entanglement.graph_states.update_pauli_expectations", "api/iqm.benchmarks.logging_config", "api/iqm.benchmarks.optimization", "api/iqm.benchmarks.optimization.qscore", "api/iqm.benchmarks.optimization.qscore.QScoreBenchmark", "api/iqm.benchmarks.optimization.qscore.QScoreConfiguration", "api/iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1", "api/iqm.benchmarks.optimization.qscore.compute_expectation_value", "api/iqm.benchmarks.optimization.qscore.create_objective_function", "api/iqm.benchmarks.optimization.qscore.cut_cost_function", "api/iqm.benchmarks.optimization.qscore.get_optimal_angles", "api/iqm.benchmarks.optimization.qscore.is_successful", "api/iqm.benchmarks.optimization.qscore.plot_approximation_ratios", "api/iqm.benchmarks.optimization.qscore.qscore_analysis", "api/iqm.benchmarks.optimization.qscore.run_QAOA", "api/iqm.benchmarks.quantum_volume", "api/iqm.benchmarks.quantum_volume.clops", "api/iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark", "api/iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration", "api/iqm.benchmarks.quantum_volume.clops.clops_analysis", "api/iqm.benchmarks.quantum_volume.clops.plot_times", "api/iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times", "api/iqm.benchmarks.quantum_volume.quantum_volume", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration", "api/iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops", "api/iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector", "api/iqm.benchmarks.quantum_volume.quantum_volume.is_successful", "api/iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold", "api/iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis", "api/iqm.benchmarks.randomized_benchmarking", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits", "api/iqm.benchmarks.readout_mitigation", "api/iqm.benchmarks.readout_mitigation.M3IQM", "api/iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation", "api/iqm.benchmarks.readout_mitigation.readout_error_m3", "api/iqm.benchmarks.utils", "api/iqm.benchmarks.utils.bootstrap_counts", "api/iqm.benchmarks.utils.count_2q_layers", "api/iqm.benchmarks.utils.count_native_gates", "api/iqm.benchmarks.utils.extract_fidelities", "api/iqm.benchmarks.utils.generate_state_tomography_circuits", "api/iqm.benchmarks.utils.get_Pauli_expectation", "api/iqm.benchmarks.utils.get_active_qubits", "api/iqm.benchmarks.utils.get_iqm_backend", "api/iqm.benchmarks.utils.get_measurement_mapping", "api/iqm.benchmarks.utils.get_neighbors_of_edges", "api/iqm.benchmarks.utils.get_tomography_matrix", "api/iqm.benchmarks.utils.marginal_distribution", "api/iqm.benchmarks.utils.median_with_uncertainty", "api/iqm.benchmarks.utils.perform_backend_transpilation", "api/iqm.benchmarks.utils.reduce_to_active_qubits", "api/iqm.benchmarks.utils.remove_directed_duplicates_to_list", "api/iqm.benchmarks.utils.retrieve_all_counts", "api/iqm.benchmarks.utils.retrieve_all_job_metadata", "api/iqm.benchmarks.utils.set_coupling_map", "api/iqm.benchmarks.utils.sort_batches_by_final_layout", "api/iqm.benchmarks.utils.split_sequence_in_chunks", "api/iqm.benchmarks.utils.submit_execute", "api/iqm.benchmarks.utils.timeit", "api/iqm.benchmarks.utils.xrvariable_to_counts", "api/iqm.benchmarks.utils_plots", "api/iqm.benchmarks.utils_plots.GraphPositions", "api/iqm.benchmarks.utils_plots.plot_layout_fidelity_graph", "api/iqm.benchmarks.utils_plots.rx_to_nx_graph", "api/iqm.benchmarks.utils_shadows", "api/iqm.benchmarks.utils_shadows.CUE", "api/iqm.benchmarks.utils_shadows.get_local_shadow", "api/iqm.benchmarks.utils_shadows.get_negativity", "api/iqm.benchmarks.utils_shadows.local_shadow_tomography", "changelog", "development/development", "development/generate_2qubit_cliffords", "development/how_to_make_your_own_benchmark", "devices/devices", "devices/spark", "devices/star", "examples/example_clifford_rb", "examples/example_clops", "examples/example_experiment_all", "examples/example_ghz", "examples/example_ghz_deneb", "examples/example_graphstate", "examples/example_gst", "examples/example_interleaved_rb", "examples/example_mirror_rb", "examples/example_qscore", "examples/example_quantum_volume", "examples/example_quantum_volume_deneb", "examples/examples", "index", "license", "readme"], "filenames": ["API.rst", "api/iqm.benchmarks.rst", "api/iqm.benchmarks.benchmark.rst", "api/iqm.benchmarks.benchmark.BenchmarkBase.rst", "api/iqm.benchmarks.benchmark.BenchmarkConfigurationBase.rst", "api/iqm.benchmarks.benchmark_definition.rst", "api/iqm.benchmarks.benchmark_definition.Benchmark.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservation.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkRunResult.rst", "api/iqm.benchmarks.benchmark_definition.add_counts_to_dataset.rst", "api/iqm.benchmarks.benchmark_definition.default_analysis_function.rst", "api/iqm.benchmarks.benchmark_definition.merge_datasets_dac.rst", "api/iqm.benchmarks.benchmark_definition.show_figure.rst", "api/iqm.benchmarks.circuit_containers.rst", "api/iqm.benchmarks.circuit_containers.BenchmarkCircuit.rst", "api/iqm.benchmarks.circuit_containers.CircuitGroup.rst", "api/iqm.benchmarks.circuit_containers.Circuits.rst", "api/iqm.benchmarks.entanglement.rst", "api/iqm.benchmarks.entanglement.ghz.rst", "api/iqm.benchmarks.entanglement.ghz.GHZBenchmark.rst", "api/iqm.benchmarks.entanglement.ghz.GHZConfiguration.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_analysis.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_linear.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_star.rst", "api/iqm.benchmarks.entanglement.ghz.get_cx_map.rst", "api/iqm.benchmarks.entanglement.ghz.get_edges.rst", "api/iqm.benchmarks.entanglement.ghz.plot_fidelities.rst", "api/iqm.benchmarks.entanglement.graph_states.rst", "api/iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark.rst", "api/iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.rst", "api/iqm.benchmarks.entanglement.graph_states.find_edges_with_disjoint_neighbors.rst", "api/iqm.benchmarks.entanglement.graph_states.generate_graph_state.rst", "api/iqm.benchmarks.entanglement.graph_states.generate_minimal_edge_layers.rst", "api/iqm.benchmarks.entanglement.graph_states.negativity_analysis.rst", "api/iqm.benchmarks.entanglement.graph_states.plot_density_matrix.rst", "api/iqm.benchmarks.entanglement.graph_states.plot_max_negativities.rst", "api/iqm.benchmarks.entanglement.graph_states.plot_max_negativities_graph.rst", "api/iqm.benchmarks.entanglement.graph_states.shadow_tomography_analysis.rst", "api/iqm.benchmarks.entanglement.graph_states.state_tomography_analysis.rst", "api/iqm.benchmarks.entanglement.graph_states.update_pauli_expectations.rst", "api/iqm.benchmarks.logging_config.rst", "api/iqm.benchmarks.optimization.rst", "api/iqm.benchmarks.optimization.qscore.rst", "api/iqm.benchmarks.optimization.qscore.QScoreBenchmark.rst", "api/iqm.benchmarks.optimization.qscore.QScoreConfiguration.rst", "api/iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1.rst", "api/iqm.benchmarks.optimization.qscore.compute_expectation_value.rst", "api/iqm.benchmarks.optimization.qscore.create_objective_function.rst", "api/iqm.benchmarks.optimization.qscore.cut_cost_function.rst", "api/iqm.benchmarks.optimization.qscore.get_optimal_angles.rst", "api/iqm.benchmarks.optimization.qscore.is_successful.rst", "api/iqm.benchmarks.optimization.qscore.plot_approximation_ratios.rst", "api/iqm.benchmarks.optimization.qscore.qscore_analysis.rst", "api/iqm.benchmarks.optimization.qscore.run_QAOA.rst", "api/iqm.benchmarks.quantum_volume.rst", "api/iqm.benchmarks.quantum_volume.clops.rst", "api/iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.rst", "api/iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.rst", "api/iqm.benchmarks.quantum_volume.clops.clops_analysis.rst", "api/iqm.benchmarks.quantum_volume.clops.plot_times.rst", "api/iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.is_successful.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits.rst", "api/iqm.benchmarks.readout_mitigation.rst", "api/iqm.benchmarks.readout_mitigation.M3IQM.rst", "api/iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation.rst", "api/iqm.benchmarks.readout_mitigation.readout_error_m3.rst", "api/iqm.benchmarks.utils.rst", "api/iqm.benchmarks.utils.bootstrap_counts.rst", "api/iqm.benchmarks.utils.count_2q_layers.rst", "api/iqm.benchmarks.utils.count_native_gates.rst", "api/iqm.benchmarks.utils.extract_fidelities.rst", "api/iqm.benchmarks.utils.generate_state_tomography_circuits.rst", "api/iqm.benchmarks.utils.get_Pauli_expectation.rst", "api/iqm.benchmarks.utils.get_active_qubits.rst", "api/iqm.benchmarks.utils.get_iqm_backend.rst", "api/iqm.benchmarks.utils.get_measurement_mapping.rst", "api/iqm.benchmarks.utils.get_neighbors_of_edges.rst", "api/iqm.benchmarks.utils.get_tomography_matrix.rst", "api/iqm.benchmarks.utils.marginal_distribution.rst", "api/iqm.benchmarks.utils.median_with_uncertainty.rst", "api/iqm.benchmarks.utils.perform_backend_transpilation.rst", "api/iqm.benchmarks.utils.reduce_to_active_qubits.rst", "api/iqm.benchmarks.utils.remove_directed_duplicates_to_list.rst", "api/iqm.benchmarks.utils.retrieve_all_counts.rst", "api/iqm.benchmarks.utils.retrieve_all_job_metadata.rst", "api/iqm.benchmarks.utils.set_coupling_map.rst", "api/iqm.benchmarks.utils.sort_batches_by_final_layout.rst", "api/iqm.benchmarks.utils.split_sequence_in_chunks.rst", "api/iqm.benchmarks.utils.submit_execute.rst", "api/iqm.benchmarks.utils.timeit.rst", "api/iqm.benchmarks.utils.xrvariable_to_counts.rst", "api/iqm.benchmarks.utils_plots.rst", "api/iqm.benchmarks.utils_plots.GraphPositions.rst", "api/iqm.benchmarks.utils_plots.plot_layout_fidelity_graph.rst", "api/iqm.benchmarks.utils_plots.rx_to_nx_graph.rst", "api/iqm.benchmarks.utils_shadows.rst", "api/iqm.benchmarks.utils_shadows.CUE.rst", "api/iqm.benchmarks.utils_shadows.get_local_shadow.rst", "api/iqm.benchmarks.utils_shadows.get_negativity.rst", "api/iqm.benchmarks.utils_shadows.local_shadow_tomography.rst", "changelog.rst", "development/development.rst", "development/generate_2qubit_cliffords.ipynb", "development/how_to_make_your_own_benchmark.ipynb", "devices/devices.rst", "devices/spark.ipynb", "devices/star.ipynb", "examples/example_clifford_rb.ipynb", "examples/example_clops.ipynb", "examples/example_experiment_all.ipynb", "examples/example_ghz.ipynb", "examples/example_ghz_deneb.ipynb", "examples/example_graphstate.ipynb", "examples/example_gst.ipynb", "examples/example_interleaved_rb.ipynb", "examples/example_mirror_rb.ipynb", "examples/example_qscore.ipynb", "examples/example_quantum_volume.ipynb", "examples/example_quantum_volume_deneb.ipynb", "examples/examples.rst", "index.rst", "license.rst", "readme.md"], "titles": ["API Reference", "iqm.benchmarks", "iqm.benchmarks.benchmark", "iqm.benchmarks.benchmark.BenchmarkBase", "iqm.benchmarks.benchmark.BenchmarkConfigurationBase", "iqm.benchmarks.benchmark_definition", "iqm.benchmarks.benchmark_definition.Benchmark", "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult", "iqm.benchmarks.benchmark_definition.BenchmarkObservation", "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier", "iqm.benchmarks.benchmark_definition.BenchmarkRunResult", "iqm.benchmarks.benchmark_definition.add_counts_to_dataset", "iqm.benchmarks.benchmark_definition.default_analysis_function", "iqm.benchmarks.benchmark_definition.merge_datasets_dac", "iqm.benchmarks.benchmark_definition.show_figure", "iqm.benchmarks.circuit_containers", "iqm.benchmarks.circuit_containers.BenchmarkCircuit", "iqm.benchmarks.circuit_containers.CircuitGroup", "iqm.benchmarks.circuit_containers.Circuits", "iqm.benchmarks.entanglement", "iqm.benchmarks.entanglement.ghz", "iqm.benchmarks.entanglement.ghz.GHZBenchmark", "iqm.benchmarks.entanglement.ghz.GHZConfiguration", "iqm.benchmarks.entanglement.ghz.fidelity_analysis", "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences", "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements", "iqm.benchmarks.entanglement.ghz.generate_ghz_linear", "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz", "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney", "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree", "iqm.benchmarks.entanglement.ghz.generate_ghz_star", "iqm.benchmarks.entanglement.ghz.get_cx_map", "iqm.benchmarks.entanglement.ghz.get_edges", "iqm.benchmarks.entanglement.ghz.plot_fidelities", "iqm.benchmarks.entanglement.graph_states", "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark", "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration", "iqm.benchmarks.entanglement.graph_states.find_edges_with_disjoint_neighbors", "iqm.benchmarks.entanglement.graph_states.generate_graph_state", "iqm.benchmarks.entanglement.graph_states.generate_minimal_edge_layers", "iqm.benchmarks.entanglement.graph_states.negativity_analysis", "iqm.benchmarks.entanglement.graph_states.plot_density_matrix", "iqm.benchmarks.entanglement.graph_states.plot_max_negativities", "iqm.benchmarks.entanglement.graph_states.plot_max_negativities_graph", "iqm.benchmarks.entanglement.graph_states.shadow_tomography_analysis", "iqm.benchmarks.entanglement.graph_states.state_tomography_analysis", "iqm.benchmarks.entanglement.graph_states.update_pauli_expectations", "iqm.benchmarks.logging_config", "iqm.benchmarks.optimization", "iqm.benchmarks.optimization.qscore", "iqm.benchmarks.optimization.qscore.QScoreBenchmark", "iqm.benchmarks.optimization.qscore.QScoreConfiguration", "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1", "iqm.benchmarks.optimization.qscore.compute_expectation_value", "iqm.benchmarks.optimization.qscore.create_objective_function", "iqm.benchmarks.optimization.qscore.cut_cost_function", "iqm.benchmarks.optimization.qscore.get_optimal_angles", "iqm.benchmarks.optimization.qscore.is_successful", "iqm.benchmarks.optimization.qscore.plot_approximation_ratios", "iqm.benchmarks.optimization.qscore.qscore_analysis", "iqm.benchmarks.optimization.qscore.run_QAOA", "iqm.benchmarks.quantum_volume", "iqm.benchmarks.quantum_volume.clops", "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark", "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration", "iqm.benchmarks.quantum_volume.clops.clops_analysis", "iqm.benchmarks.quantum_volume.clops.plot_times", "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times", "iqm.benchmarks.quantum_volume.quantum_volume", "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark", "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration", "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities", "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop", "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std", "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs", "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops", "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector", "iqm.benchmarks.quantum_volume.quantum_volume.is_successful", "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold", "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis", "iqm.benchmarks.randomized_benchmarking", "iqm.benchmarks.randomized_benchmarking.clifford_rb", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis", "iqm.benchmarks.randomized_benchmarking.interleaved_rb", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis", "iqm.benchmarks.randomized_benchmarking.mirror_rb", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis", "iqm.benchmarks.randomized_benchmarking.multi_lmfit", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits", "iqm.benchmarks.readout_mitigation", "iqm.benchmarks.readout_mitigation.M3IQM", "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation", "iqm.benchmarks.readout_mitigation.readout_error_m3", "iqm.benchmarks.utils", "iqm.benchmarks.utils.bootstrap_counts", "iqm.benchmarks.utils.count_2q_layers", "iqm.benchmarks.utils.count_native_gates", "iqm.benchmarks.utils.extract_fidelities", "iqm.benchmarks.utils.generate_state_tomography_circuits", "iqm.benchmarks.utils.get_Pauli_expectation", "iqm.benchmarks.utils.get_active_qubits", "iqm.benchmarks.utils.get_iqm_backend", "iqm.benchmarks.utils.get_measurement_mapping", "iqm.benchmarks.utils.get_neighbors_of_edges", "iqm.benchmarks.utils.get_tomography_matrix", "iqm.benchmarks.utils.marginal_distribution", "iqm.benchmarks.utils.median_with_uncertainty", "iqm.benchmarks.utils.perform_backend_transpilation", "iqm.benchmarks.utils.reduce_to_active_qubits", "iqm.benchmarks.utils.remove_directed_duplicates_to_list", "iqm.benchmarks.utils.retrieve_all_counts", "iqm.benchmarks.utils.retrieve_all_job_metadata", "iqm.benchmarks.utils.set_coupling_map", "iqm.benchmarks.utils.sort_batches_by_final_layout", "iqm.benchmarks.utils.split_sequence_in_chunks", "iqm.benchmarks.utils.submit_execute", "iqm.benchmarks.utils.timeit", "iqm.benchmarks.utils.xrvariable_to_counts", "iqm.benchmarks.utils_plots", "iqm.benchmarks.utils_plots.GraphPositions", "iqm.benchmarks.utils_plots.plot_layout_fidelity_graph", "iqm.benchmarks.utils_plots.rx_to_nx_graph", "iqm.benchmarks.utils_shadows", "iqm.benchmarks.utils_shadows.CUE", "iqm.benchmarks.utils_shadows.get_local_shadow", "iqm.benchmarks.utils_shadows.get_negativity", "iqm.benchmarks.utils_shadows.local_shadow_tomography", "Changelog", "Development", "2-Qubit Clifford Group Decomposition", "How to make your own benchmark?", "Devices", "Benchmarking IQM Spark", "Benchmarking IQM Star", "Clifford Randomized Benchmarking (RB)", "Circuit Layer Operations Per Second (CLOPS)", "IQM Benchmarks: Summary Notebook", "Greenberger\u2013Horne\u2013Zeilinger (GHZ) State Fidelity", "Greenberger\u2013Horne\u2013Zeilinger (GHZ) State Fidelity", "Graph State Benchmark Example", "Compressive Gate Set Tomography (GST)", "Interleaved Randomized Benchmarking (IRB)", "Mirror Randomized Benchmarking (MRB)", "Q-Score", "Quantum Volume (QV)", "QV on Deneb", "Examples", "IQM Benchmarks", "License", "IQM Benchmarks"], "terms": {"": [1, 63, 108, 114, 122, 124, 129, 142, 167, 168, 173, 174, 180, 183, 184], "python": 1, "librari": [1, 88, 93, 122, 164, 175], "suit": [1, 184], "qcvv": [1, 165, 182, 184], "subpackag": [1, 19, 48, 61, 80, 81, 86, 91], "modul": [1, 5, 15, 19, 47, 48, 61, 80, 81, 86, 91, 182], "gener": [2, 3, 18, 19, 21, 22, 26, 27, 28, 29, 30, 31, 35, 36, 38, 50, 58, 63, 66, 69, 78, 84, 88, 89, 93, 96, 97, 98, 101, 102, 111, 112, 113, 128, 129, 133, 154, 155, 158, 162, 167, 168, 169, 171, 172, 173, 174, 175, 176, 183], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 20, 21, 22, 34, 35, 36, 49, 50, 51, 62, 63, 64, 68, 69, 70, 82, 83, 84, 87, 88, 89, 92, 93, 94, 111, 124, 125, 153, 154, 162, 164, 165, 183, 184], "inherit": [2, 3, 5, 15, 20, 34, 49, 62, 68, 82, 87, 92, 124, 153], "benchmarkbas": [2, 4, 184], "abc": [2, 3, 5, 6, 20, 34, 49, 62, 68, 82, 87, 92], "benchmarkconfigurationbas": [2, 3, 6, 20, 22, 34, 36, 49, 51, 62, 64, 68, 70, 82, 83, 87, 88, 92, 93, 184], "pydant": [2, 4, 20, 22, 34, 36, 49, 51, 62, 64, 68, 70, 82, 83, 87, 88, 92, 93], "main": [2, 7, 8, 20, 34, 49, 62, 68, 82, 87, 92, 167], "basemodel": [2, 4, 20, 34, 49, 62, 68, 82, 87, 92], "backend": [3, 6, 21, 22, 29, 35, 38, 41, 42, 43, 44, 45, 50, 58, 63, 64, 69, 70, 78, 84, 89, 94, 96, 97, 98, 111, 112, 119, 120, 122, 123, 125, 126, 127, 131, 132, 136, 142, 143, 147, 148, 150, 156, 162, 165, 172, 173, 184], "iqmbackendbas": [3, 6, 21, 35, 38, 50, 63, 69, 84, 89, 94, 96, 97, 98, 111, 112, 113, 119, 120, 122, 123, 126, 131, 136, 142, 147, 150], "configur": [3, 4, 6, 21, 22, 35, 36, 50, 51, 63, 64, 69, 70, 77, 83, 84, 88, 89, 93, 94, 162, 183, 184], "base": [3, 4, 5, 6, 7, 8, 9, 10, 16, 17, 18, 21, 22, 24, 31, 35, 36, 50, 51, 53, 63, 64, 69, 70, 83, 84, 88, 89, 93, 94, 106, 125, 154, 162, 163, 167, 168, 183], "The": [3, 6, 7, 12, 16, 17, 18, 21, 22, 23, 24, 25, 26, 29, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 50, 51, 54, 60, 63, 64, 66, 69, 70, 72, 73, 75, 76, 83, 84, 88, 89, 93, 94, 95, 96, 97, 107, 117, 121, 127, 129, 131, 132, 133, 134, 135, 136, 137, 138, 142, 143, 145, 146, 149, 150, 151, 154, 155, 156, 161, 167, 168, 169, 172, 173, 174, 175, 179, 180, 181, 183, 184], "implement": [3, 5, 6, 21, 22, 25, 172, 173], "all": [3, 4, 6, 7, 16, 17, 18, 21, 22, 31, 33, 35, 50, 57, 63, 67, 69, 71, 72, 73, 76, 77, 83, 84, 88, 89, 94, 111, 117, 119, 120, 125, 133, 138, 139, 145, 146, 162, 165, 167, 168, 169, 171, 172, 173, 176, 178, 179, 180, 181, 183, 184], "from": [3, 4, 6, 7, 11, 21, 22, 29, 31, 32, 36, 37, 46, 51, 54, 60, 64, 66, 67, 69, 70, 71, 76, 78, 83, 88, 93, 95, 104, 117, 118, 121, 125, 127, 129, 132, 134, 135, 136, 137, 139, 144, 145, 146, 147, 152, 155, 158, 162, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184], "which": [3, 6, 7, 8, 21, 22, 29, 32, 36, 39, 50, 51, 59, 61, 63, 64, 65, 69, 79, 83, 84, 85, 88, 89, 90, 93, 94, 100, 111, 117, 121, 125, 132, 161, 167, 168, 172, 173, 174, 175, 183, 184], "thei": [3, 17, 175], "method": [3, 4, 6, 7, 8, 9, 10, 16, 17, 18, 21, 22, 24, 35, 36, 50, 51, 63, 64, 69, 70, 83, 84, 88, 89, 93, 94, 125, 142, 154, 162, 167, 168, 170, 171, 172, 173, 175, 179, 180], "paramet": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 84, 85, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 158, 159, 160, 161, 162, 167, 168, 170, 171, 172, 173, 175], "abstract": [3, 6, 175], "classmethod": [3, 6, 7], "name": [3, 4, 6, 7, 8, 16, 17, 18, 22, 33, 36, 41, 42, 43, 44, 45, 51, 58, 64, 66, 70, 78, 83, 88, 93, 104, 110, 111, 127, 132, 133, 136, 154, 155, 161, 162, 164, 165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 178, 179, 180, 183], "return": [3, 6, 9, 11, 12, 13, 16, 17, 18, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 89, 90, 94, 95, 96, 97, 98, 99, 100, 103, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 158, 159, 160, 161, 164, 165], "execute_full_benchmark": 3, "execut": [3, 4, 6, 9, 16, 17, 18, 21, 31, 35, 36, 44, 45, 48, 50, 58, 61, 63, 64, 69, 70, 71, 78, 83, 84, 88, 89, 93, 94, 95, 108, 114, 119, 120, 121, 142, 143, 150, 151, 152, 162, 165, 167, 168, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 183, 184], "full": [3, 64, 70, 175, 184], "given": [3, 6, 7, 11, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 38, 43, 44, 45, 48, 50, 51, 56, 61, 63, 69, 76, 77, 86, 95, 112, 113, 134, 138, 139, 148, 149, 154, 159, 160, 167, 168, 172, 173, 175, 184], "static": [3, 6, 21, 35, 50, 63, 69, 84, 89, 94, 154], "check_requir": 3, "all_benchmark": 3, "ordereddict": 3, "str": [3, 4, 6, 7, 8, 9, 11, 16, 17, 18, 21, 22, 24, 25, 35, 36, 38, 41, 42, 43, 44, 45, 46, 51, 53, 54, 55, 58, 60, 63, 64, 66, 67, 69, 70, 71, 74, 75, 76, 78, 83, 84, 88, 89, 93, 94, 95, 96, 97, 98, 108, 110, 111, 112, 113, 114, 115, 117, 119, 120, 121, 122, 123, 125, 126, 127, 129, 131, 132, 133, 134, 136, 139, 140, 141, 142, 143, 145, 146, 150, 152, 154, 155, 159, 161, 164, 165, 167, 171, 172, 173, 175, 177, 179, 180], "check": [3, 57, 77, 164, 167, 168, 172, 173], "whether": [3, 4, 22, 36, 51, 57, 58, 60, 63, 64, 69, 70, 77, 78, 83, 88, 112, 117, 129, 133, 142, 159, 161, 172, 173, 176, 183], "requir": [3, 4, 22, 36, 51, 64, 70, 83, 88, 93, 133, 164, 172, 173, 175, 183, 184], "ar": [3, 4, 7, 11, 16, 17, 18, 21, 22, 31, 32, 46, 69, 70, 98, 117, 123, 133, 134, 137, 139, 140, 155, 161, 162, 164, 167, 168, 172, 173, 175, 181, 183, 184], "met": 3, "valid": [3, 122, 123, 182, 184], "dictionari": [3, 4, 7, 11, 22, 35, 36, 39, 41, 42, 43, 44, 45, 46, 51, 54, 63, 64, 67, 69, 70, 71, 74, 75, 76, 83, 88, 93, 94, 96, 97, 107, 111, 112, 113, 115, 119, 120, 126, 127, 129, 131, 133, 134, 137, 139, 140, 141, 148, 150, 152, 154, 159, 161, 169, 171, 175, 176], "type": [3, 4, 6, 8, 9, 11, 12, 13, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 84, 85, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 156, 158, 159, 160, 161, 162, 167, 175, 183], "generate_requir": 3, "none": [3, 4, 6, 7, 8, 16, 17, 18, 22, 29, 32, 36, 41, 42, 43, 51, 58, 63, 64, 69, 70, 83, 88, 93, 96, 97, 98, 102, 107, 110, 111, 112, 113, 115, 117, 119, 120, 122, 125, 129, 133, 142, 143, 145, 150, 154, 155, 159, 161, 167, 168, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 184], "attribut": [3, 4, 6, 7, 8, 9, 10, 16, 17, 18, 21, 22, 35, 36, 50, 51, 63, 64, 69, 70, 83, 84, 88, 89, 93, 94, 151, 154, 175, 179, 180, 183], "shot": [4, 22, 36, 42, 43, 51, 64, 69, 70, 83, 88, 93, 119, 120, 125, 126, 150, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184], "int": [4, 9, 11, 16, 17, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 50, 51, 53, 54, 55, 56, 58, 60, 63, 64, 66, 69, 70, 71, 74, 77, 78, 83, 88, 93, 94, 95, 96, 97, 98, 99, 108, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 125, 126, 129, 130, 132, 133, 134, 135, 137, 138, 140, 142, 143, 144, 145, 147, 148, 149, 150, 152, 154, 155, 158, 159, 160, 161, 172, 173, 175], "256": [4, 36, 51, 64, 70, 83, 88, 93, 169, 171, 177, 178], "max_gates_per_batch": [4, 22, 36, 51, 64, 70, 83, 88, 93, 119, 120, 150, 167, 168, 169, 170, 171, 174, 177, 179, 180, 184], "max_circuits_per_batch": [4, 22, 36, 51, 64, 70, 83, 88, 93, 119, 120, 150, 162, 174, 184], "calset_id": [4, 22, 36, 51, 64, 70, 83, 88, 93, 119, 120, 150, 167, 168, 169, 170, 171, 174, 176, 177, 178, 179, 180, 184], "routing_method": [4, 22, 36, 51, 64, 70, 83, 88, 93, 97, 98, 142, 167, 168, 169, 170, 171, 174, 177, 179, 180, 184], "liter": [4, 22, 36, 41, 42, 43, 51, 64, 70, 83, 88, 93, 134, 147, 154, 159, 161], "basic": [4, 22, 36, 51, 64, 70, 83, 88, 93, 97, 98], "lookahead": [4, 22, 36, 51, 64, 70, 83, 88, 93], "stochast": [4, 22, 36, 51, 64, 70, 83, 88, 93], "sabr": [4, 22, 36, 51, 64, 70, 83, 88, 93, 142, 167, 168, 169, 170, 171, 172, 173, 175, 179, 180, 184], "physical_layout": [4, 22, 36, 51, 64, 70, 83, 88, 93, 147, 167, 168, 169, 170, 171, 174, 177, 179, 180, 184], "fix": [4, 22, 36, 51, 64, 70, 83, 88, 93, 94, 97, 112, 119, 121, 147, 162, 167, 168, 169, 170, 171, 175, 179, 180, 184], "batch": [4, 17, 22, 36, 51, 64, 70, 83, 88, 93, 119, 120, 147, 148, 150, 162, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 184], "use_dd": [4, 22, 36, 51, 64, 70, 83, 88, 93, 173, 174], "bool": [4, 22, 36, 51, 57, 58, 60, 63, 64, 69, 70, 77, 78, 83, 88, 93, 117, 125, 129, 133, 142], "fals": [4, 22, 36, 51, 64, 70, 78, 83, 88, 93, 117, 125, 129, 142, 167, 169, 171, 179], "dd_strategi": [4, 22, 36, 51, 64, 70, 83, 88, 93, 174], "ddstrategi": [4, 22, 36, 51, 64, 70, 83, 88, 93], "number": [4, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 36, 41, 42, 43, 48, 50, 51, 53, 55, 56, 58, 60, 61, 64, 69, 70, 77, 78, 80, 83, 88, 93, 94, 95, 96, 97, 98, 99, 108, 111, 112, 113, 114, 119, 120, 125, 126, 129, 130, 131, 141, 143, 150, 160, 161, 167, 168, 170, 171, 172, 173, 175], "us": [4, 6, 9, 16, 21, 22, 24, 25, 29, 31, 32, 33, 36, 38, 41, 42, 43, 44, 45, 47, 51, 58, 60, 63, 64, 70, 93, 95, 110, 117, 125, 127, 133, 150, 155, 159, 161, 162, 164, 165, 167, 168, 172, 175, 176, 181, 183], "circuit": [4, 7, 10, 15, 16, 17, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 35, 38, 50, 51, 54, 61, 63, 64, 69, 70, 71, 74, 77, 78, 83, 84, 88, 89, 91, 93, 94, 95, 96, 97, 98, 99, 107, 108, 111, 112, 113, 114, 119, 120, 122, 125, 126, 130, 131, 133, 135, 137, 142, 143, 148, 150, 152, 161, 162, 164, 165, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182], "default": [4, 6, 12, 22, 36, 41, 42, 43, 51, 64, 69, 70, 78, 83, 88, 93, 113, 117, 125, 129, 133, 147, 150, 159, 161, 167, 169, 171, 175, 176, 178, 180], "i": [4, 6, 7, 22, 26, 29, 31, 33, 36, 41, 42, 43, 46, 50, 51, 57, 59, 60, 63, 64, 65, 69, 70, 77, 78, 79, 83, 84, 85, 88, 89, 90, 93, 94, 95, 99, 100, 103, 115, 118, 122, 125, 129, 132, 133, 134, 142, 147, 150, 155, 159, 160, 161, 162, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184], "2": [4, 32, 51, 57, 70, 77, 93, 112, 118, 130, 163, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184], "8": [4, 118, 164, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 183, 184], "maximum": [4, 42, 43, 44, 45, 60, 119, 120, 150, 162, 167, 168, 175], "gate": [4, 21, 22, 26, 30, 31, 32, 39, 51, 61, 63, 64, 70, 80, 81, 84, 86, 88, 89, 93, 96, 98, 107, 110, 111, 112, 113, 115, 117, 119, 120, 122, 130, 131, 133, 142, 150, 155, 159, 161, 162, 167, 172, 173, 177, 181, 182, 184], "per": [4, 41, 42, 43, 61, 64, 70, 83, 93, 95, 97, 98, 99, 119, 120, 125, 126, 150, 160, 162, 175, 181, 182], "option": [4, 22, 32, 41, 42, 43, 51, 58, 69, 70, 88, 97, 98, 107, 110, 112, 113, 115, 117, 119, 120, 122, 129, 133, 142, 143, 145, 150, 154, 159, 161, 162, 165, 170, 171, 173, 174, 175, 180, 182], "calibr": [4, 6, 22, 32, 69, 70, 119, 120, 125, 126, 132, 150, 155, 162, 171, 172, 173, 176, 178, 180], "id": [4, 150, 170, 171, 176, 178], "last": 4, "avail": [4, 183, 184], "qiskit": [4, 6, 51, 64, 70, 88, 93, 122, 142, 150, 162, 164, 165, 167, 175], "rout": [4, 64, 70, 93, 142, 168, 170, 171, 172, 173, 175, 179, 180], "transpil": [4, 16, 21, 22, 24, 25, 51, 63, 64, 70, 93, 111, 112, 122, 126, 131, 142, 148, 162, 165, 167, 168, 170, 171, 172, 173, 175, 179, 180], "physic": [4, 22, 36, 51, 63, 64, 69, 70, 74, 88, 93, 97, 147, 168, 170, 171, 175, 179, 180, 182], "layout": [4, 8, 11, 16, 17, 22, 33, 36, 43, 51, 63, 64, 69, 70, 93, 94, 119, 120, 127, 132, 142, 147, 154, 155, 162, 167, 168, 170, 171, 172, 173, 175, 177, 179, 180], "constrain": [4, 147, 184], "dure": [4, 13, 35, 69, 84, 89, 174], "select": [4, 22, 51, 70, 76, 155, 162, 172, 173, 175], "qubit": [4, 8, 9, 11, 16, 17, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 41, 42, 43, 44, 45, 48, 50, 51, 53, 54, 60, 61, 63, 64, 69, 70, 74, 78, 80, 83, 84, 88, 93, 94, 95, 96, 97, 98, 108, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 123, 125, 127, 130, 132, 133, 135, 137, 142, 143, 147, 148, 150, 155, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 182], "initi": [4, 6, 22, 47, 127, 167, 175], "allow": [4, 162, 167, 168, 172, 173, 184], "ani": [4, 8, 24, 25, 35, 44, 45, 67, 69, 88, 94, 99, 117, 119, 120, 126, 146, 149, 164, 168, 183, 184], "other": [4, 22, 133, 150, 161, 162, 167, 168, 183, 184], "accord": [4, 21, 27, 28, 50, 96, 147, 148, 164, 168, 170, 171, 175, 179, 180], "final": [4, 6, 32, 64, 69, 70, 74, 93, 137, 142, 147, 148, 150, 167], "measur": [4, 21, 22, 24, 41, 42, 43, 50, 53, 63, 64, 69, 70, 74, 83, 88, 93, 121, 126, 131, 133, 134, 137, 147, 148, 150, 161, 165, 167, 168, 170, 172, 173, 175], "boolean": [4, 22, 172, 173], "flag": [4, 22], "determin": [4, 22, 183], "enabl": [4, 150, 162], "dynam": [4, 150, 162], "decoupl": [4, 150, 162], "model_computed_field": [4, 22, 36, 51, 64, 70, 83, 88, 93], "classvar": [4, 22, 36, 51, 64, 70, 83, 88, 93], "dict": [4, 7, 11, 22, 24, 25, 35, 36, 39, 41, 42, 43, 44, 45, 46, 51, 53, 54, 60, 63, 64, 66, 67, 69, 70, 71, 74, 75, 76, 83, 88, 93, 94, 95, 96, 97, 98, 107, 108, 111, 112, 113, 114, 115, 117, 119, 120, 121, 126, 127, 129, 131, 133, 134, 137, 139, 140, 141, 145, 146, 148, 150, 152, 154, 159, 161, 165], "computedfieldinfo": [4, 22, 36, 51, 64, 70, 83, 88, 93], "A": [4, 6, 7, 9, 10, 11, 13, 16, 17, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 50, 51, 59, 63, 64, 65, 67, 69, 70, 75, 76, 79, 83, 84, 85, 88, 93, 94, 96, 97, 100, 107, 110, 112, 113, 119, 120, 129, 132, 133, 134, 135, 137, 138, 139, 140, 142, 143, 144, 147, 149, 150, 152, 154, 160, 167, 172, 173, 175, 183, 184], "comput": [4, 21, 22, 23, 29, 36, 51, 53, 54, 64, 69, 70, 71, 72, 73, 75, 83, 88, 93, 107, 108, 114, 140, 141, 155, 160, 164, 167, 168, 172, 173, 175, 182, 183, 184], "field": [4, 6, 22, 36, 51, 64, 70, 83, 88, 93, 183], "correspond": [4, 22, 36, 39, 41, 42, 43, 46, 50, 51, 59, 61, 63, 64, 65, 69, 70, 74, 78, 79, 83, 84, 85, 88, 89, 90, 93, 94, 95, 96, 97, 100, 117, 121, 126, 133, 148, 150, 156, 161, 162, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179, 180], "object": [4, 7, 8, 9, 10, 16, 17, 18, 21, 22, 23, 33, 36, 51, 64, 69, 70, 83, 88, 93, 94, 102, 119, 120, 136, 145, 146, 150, 154, 155, 175, 179, 180, 183], "model_config": [4, 22, 36, 51, 64, 70, 83, 88, 93], "configdict": [4, 22, 36, 51, 64, 70, 83, 88, 93], "model": [4, 22, 36, 51, 64, 70, 83, 88, 93, 110, 116, 117, 167], "should": [4, 6, 8, 10, 21, 22, 29, 36, 46, 47, 51, 64, 70, 83, 88, 93, 112, 150, 162, 170, 171, 172, 173, 175, 183], "conform": [4, 22, 36, 51, 64, 70, 83, 88, 93], "config": [4, 22, 36, 51, 64, 70, 83, 88, 93], "model_field": [4, 22, 36, 51, 64, 70, 83, 88, 93], "fieldinfo": [4, 22, 36, 51, 64, 70, 83, 88, 93], "annot": [4, 22, 36, 51, 64, 70, 83, 88, 93, 127, 183], "true": [4, 22, 24, 36, 51, 64, 69, 70, 83, 88, 93, 117, 133, 142, 164, 167, 168, 170, 171, 172, 173, 175, 176, 178, 179, 180, 184], "union": [4, 22, 36, 51, 64, 70, 83, 88, 93, 127, 175, 183], "nonetyp": [4, 22, 36, 51, 64, 70, 83, 88, 93], "metadata": [4, 21, 22, 33, 35, 36, 50, 51, 63, 64, 67, 69, 70, 83, 84, 88, 89, 93, 94, 146], "about": [4, 22, 36, 51, 64, 70, 83, 88, 93, 162, 172, 173], "defin": [4, 5, 6, 7, 22, 29, 31, 36, 51, 64, 70, 83, 88, 93, 111, 165, 167, 168, 172, 173, 183, 184], "map": [4, 7, 22, 29, 32, 36, 39, 44, 45, 51, 53, 54, 64, 70, 83, 88, 93, 137, 142, 144, 147, 148, 154, 156, 162, 172, 173], "thi": [4, 5, 6, 15, 16, 21, 22, 29, 33, 36, 51, 57, 64, 70, 77, 83, 88, 93, 118, 127, 154, 163, 164, 165, 166, 167, 168, 172, 173, 175, 181, 183, 184], "replac": [4, 22, 36, 51, 64, 70, 83, 88, 93, 183], "__fields__": [4, 22, 36, 51, 64, 70, 83, 88, 93], "v1": [4, 22, 36, 51, 64, 70, 83, 88, 93, 172, 173], "function": [5, 6, 20, 34, 35, 40, 46, 49, 50, 54, 59, 62, 63, 65, 68, 69, 79, 82, 84, 85, 87, 89, 90, 92, 94, 100, 101, 103, 104, 106, 107, 109, 110, 116, 118, 124, 128, 150, 151, 153, 157, 162, 175], "benchmarkobservationidentifi": [5, 8, 162, 169, 171, 176, 178, 179, 180], "benchmarkobserv": [5, 7, 33, 44, 45, 162, 169, 171, 176, 178, 179, 180], "benchmarkrunresult": [5, 6, 7, 12, 21, 23, 35, 40, 50, 59, 63, 65, 69, 79, 84, 85, 89, 90, 94, 100, 162], "benchmarkanalysisresult": [5, 6, 12, 21, 23, 35, 40, 50, 59, 63, 65, 69, 79, 84, 85, 89, 90, 94, 100, 162], "kwarg": 6, "run": [6, 7, 8, 10, 21, 22, 23, 35, 40, 50, 54, 59, 63, 64, 65, 69, 79, 84, 85, 89, 90, 94, 100, 162, 165, 167, 168, 171, 175, 181, 184], "cortex": [6, 11], "experi": [6, 33, 35, 40, 41, 42, 43, 44, 45, 50, 58, 59, 63, 65, 66, 69, 70, 72, 73, 79, 84, 85, 89, 90, 94, 100, 109, 116, 117, 121, 123, 133, 168, 171, 173, 181], "In": [6, 167, 168, 175, 183, 184], "order": [6, 32, 33, 110, 118, 132, 133, 162, 172, 173, 184], "write": [6, 125, 164, 165, 183], "new": [6, 7, 11, 143, 162, 165, 167, 168, 175, 180, 184], "recommend": [6, 175, 183, 184], "deriv": [6, 183], "baseclass": 6, "addition": [6, 172, 173], "custom": [6, 51, 70, 167, 168, 171, 178, 179, 180, 184], "analysi": [6, 7, 12, 35, 40, 44, 45, 50, 59, 63, 65, 66, 69, 79, 84, 85, 89, 90, 94, 100, 162, 167], "can": [6, 10, 16, 22, 39, 48, 50, 61, 69, 127, 132, 162, 167, 168, 172, 173, 175, 179, 180, 184], "give": [6, 54, 162, 167, 172, 173, 175, 183], "pointer": 6, "analysis_funct": [6, 21, 35, 50, 63, 69, 84, 89, 94, 165], "accept": [6, 58, 162, 183], "analysisresult": [6, 7, 21, 23, 50, 59, 63, 65, 69, 79, 84, 85, 89, 90, 94, 100, 162, 165], "its": [6, 104, 143, 162, 167, 168, 183], "input": [6, 11, 37, 46, 64, 70, 99, 118, 122, 123, 127, 138, 141, 147, 149, 160, 170, 171, 175], "result": [6, 7, 8, 10, 11, 12, 33, 48, 50, 53, 59, 60, 61, 63, 65, 69, 70, 77, 78, 79, 84, 85, 89, 90, 94, 100, 108, 114, 116, 147, 150, 162, 165, 167, 168, 171, 179, 180, 183, 184], "onli": [6, 12, 64, 70, 143, 160, 167, 168, 172, 173, 175, 177, 183], "pass": [6, 12, 99, 120, 127, 142, 150, 165, 171, 178], "through": [6, 12, 25, 183], "iqmbackend": [6, 69, 94, 119, 120, 180], "iqmfacadebackend": 6, "dataset": [6, 7, 10, 11, 13, 21, 23, 24, 25, 33, 35, 44, 45, 50, 63, 66, 69, 84, 89, 94, 101, 103, 117, 152, 162, 165, 167, 168, 169, 171, 175, 176, 179, 180], "overridden": 6, "an": [6, 16, 17, 21, 22, 23, 24, 50, 63, 89, 90, 118, 122, 126, 127, 134, 158, 162, 164, 165, 167, 168, 172, 173, 175, 183, 184], "xarrai": [6, 7, 11, 13, 21, 24, 35, 50, 63, 69, 84, 89, 94, 152, 162, 165], "contain": [6, 7, 9, 10, 13, 15, 16, 17, 18, 21, 23, 24, 25, 33, 35, 44, 45, 46, 94, 96, 119, 120, 132, 143, 154, 155, 162, 167, 168, 175, 179, 180, 181, 183, 184], "inform": [6, 10, 32, 35, 47, 155, 183], "necessari": [6, 160, 167, 172, 173, 184], "analys": 6, "calibration_set_id": [6, 173, 174, 180], "uuid": 6, "calibrationsetid": 6, "latest": [6, 150, 172, 173, 182], "set": [6, 16, 17, 21, 37, 51, 64, 69, 70, 96, 97, 99, 105, 117, 131, 134, 138, 147, 150, 164, 167, 168, 172, 174, 176, 181, 182, 184], "runresult": [6, 7, 10, 21, 23, 50, 59, 63, 65, 69, 79, 84, 85, 89, 90, 94, 100, 162, 165], "analyz": [6, 10, 21, 23, 130, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 184], "run_index": [6, 171, 179, 180], "1": [6, 36, 51, 55, 76, 93, 97, 98, 109, 112, 118, 133, 142, 159, 160, 161, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184], "intern": [6, 17], "perform": [6, 44, 45, 51, 64, 70, 110, 121, 133, 142, 161, 167, 175, 181, 183, 184], "make": [6, 69, 150, 163, 167, 182, 183, 184], "shallow": 6, "copi": [6, 129, 164, 183], "produc": [6, 32, 70, 184], "therefor": [6, 57, 77], "chang": [6, 162, 180, 182, 183], "data": [6, 7, 11, 21, 22, 24, 32, 41, 44, 45, 66, 78, 102, 105, 110, 116, 125, 132, 155, 165, 170, 171, 172, 173, 175, 179, 180], "just": [6, 167], "structur": [6, 167, 168], "arrai": [6, 63, 83, 88, 93, 117, 118, 123, 127, 159, 175], "index": [6, 21, 29, 31, 32, 63, 69, 97, 179, 180, 182], "construct": [6, 22, 26, 159], "updat": [6, 44, 45, 46, 63, 64, 162, 167, 168, 170, 171, 184], "core": 7, "circuit_contain": 7, "plot": [7, 21, 23, 33, 41, 42, 43, 44, 45, 78, 117, 153, 155, 162, 165, 167, 168, 169, 171, 172, 173, 176, 184], "matplotlib": [7, 155, 165, 167, 168, 174, 175], "figur": [7, 14, 33, 41, 42, 43, 58, 66, 78, 117, 155, 165, 171, 174, 175], "factori": [7, 16, 17, 18], "observ": [7, 8, 9, 21, 23, 33, 44, 45, 66, 117, 141, 162, 167, 168, 169, 171, 172, 173, 174, 176, 178, 179, 180], "list": [7, 9, 11, 13, 16, 17, 18, 21, 22, 24, 25, 29, 31, 32, 33, 37, 38, 39, 44, 45, 50, 52, 53, 54, 56, 58, 60, 63, 64, 69, 71, 72, 73, 74, 75, 77, 78, 93, 94, 95, 96, 97, 98, 99, 108, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 129, 130, 131, 132, 135, 138, 140, 142, 144, 145, 146, 147, 148, 149, 150, 152, 155, 161, 162, 164, 168, 172, 173, 174, 175, 179, 180, 183, 184], "dataclass": [7, 8, 10], "store": [7, 8, 10, 33, 154, 162, 184], "consist": [7, 162, 172, 173, 183], "kei": [7, 41, 42, 43, 46, 53, 60, 63, 69, 74, 93, 96, 131, 133, 134, 137, 139, 140, 141, 148, 150, 161, 164, 174, 175, 179, 180], "valu": [7, 8, 21, 22, 25, 29, 39, 41, 42, 43, 46, 53, 54, 60, 63, 64, 93, 96, 109, 131, 133, 134, 137, 140, 141, 142, 148, 150, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "pair": [7, 30, 32, 35, 39, 41, 42, 43, 44, 45, 63, 123, 132, 138, 144, 167], "plot_nam": 7, "plot_al": [7, 165, 167, 168, 170, 171, 172, 173, 175, 178, 179, 180], "from_run_result": 7, "creat": [7, 21, 22, 29, 30, 50, 54, 59, 63, 65, 69, 79, 84, 85, 89, 90, 94, 100, 155, 163, 165, 173, 180, 184], "identifi": [8, 9, 11, 35, 69, 94, 110, 117, 119, 120, 122, 145, 150, 152, 162, 167, 169, 171, 172, 173, 174, 175, 176, 178, 179, 180, 183], "uncertainti": [8, 25, 41, 42, 43, 141, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "singl": [8, 10, 13, 16, 18, 22, 33, 36, 51, 52, 63, 64, 69, 70, 96, 103, 134, 150, 158, 162, 167, 168, 175, 184], "string": [8, 9, 11, 17, 18, 46, 133, 134, 139, 145, 159, 184], "qubit_indic": [9, 16, 169, 171, 174, 176, 178, 179, 180], "eas": 9, "indic": [9, 42, 43, 44, 45, 69, 74, 140, 148, 154, 155, 159, 172, 173, 183], "wa": [9, 42, 43, 57, 77, 121, 167, 168, 173, 183], "properti": [9, 16, 17], "string_identifi": [9, 167, 171, 172, 173, 175], "version": [9, 101, 164, 167, 168, 173, 183, 184], "enough": [10, 172, 173], "those": [10, 69, 74, 147, 167, 168, 175, 183], "count": [11, 21, 22, 23, 46, 53, 54, 60, 69, 71, 95, 108, 114, 121, 126, 127, 129, 131, 134, 140, 145, 146, 152, 159, 162, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "add": [11, 17, 21, 31, 35, 50, 63, 69, 84, 89, 94, 96, 151, 162, 164, 183, 184], "job": [11, 63, 67, 69, 94, 119, 120, 145, 165, 168, 169, 170, 171, 176, 177, 179, 180], "If": [11, 22, 51, 93, 115, 134, 139, 155, 161, 167, 168, 172, 173, 175, 177, 183], "same": [11, 17, 32, 93, 132, 167, 168, 170, 171, 172, 173, 183], "alreadi": [11, 169], "present": 11, "old": 11, "both": [11, 70, 115, 167, 176, 184], "ad": [11, 162, 168, 169, 171, 174, 176, 177, 179, 180], "togeth": [11, 184], "bitstr": [11, 46, 53, 54, 55, 60, 76, 121, 134, 140], "current": [11, 22, 63, 125, 132, 172, 173, 175, 184], "instanc": [11, 16, 17, 24, 25, 43, 58, 162, 175], "xr": [11, 13, 21, 24, 25, 33, 35, 44, 45, 50, 63, 66, 69, 84, 89, 94, 117, 152, 165], "merg": [11, 13], "where": [11, 16, 17, 22, 98, 137, 155, 162, 167, 168, 172, 173, 175, 183], "dataset_merg": 11, "recurs": 13, "minim": [13, 22, 29, 31, 38, 116, 172, 173], "size": [13, 22, 29, 48, 50, 58, 60, 115, 149, 158, 165, 167, 171, 178, 184], "dateset": 13, "fig": [14, 33, 165, 172, 173], "show": [14, 155, 165, 167, 168, 171, 172, 173], "close": [14, 165], "easili": [15, 162, 184], "interact": [15, 162], "quantum": [15, 21, 22, 24, 26, 27, 28, 29, 30, 50, 61, 63, 64, 68, 69, 70, 71, 74, 77, 79, 96, 97, 108, 112, 113, 114, 125, 126, 130, 131, 133, 135, 137, 142, 143, 150, 154, 155, 161, 162, 172, 173, 175, 181, 182, 184], "circuitgroup": [15, 16, 21, 162], "benchmarkcircuit": [15, 18, 162], "circuit_group": [16, 174], "group": [16, 17, 44, 45, 84, 163, 167, 174, 182], "purpos": [16, 17, 183], "typic": [16, 17, 167, 168], "repres": [16, 17, 38, 39, 66, 78, 138, 140, 144, 155, 183], "exampl": [16, 101, 162, 163, 165, 166, 172, 173, 175, 182, 183, 184], "insid": [16, 162], "get_circuit_group_by_nam": 16, "get": [16, 104, 134, 136, 171, 177], "desir": [16, 17], "doe": [16, 22, 183], "exist": [16, 18, 162, 167, 168, 184], "group_nam": 16, "integ": [16, 17, 22, 38, 39, 69, 74, 97, 138, 144], "qubit_layouts_by_index": [16, 17], "tupl": [16, 17, 22, 25, 29, 37, 41, 42, 43, 44, 45, 53, 54, 58, 60, 63, 64, 66, 69, 74, 78, 94, 110, 111, 112, 113, 115, 117, 119, 126, 132, 142, 148, 150, 154, 161], "qubit_layout": [16, 17, 21, 24, 25, 29, 31, 32, 33, 155, 167, 171, 172, 173, 175], "qiskit_iqm": [17, 22, 162, 165, 167, 168, 171, 173, 174, 180], "iqm_circuit": 17, "iqmcircuit": [17, 21, 26, 27, 28, 29, 30, 63, 69, 74, 94, 96, 97, 98, 107, 111, 112, 113, 115, 119, 120, 122, 126, 130, 131, 133, 135, 137, 142, 143, 148, 150, 162], "It": [17, 164, 167, 168, 184], "common": [17, 106, 183], "activ": [17, 135, 143, 161, 184], "add_circuit": 17, "circuit_nam": 17, "get_circuits_by_nam": 17, "share": [17, 183, 184], "found": [17, 132, 167, 168, 172, 173, 174, 184], "benchmark_circuit": [18, 174], "get_benchmark_circuits_by_nam": 18, "request": 18, "otherwis": [18, 183], "ghz": [19, 162, 181, 182, 184], "verifi": [19, 122, 164], "greenberg": [19, 21, 167, 168, 181, 182], "horn": [19, 21, 167, 168, 181, 182], "zeiling": [19, 21, 167, 168, 181, 182], "state": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 36, 38, 40, 42, 43, 45, 108, 114, 133, 162, 165, 175, 181, 182, 183, 184], "graph": [19, 29, 31, 32, 34, 35, 36, 37, 38, 40, 43, 50, 51, 52, 53, 54, 55, 57, 58, 60, 138, 154, 155, 156, 162, 167, 168, 172, 173, 181, 182, 184], "estim": [19, 21, 22, 24, 25, 35, 36, 48, 50, 64, 69, 84, 89, 94, 95, 121, 134, 162, 167, 168, 170, 171, 172, 173, 176], "amount": [19, 36, 151, 152, 162], "bipartit": [19, 35, 162, 184], "nativ": [19, 21, 32, 35, 38, 112, 113, 115, 122, 131, 133, 159, 161, 162, 167], "ghzbenchmark": [20, 22, 167, 168, 171, 172, 173], "benchmark_definit": [20, 22, 34, 36, 49, 51, 62, 64, 68, 70, 82, 83, 87, 88, 92, 93, 165], "ghzconfigur": [20, 21, 167, 168, 171, 172, 173], "qualiti": [21, 167, 168], "fidel": [21, 22, 23, 24, 25, 31, 32, 33, 64, 80, 81, 84, 86, 89, 91, 94, 95, 110, 117, 132, 155, 162, 175, 181, 182, 184], "generate_native_ghz": 21, "qubit_count": [21, 22], "routin": [21, 22, 51, 70, 110], "prepar": [21, 38, 133, 158, 161, 165, 167, 172, 173, 175, 183], "topologi": [21, 51, 132, 142, 143, 147, 154, 155, 162, 167, 173], "subset": [21, 24, 25, 29, 31, 32, 39], "system": [21, 22, 24, 25, 29, 31, 32, 115, 125, 167, 168, 175, 183, 184], "protocol": [21, 24, 25, 29, 31, 32, 167, 168, 181], "0": [21, 29, 31, 32, 50, 57, 70, 93, 96, 97, 98, 118, 142, 147, 160, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184], "smaller": [21, 22, 29, 167, 184], "equal": [21, 29, 69, 162, 167, 168], "quantumcircuit": [21, 26, 27, 28, 29, 30, 38, 50, 63, 69, 74, 94, 96, 107, 111, 112, 113, 119, 120, 126, 130, 133, 135, 137, 142, 143, 148, 150, 159, 161, 162, 164, 165, 175], "generate_coherence_meas_circuit": 21, "take": [21, 22, 142, 151, 162, 167, 168, 175, 184], "output": [21, 47, 71, 72, 73, 74, 75, 76, 77, 125, 162, 164, 167, 168, 175, 179, 180, 184], "need": [21, 63, 127, 167, 168, 172, 173, 175, 184], "via": [21, 22, 167, 168, 172, 173, 175], "mult": 21, "q": [21, 48, 50, 51, 57, 171, 175, 181, 182, 184], "coher": [21, 22, 24, 167, 168, 171, 172, 173], "qc_list_transpil": 21, "append_rm": 21, "num_rm": [21, 22, 172, 173], "append": [21, 63, 161, 164, 165, 175], "1q": [21, 115, 159, 161, 162, 167], "clifford": [21, 81, 82, 83, 84, 85, 87, 88, 89, 96, 107, 111, 112, 113, 115, 122, 123, 159, 161, 162, 163, 176, 181, 182, 184], "sampl": [21, 36, 41, 42, 43, 54, 60, 70, 76, 88, 93, 95, 96, 97, 98, 99, 111, 112, 113, 129, 175], "uniformli": [21, 167], "random": [21, 22, 36, 41, 42, 43, 51, 63, 80, 82, 87, 88, 92, 93, 96, 98, 106, 112, 113, 129, 158, 159, 161, 162, 164, 168, 170, 172, 173, 175, 178, 181, 182, 184], "param": [21, 26, 27, 28, 30, 63, 72, 84, 89, 99, 103, 105, 107, 108, 119, 120, 121, 123, 140, 145, 146, 160], "how": [21, 163, 166, 175, 181, 182, 183, 184], "mani": [21, 63, 162, 172], "origin": [21, 37, 69, 74, 129, 142, 143, 183], "generate_readout_circuit": 21, "wrapper": 21, "creation": [21, 172], "differ": [21, 66, 93, 154, 167, 168, 172, 173, 175, 179, 180, 181, 183, 184], "all_circuits_list": 21, "add_configuration_to_dataset": 21, "further": [21, 162], "storag": [21, 162], "1024": 22, "iqm_client": [22, 36, 51, 64, 70, 83, 88, 93, 168, 173], "state_generation_routin": [22, 167, 168, 171, 172, 173], "tree": [22, 29, 31, 167, 171, 172, 173], "custom_qubits_arrai": [22, 50, 51, 70, 162, 167, 168, 171, 172, 173, 178, 179, 180, 184], "sequenc": [22, 36, 37, 38, 41, 51, 64, 69, 70, 83, 88, 93, 94, 95, 108, 111, 112, 113, 114, 133, 138, 141, 142, 147, 149, 159, 161, 167, 169, 171, 175, 176], "qiskit_optim_level": [22, 51, 64, 70, 93, 97, 98, 142, 167, 168, 170, 171, 177, 179, 180, 184], "3": [22, 51, 64, 70, 77, 118, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184], "optimize_sqg": [22, 51, 63, 64, 70, 142, 167, 168, 170, 171, 179, 180, 184], "fidelity_routin": [22, 167, 168, 171, 172, 173], "100": [22, 36, 64, 70, 129, 167, 168, 170, 171, 174, 175, 178, 184], "rem": [22, 24, 51, 70, 78, 126, 162, 167, 168, 171, 172, 173, 178, 179, 180, 184], "mit_shot": [22, 51, 69, 70, 126, 167, 168, 171, 172, 173, 178, 179, 180, 184], "1000": [22, 51, 70, 126, 165, 167, 168, 171, 172, 173, 175, 178, 179, 180], "cal_url": [22, 132, 155, 172, 173], "possibl": [22, 172, 173, 179, 180, 183], "optim": [22, 63, 64, 70, 93, 142, 162, 167, 168, 170, 171, 172, 173, 175, 178, 179, 180, 184], "log": [22, 27, 28, 29, 31, 172, 173], "depth": [22, 26, 27, 28, 29, 38, 51, 69, 78, 93, 94, 97, 98, 109, 112, 116, 119, 121, 167, 168, 169, 170, 171, 172, 173, 176, 177], "coupl": [22, 29, 32, 39, 64, 70, 132, 142, 144, 147, 156, 167, 172, 173], "cz": [22, 30, 31, 32, 112, 131, 132, 142, 159, 161, 164, 167, 170, 172, 173], "account": [22, 51, 142, 175, 184], "algorithm": [22, 31, 96, 155, 167, 168, 172, 173], "span": [22, 29, 31], "choos": [22, 50, 168, 172, 173, 183], "largest": [22, 167, 168, 172, 173], "weight": [22, 31, 32, 76], "distanc": [22, 31, 175], "parallel": [22, 31, 39, 61, 83, 88, 112, 119, 121, 130, 162, 167, 168, 170, 171, 172, 173, 176], "applic": [22, 31, 96, 164, 172, 173, 183], "cx": [22, 26, 31, 63], "scale": [22, 167, 168], "logarithm": [22, 172, 173], "connect": [22, 31, 123, 155, 162, 172, 173], "naiv": [22, 51, 172, 173], "appli": [22, 26, 31, 39, 63, 70, 162, 168, 171, 172, 173, 177, 183], "textbook": [22, 172, 173], "linearli": 22, "specifi": [22, 37, 64, 69, 70, 88, 94, 96, 97, 115, 119, 120, 123, 131, 134, 138, 139, 140, 147, 150, 159, 162, 167, 168, 177, 184], "assum": [22, 33, 118, 134, 183], "e": [22, 88, 93, 118, 133, 134, 152, 162, 167, 168, 170, 171, 172, 173, 175, 179, 180], "g": [22, 88, 93, 118, 133, 152, 162, 164, 167, 168, 170, 171, 172, 173, 175, 179, 180], "label": [22, 41, 42, 43, 46, 64, 78, 88, 97, 107, 113, 117, 133, 134, 142, 147, 159, 161, 162, 164, 165, 167, 172, 173], "meant": 22, "NOT": 22, "support": [22, 32, 183], "denot": 22, "provid": [22, 56, 154, 163, 165, 166, 167, 168, 171, 172, 173, 174, 183], "here": [22, 95, 165, 167, 168, 175], "ha": [22, 51, 167, 168, 169, 175, 177, 180, 183, 184], "than": [22, 167, 168, 172, 173, 177, 184], "small": [22, 162], "level": [22, 51, 64, 70, 93, 162, 167, 168, 170, 171, 172, 173, 179, 180], "architectur": 22, "consecut": 22, "reduc": [22, 143], "iqm_transpil": 22, "optimize_single_qubit_g": 22, "multipl": [22, 24, 36, 101, 162, 167, 168, 172, 173], "moonei": [22, 24, 167, 168, 172, 173], "2021": [22, 24, 167, 168, 172, 173, 184], "randomized_measur": [22, 172, 173], "outlin": 22, "http": [22, 25, 27, 28, 101, 141, 164, 165, 168, 171, 172, 173, 174, 175, 183, 184], "arxiv": [22, 25, 27, 28, 64, 96, 164, 172, 173, 184], "org": [22, 25, 27, 28, 164, 172, 175, 183], "ab": [22, 25, 27, 28, 164, 172, 174], "1812": [22, 25], "02624": [22, 25], "respect": [22, 41, 93, 95, 133, 167, 173], "chosen": [22, 51, 167, 168, 172, 173, 175], "readout": [22, 24, 51, 69, 70, 75, 124, 125, 127, 162, 168, 171, 172, 173], "error": [22, 24, 51, 69, 70, 75, 117, 127, 155, 162, 167, 168, 171, 172, 173, 175], "mitig": [22, 24, 51, 69, 70, 75, 124, 125, 126, 127, 162, 168, 171, 172, 173], "total": [22, 36, 105, 164, 167, 168, 172, 173], "url": [22, 132, 155, 167, 184], "retriev": [22, 63, 67, 145, 146, 152, 155, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "priorit": 22, "high": [22, 167, 168, 172, 173], "ideal_prob": 25, "num_qubit": [25, 26, 27, 28, 30, 50, 51, 69, 95, 108, 114, 168, 170, 173, 174], "cross": [25, 167, 168, 183], "correl": [25, 172], "rm": [25, 161], "eq": [25, 164], "34": [25, 165, 169, 170, 171, 174, 178, 179], "hadamard": [26, 164, 173], "seri": 26, "linear": [26, 173], "fashion": 26, "symmetr": 26, "halv": 26, "1807": [27, 172, 173], "05572": [27, 172, 173], "2101": [28, 172, 173], "08946": [28, 172, 173], "n_state": [29, 167], "networkx": [29, 31, 32, 50, 52, 53, 54, 55, 156, 167, 168], "n": [29, 51, 84, 94, 139, 158, 164, 167, 168, 172, 173, 174], "participating_qubit": 29, "qc": [29, 63, 133, 135, 161, 164, 165, 184], "maxim": [30, 167, 168], "between": [30, 31, 98, 125, 155, 167, 168, 172], "move": [30, 162, 180], "calcul": [31, 52, 58, 74, 105, 130, 151, 162, 167, 168], "cx_map": 31, "particip": 31, "2qb": 31, "them": [31, 39, 165, 184], "subgraph": 31, "each": [31, 33, 39, 42, 43, 58, 72, 73, 74, 78, 88, 93, 95, 98, 102, 121, 126, 131, 132, 155, 159, 161, 169, 170, 171, 172, 173, 175, 176, 177, 183, 184], "edg": [31, 32, 37, 39, 53, 54, 55, 96, 138, 144, 155, 162, 167, 168, 172, 173], "Then": [31, 184], "find": [31, 37, 167, 168, 172, 173], "most": [31, 175], "central": 31, "posit": [31, 154, 155], "next": 31, "start": [31, 50, 118, 167, 170, 171, 172, 173, 175, 184], "smallest": 31, "layer": [31, 39, 52, 56, 60, 61, 63, 64, 69, 93, 94, 96, 97, 98, 119, 130, 171, 181, 182, 184], "first": [31, 50, 63, 93, 172, 173, 175, 177, 179, 180, 181], "coupling_map": [32, 142, 167, 168, 174], "couplingmap": [32, 39, 43, 144, 147, 156], "edges_c": 32, "fidelities_c": 32, "float": [32, 41, 42, 43, 44, 45, 46, 50, 52, 53, 55, 56, 57, 58, 60, 63, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 88, 93, 95, 96, 97, 98, 108, 109, 110, 114, 117, 121, 122, 125, 127, 131, 132, 134, 139, 140, 141, 154, 160], "have": [32, 112, 134, 167, 168, 183, 184], "wai": [32, 132, 162, 167, 168], "v": [33, 58, 63, 65, 167, 168, 171, 176], "user": [33, 168, 173, 174, 180, 184], "identif": [33, 183], "graphstatebenchmark": [34, 36, 174], "graphstateconfigur": [34, 35, 174], "backend_arg": [35, 50, 63, 69, 84, 89, 94, 96, 97, 98, 111, 112, 113, 119, 120, 122, 123, 126, 131], "entangel": 35, "neg": [35, 41, 42, 43, 44, 45, 160, 162], "add_all_meta_to_dataset": [35, 50, 63, 69, 89, 94], "variabl": [35, 50, 63, 69, 84, 89, 94, 110, 165, 172, 173, 175, 184], "add_all_circuits_to_dataset": [35, 69, 84, 89], "generate_all_circuit_info_for_graph_state_benchmark": 35, "associ": [35, 76, 170, 171, 183], "disjoint": 35, "neighbor": [35, 37, 41, 44, 45, 138, 174], "project": [35, 41, 46, 76, 184], "node": [35, 37, 39, 51, 53, 54, 58, 60, 138, 154, 155, 167, 168, 172, 173, 178], "cover": 35, "tomographi": [36, 41, 42, 43, 44, 45, 133, 157, 161, 181, 182, 184], "state_tomographi": [36, 41, 42, 43, 174], "shadow_tomographi": [36, 41, 42, 43], "num_bootstrap": [36, 42, 43, 174], "50": [36, 165, 167, 168, 171, 174, 175, 176, 177, 178, 180, 183], "n_random_unitari": [36, 174], "n_median_of_mean": [36, 174], "shadow": [36, 42, 43, 44, 157, 159, 161], "bootstrap": [36, 42, 43, 129, 162, 175], "haar": [36, 158, 159, 161], "unitari": [36, 158, 159, 161, 167, 168, 175, 180], "local": [36, 159, 161, 172], "mean": [36, 41, 42, 43, 57, 131, 155, 164, 167, 168, 170, 175, 183], "over": [36, 77, 125, 140, 167], "median": [36, 41, 42, 43, 141, 167, 168], "nb": [36, 134, 160, 167, 169, 170, 171], "call": [36, 125, 162], "factor": 36, "x": [36, 55, 103, 105, 117, 133, 134, 154, 158, 162, 164, 165, 173, 174, 175, 177, 179, 180], "non": [37, 109, 167, 168, 183], "overlap": [37, 39, 162], "target": [38, 142, 175], "cp_map": [39, 144], "sort": [39, 118, 148, 177, 179, 180], "arrang": 39, "being": [39, 41, 57, 63, 69, 74, 77, 78, 95, 96, 108, 114, 131, 133, 139, 140, 150, 161, 167, 168], "item": [39, 167, 168, 174], "2q": [39, 96, 98, 115, 117, 167, 170, 171], "matrix": [41, 99, 139, 158, 160, 164, 167, 168], "ndarrai": [41, 63, 109, 110, 116, 139, 158, 159, 160, 161], "qubit_pair": 41, "backend_nam": [41, 42, 44, 45, 58, 78, 169, 170, 174, 177, 179, 180], "timestamp": [41, 42, 43, 44, 45, 58, 78, 169, 177], "num_rm_sampl": [41, 42, 43], "num_moms_sampl": [41, 42, 43], "densiti": [41, 93, 96, 98, 117, 139, 160, 167, 168, 174], "np": [41, 63, 109, 116, 139, 158, 159, 160, 161, 164, 167, 168, 171, 172, 174, 175, 176], "gather": 41, "qubit_nam": [42, 43, 174], "num_shot": [42, 43, 64, 167, 168, 170, 171], "max": [42, 43, 51, 167, 168, 174, 184], "backend_coupling_map": [43, 156], "station": [43, 155, 165, 184], "won": 43, "t": [43, 162, 174, 183], "displai": [43, 162, 164, 167, 168, 169, 171, 175, 176, 180, 183], "titl": [43, 117, 183], "all_qubit_pairs_per_group": [44, 45], "all_qubit_neighbors_per_group": [44, 45], "all_unprojected_qubit": [44, 45, 174], "execution_timestamp": [44, 45, 169, 170, 174, 177, 179, 180], "experiment": [44, 45], "unproject": [44, 45], "pauli_expect": [46, 139], "projected_count": 46, "nonid_pauli_label": 46, "helper": [46, 118], "pauli": [46, 93, 95, 97, 98, 99, 133, 134, 139, 164, 175], "expect": [46, 53, 54, 60, 93, 96, 98, 134, 139, 162, 167], "outermost": [46, 131], "innermost": 46, "ident": [46, 164], "infer": [46, 167], "z": [46, 134, 142], "instead": [46, 162, 184], "logger": [47, 151], "everi": 47, "warn": [47, 164, 167, 168, 173, 174, 180], "score": [48, 50, 51, 57, 171, 181, 182, 184], "combinatori": [48, 50, 167, 168], "problem": [48, 50, 52, 53, 54, 55, 57, 58, 167, 168, 184], "meaning": [48, 50, 61, 69, 70], "qscorebenchmark": [49, 51, 167, 168, 171, 178], "qscoreconfigur": [49, 50, 167, 168, 171, 178], "generate_maxcut_ansatz": 50, "theta": 50, "ansatz": [50, 52, 54, 56, 60], "qaoa": [50, 51, 52, 56, 60], "maxcut": [50, 52, 53, 54, 55, 56, 60, 167, 168, 171, 178], "end": [50, 63, 69, 164, 183], "variat": [50, 167, 168], "gamma": [50, 52], "beta": [50, 52, 57, 58, 167, 168, 171, 178], "choose_qubits_na": 50, "sequenti": [50, 120, 169, 171], "choose_qubits_custom": 50, "element": 50, "match": [50, 172, 173], "num_inst": [51, 58, 167, 168, 171, 178], "num_qaoa_lay": [51, 167, 168, 171, 178], "min_num_nod": [51, 167, 168, 171, 178], "max_num_nod": [51, 167, 168, 171, 178], "use_virtual_nod": [51, 58, 167, 168, 171, 178], "use_classically_optimized_angl": [51, 58, 167, 168, 171, 178], "choose_qubits_routin": [51, 70, 167, 168, 171, 178, 179, 180, 184], "min_num_qubit": 51, "seed": [51, 167, 168, 171, 178], "qpu_topologi": [51, 167, 168, 178], "crystal": [51, 132, 154, 167, 178], "min": [51, 125, 167, 168], "taken": [51, 167, 168], "increas": [51, 118, 133, 175], "potenti": 51, "pre": 51, "optimis": 51, "tune": 51, "minumum": 51, "virtual_nod": [51, 53, 54, 60], "upon": [51, 64, 70], "qpu": [51, 124, 162, 167, 168, 173], "either": [51, 110, 115, 127, 131, 132, 140, 154, 159, 161, 164, 172, 173, 175, 183, 184], "star": [51, 132, 142, 147, 154, 162, 166, 167, 172, 173, 182], "angl": [52, 56, 58, 60], "qubit_to_nod": [53, 54], "val": 53, "virtual": [53, 54, 58, 60, 142], "cut": [53, 54, 55, 60, 167, 168], "avg": [53, 171, 175, 178], "callabl": [54, 110, 116], "parametr": [54, 61, 63, 64, 167, 168, 170, 171, 175], "minu": 55, "sign": 55, "solut": [55, 167, 168], "multipli": 55, "obj": 55, "num_lay": 56, "approximation_ratio": 57, "approxim": [57, 58, 167, 168, 171, 178], "ratio": [57, 58, 167, 168, 171, 178], "abov": [57, 77, 167, 168, 175, 183], "success": [57, 77, 167, 168], "condit": [57, 77, 160, 172, 173, 183], "threshold": [57, 58, 70, 77, 78, 167, 168], "beta_ratio": 58, "beta_std": 58, "includ": [58, 66, 129, 162, 167, 168, 171, 172, 173, 183], "standard": [58, 70, 73, 82, 117, 131, 162, 175, 184], "deviat": [58, 70, 73, 117, 131], "classic": [58, 60, 69, 133, 134, 137, 161], "graph_phys": 60, "qubit_nod": 60, "use_classical_angl": 60, "qaoa_lay": 60, "solv": [60, 167, 168], "averag": [60, 72, 77, 78, 84, 89, 95, 110, 162, 167, 168, 173, 175], "presenc": 60, "volum": [61, 68, 69, 70, 79, 162, 181, 182, 184], "reflect": [61, 63, 69, 80, 81, 86, 91], "deepest": [61, 69], "oper": [61, 80, 122, 131, 162, 164, 172, 173, 175, 181, 182], "second": [61, 63, 181, 182], "clop": [61, 162, 181, 182, 184], "speed": [61, 63, 167, 168], "clops_v": [61, 167, 168, 170, 171], "qv": [61, 63, 64, 69, 70, 72, 73, 77, 78, 162, 167, 168, 170, 171, 181, 182], "clops_h": [61, 64, 170, 171], "squar": [61, 167, 168, 175], "clopsbenchmark": [62, 64, 167, 168, 170, 171], "clopsconfigur": [62, 63, 167, 168, 170, 171], "h": [63, 65], "append_parameterized_unitari": 63, "q0": 63, "q1": 63, "decompos": [63, 167], "su": 63, "4": [63, 118, 133, 139, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184], "involv": [63, 167, 168], "belong": 63, "generate_single_circuit": [63, 69], "generate_circuit_list": [63, 69], "generate_random_paramet": 63, "templat": [63, 167, 168, 170, 171], "float64": 63, "assign_random_parameters_to_al": 63, "dict_parametrized_circ": 63, "clops_cycl": 63, "sorted_transpiled_qc_list": [63, 69, 150], "cycl": 63, "assign": [63, 64, 93, 129, 133, 161, 162, 167, 168, 170, 171], "elaps": [63, 66, 67, 151, 170, 171], "time": [63, 66, 67, 69, 94, 119, 120, 151, 167, 168, 170, 171, 172, 173, 175], "submiss": [63, 69, 94, 119, 120, 167, 168, 183], "generate_transpiled_clops_templ": 63, "num_circuit": [64, 70, 167, 168, 170, 171, 175, 179, 180, 184], "num_upd": [64, 167, 168, 170, 171], "10": [64, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 184], "clops_h_bool": [64, 170, 171], "one": [64, 118, 165, 167, 168, 172, 173, 175, 177, 183, 184], "establish": [64, 170, 171], "By": [64, 170, 171], "definit": [64, 167, 168, 170, 171, 183], "2110": [64, 184], "14108": [64, 184], "quant": [64, 96, 184], "ph": [64, 96, 184], "rigor": [64, 175], "loos": 64, "www": [64, 164, 183], "ibm": [64, 125], "com": [64, 141, 168, 172, 173, 174], "blog": 64, "metric": [64, 167, 168, 175, 176], "restrict": [64, 70, 147, 168, 171, 179, 180], "consid": [64, 70, 147, 159, 168, 173], "clops_data": 66, "job_meta": 67, "quantumvolumebenchmark": [68, 70, 167, 168, 171, 179, 180], "quantumvolumeconfigur": [68, 69, 167, 168, 171, 179, 180, 184], "classical_permut": 69, "permut": 69, "avoid": 69, "swap": [69, 164], "get_rem_quasidistro": 69, "sorted_qc_list_indic": [69, 74], "execution_result": [69, 71], "quasicollect": [69, 75, 126], "quasiprob": [69, 75, 126, 127], "qubii": 69, "untranspil": [69, 74, 111, 142, 162], "submit_single_qv_job": 69, "submit": [69, 94, 119, 120, 150, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 183], "organ": [69, 150], "vanilla": [69, 78, 94, 119, 120], "dd": [69, 78, 94, 119, 120], "num_sigma": [70, 77, 78, 167, 168, 171, 179, 180, 184], "least": [70, 167, 168, 175, 183], "criteria": 70, "consensu": 70, "post": [70, 168, 169, 171, 176, 177, 179, 180], "process": [70, 167, 168, 169, 171, 176, 177, 179, 180], "when": [70, 162, 167, 172, 173, 184], "unmitig": 70, "1_000": [70, 167, 168, 171, 179, 180, 184], "ideal_heavy_output": [71, 75], "hop": [71, 72, 73, 77, 78, 162], "ideal": [71, 95, 167, 168, 174], "heavi": [71, 72, 73, 74, 75, 76, 77, 167, 168], "cumul": [72, 73], "probabl": [72, 73, 75, 76, 93, 96, 108, 114, 121, 140, 167, 168, 177, 184], "individu": [72, 73, 117, 159, 162, 167, 172, 173, 175, 183, 184], "trial": [72, 73], "qc_list": [74, 142], "bitrstr": 74, "all_rem_quasidistro": 75, "distribut": [75, 76, 140, 164, 167, 168, 183], "noiseless": [75, 168, 171, 174, 179, 180], "onto": 76, "heavy_output_prob": [77, 179, 180], "within": [77, 183, 184], "sigma": [77, 78], "qv_result": [78, 167, 168, 179, 180], "qv_results_typ": [78, 179, 180], "in_volumetr": 78, "plot_rem": 78, "come": [78, 95, 127, 134], "context": 78, "volumetr": 78, "correct": [78, 95, 125, 126, 162, 167, 168, 175], "rb": [81, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 108, 109, 110, 112, 114, 116, 117, 120, 121, 123, 162, 164, 167, 171, 176, 181, 182], "cliffordrandomizedbenchmark": [82, 83, 167, 169, 171], "cliffordrbconfigur": [82, 84, 167, 169, 171], "qubits_arrai": [83, 88, 93, 112, 117, 119, 121, 123, 167, 169, 171, 176, 177, 184], "sequence_length": [83, 88, 111, 112, 167, 169, 171, 176, 184], "num_circuit_sampl": [83, 88, 93, 111, 167, 169, 171, 176, 177, 184], "parallel_execut": [83, 88, 167, 169, 171, 176, 184], "length": [83, 88, 95, 99, 111, 112, 113, 164, 167, 169, 171, 176], "add_all_metadata_to_dataset": 84, "interleav": [86, 87, 88, 89, 90, 93, 98, 109, 110, 111, 112, 113, 117, 162, 169, 181, 182, 184], "interleavedrandomizedbenchmark": [87, 88, 167, 171, 176], "interleavedrbconfigur": [87, 89, 167, 171, 176, 184], "interleaved_g": [88, 111, 112, 113, 117, 167, 171, 176, 184], "interleaved_gate_param": [88, 167, 171, 176, 184], "simultaneous_fit": [88, 167, 171, 176, 184], "amplitud": [88, 109, 167, 171, 176, 184], "offset": [88, 109, 167, 171, 176, 184], "irb": [88, 110, 162, 181, 182], "ygate": 88, "czgate": [88, 93, 164, 167, 171, 175, 176, 177, 184], "enter": [88, 110, 112], "fit": [88, 101, 102, 103, 105, 109, 110, 116, 117, 162, 175, 183], "simultan": [88, 110], "specif": [89, 142, 164, 166, 167, 168, 171, 175, 179, 180, 181, 183], "mirror": [91, 92, 93, 94, 98, 162, 181, 182, 184], "mirrorrandomizedbenchmark": [92, 93, 171, 177, 184], "mirrorrbconfigur": [92, 94, 171, 177, 184], "depths_arrai": [93, 171, 177, 184], "num_pauli_sampl": [93, 95, 99, 171, 177, 184], "two_qubit_gate_ensembl": [93, 96, 97, 98, 171, 177, 184], "density_2q_g": [93, 96, 97, 98, 171, 177, 184], "25": [93, 96, 97, 98, 167, 168, 169, 170, 171, 174, 176, 177, 178, 179, 180, 184], "mrb": [93, 94, 97, 100, 110, 117, 119, 120, 162, 171, 181, 182], "len": [93, 164, 167, 168, 175], "two": [93, 96, 164, 165, 167, 172, 173, 175], "ensembl": [93, 94, 96, 117, 158], "cxgate": 93, "submit_single_mrb_job": 94, "sorted_transpiled_circuit_dict": [94, 119], "canon": [94, 97, 98, 119], "noisy_count": 95, "ideal_count": 95, "num_circ_sampl": [95, 99, 113], "polar": [95, 110], "noisi": 95, "rescal": 95, "few": [95, 167, 168, 172, 173], "effect": [95, 167, 168, 173], "real": [95, 184], "simul": [95, 125, 162, 168, 170, 171, 177, 179, 180], "qubit_set": [96, 110], "n_layer": 96, "grab": [96, 125], "see": [96, 150, 162, 164, 167, 172, 173, 175, 183], "2204": 96, "07568": 96, "form": [96, 183], "subsequ": [96, 183], "rais": [96, 99, 115, 123, 125, 134, 139, 142, 147, 161], "valueerror": [96, 99, 115, 123, 134, 139, 142, 147, 161], "do": [96, 125, 176, 183], "up": [96, 167, 184], "uniti": 96, "circ_sampl": 97, "pauli_samples_per_circ": [97, 98], "dress": [97, 98, 99], "input_list": 99, "convert": [99, 156, 164], "flat": 99, "shape": 99, "lmfit": [101, 102, 110], "extend": [101, 162], "shown": [101, 167, 168, 172, 173, 174, 175], "document": [101, 150, 167, 168, 183, 184], "github": [101, 184], "io": 101, "py": [101, 168, 173, 174, 180, 184], "example_fit_multi_dataset": 101, "html": [101, 141, 184], "sphx": 101, "glr": 101, "multi": [101, 167, 168], "func": [102, 103, 104, 105, 110, 116], "initial_guess": 102, "constraint": [102, 184], "simultaneously_fit_var": 102, "line": 102, "evalu": [103, 167, 168], "signatur": 104, "residu": 105, "sever": [105, 162, 167, 168], "techniqu": 106, "qc_inv": 107, "clifford_dictionari": 107, "invers": [107, 167], "invert": 107, "de": [107, 113], "stabil": [107, 113, 162], "ground": [108, 114, 165], "depolarization_prob": 109, "depolar": 109, "p": [109, 167], "decai": [109, 117, 162, 167], "exponenti": [109, 167], "rb_identifi": 110, "simultaneous_fit_var": 110, "interleaved_gate_str": 110, "0th": 110, "ap": [110, 175], "m": [110, 167, 168, 169, 171, 174, 176, 177, 180, 184], "b": [110, 160, 164, 167, 183], "stdrb": 110, "clifford_dict": [111, 113], "fir": 111, "cliffords_1q": [112, 159, 161], "cliffords_2q": 112, "num_sampl": [112, 113], "befor": [112, 167], "after": [112, 184], "term": [112, 134, 159, 161, 164, 175, 183], "r": [112, 131, 142, 159, 161, 164, 170, 174, 175, 180], "seq_length": 113, "self": [113, 165], "system_s": 115, "import": [115, 162, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184], "load": [115, 169], "1q_dict": 115, "2q_dict": 115, "fit_paramet": 116, "fit_data": 116, "minimizerresult": 116, "violin": 117, "scatter": 117, "bar": [117, 165, 175], "shade_stdev": 117, "shade_meanerror": 117, "logscal": 117, "mrb_2q_densiti": 117, "mrb_2q_ensembl": 117, "point": [117, 141, 172, 173], "shade": 117, "axi": [117, 162], "arr": 118, "relabel": 118, "increasingli": 118, "zero": [118, 162, 167, 168], "5": [118, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 183, 184], "7": [118, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 183, 184], "note": [118, 127, 160, 162, 172, 173, 175, 184], "transpiled_circuit": [120, 126, 180], "circuit_compilation_opt": [120, 150], "circuitcompilationopt": [120, 150], "compil": [120, 150, 162, 167, 175, 183], "submit_execut": 120, "margin": [121, 125, 140], "surviv": [121, 167], "gate_id": 122, "gate_param": 122, "basi": [122, 142, 164, 167, 168, 175, 183], "m3": [124, 125, 126], "modif": [124, 183], "m3iqm": [124, 127], "mthree": [124, 127], "m3mitig": [124, 125], "iter_threshold": 125, "4096": 125, "modifi": [125, 162, 167, 168, 183], "work": [125, 127, 167, 168, 183, 184], "devic": [125, 162, 167, 168, 182, 184], "cals_from_system": 125, "initial_reset": 125, "rep_delai": [125, 173, 180], "cals_fil": 125, "async_c": 125, "cal_id": 125, "array_lik": 125, "1e4": 125, "max_shot": 125, "balanc": 125, "hardwar": [125, 182], "independ": [125, 167], "reset": 125, "begin": [125, 164], "delai": 125, "path": 125, "json": [125, 175], "async": 125, "separ": [125, 162, 179, 180, 183], "thread": 125, "m3error": 125, "while": [125, 172, 173, 175, 183], "progress": 125, "against": [126, 183], "outcom": [126, 167, 168, 175], "mit": [127, 183], "iter": [127, 140], "processor": [127, 167, 168], "argument": [127, 162, 172, 173, 184], "util": [127, 153, 157, 162, 172, 173, 174], "final_measurement_map": 127, "like": [127, 164, 167, 168, 184], "qubit_name_to_index": 127, "quasiprobabilti": 127, "we": [127, 165, 167, 168, 175, 183], "could": 127, "also": [127, 162, 172, 173, 175, 179, 180, 183, 184], "would": [127, 174], "out": [127, 183], "box": 127, "u": 127, "sinc": [127, 167, 168, 175], "original_count": 129, "num_bootstrap_sampl": 129, "rgen": 129, "include_original_count": 129, "resampl": 129, "numpi": [129, 159, 161, 164, 167, 168, 171, 175, 176], "default_rng": 129, "circuit_list": 130, "transpiled_qc_list": 131, "barrier": [131, 164, 165, 170], "under": [132, 162, 164, 167, 175, 183], "list_fid": 132, "list_coupl": 132, "chip": [132, 154, 155], "active_qubit": [133, 161], "measure_oth": [133, 161], "measure_other_nam": [133, 161], "tomograhi": 133, "regist": [133, 134, 161], "xy": 133, "y": [133, 134, 154, 164], "pauli_label": 134, "charact": [134, 183], "extract": [135, 137, 152, 167, 184], "backend_label": 136, "bit": [137, 140, 159], "reconstruct": [139, 174, 175], "tomograph": 139, "prob_dist_or_count": 140, "prob_dist": 140, "propag": 141, "refer": [141, 167, 168, 175, 182, 184], "mathworld": 141, "wolfram": 141, "statisticalmedian": 141, "basis_g": 142, "drop_final_rz": 142, "optimization_level": [142, 165, 167], "sqg": [142, 168, 170, 171, 172, 173, 179, 180], "drop": 142, "rz": 142, "emploi": 142, "backend_topologi": 143, "backend_num_qubit": 143, "remov": [144, 162], "duplic": 144, "vertic": 144, "iqm_job": [145, 146], "iqmjob": [145, 146, 150], "relev": 146, "transpiled_circuit_list": 148, "sorted_indic": [148, 174], "sorted_circuit": 148, "sequence_in": 149, "split_siz": 149, "split": [149, 184], "chunk": 149, "normal": [150, 183], "sent": [150, 183], "manag": [150, 183, 184], "abil": 150, "among": [150, 167, 184], "f": [151, 164, 165, 167, 168, 171, 172, 173, 174, 175, 180], "decor": 151, "statement": [151, 183], "counts_rang": 152, "rang": [152, 162, 164, 165, 167, 168, 169, 171, 173, 174, 175, 176, 177, 184], "were": [152, 162], "visual": [153, 155, 162, 167, 172, 173], "graphposit": 153, "predefin": [154, 155, 172, 173, 175], "variou": [154, 181], "garnet_posit": 154, "garnet": [154, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 184], "deneb_posit": 154, "deneb": [154, 162, 168, 169, 170, 171, 173, 176, 177, 178, 179, 181, 182], "predefined_st": 154, "create_posit": 154, "pygraph": 154, "must": [154, 167, 168, 183, 184], "coordin": [154, 165], "thick": [155, 162], "thinner": [155, 172, 173], "better": [155, 172, 173], "highlight": 155, "orang": [155, 172, 173], "rustworkx": [156, 162], "random_gen": 158, "randomst": 158, "drawn": 158, "circuilar": 158, "unitary_arg": 159, "subsystem_bit_indic": 159, "clifford_or_haar": [159, 161], "initialis": [159, 161], "subsystem": [159, 160], "rho": [160, 175], "na": 160, "suffici": [160, 172, 173], "entangl": [160, 162, 167, 168, 171, 172, 173, 174, 184], "For": [160, 168, 172, 173, 175, 183, 184], "more": [160, 162, 167, 168, 183, 184], "mere": [160, 183], "nu": 161, "compos": [161, 164], "header": 162, "example_graphst": [162, 174], "notebook": [162, 165, 167, 168, 175, 181, 182], "page": [162, 182, 183], "render": [162, 184], "benchmark": [162, 163, 164, 166, 175, 178, 179, 180, 181], "iqm": [162, 163, 164, 165, 166, 172, 174, 175, 176, 181, 183], "depend": [162, 172, 173, 175, 182], "guidelin": 162, "wrong": 162, "aid": 162, "gst": [162, 181, 182], "don": [162, 183], "runtim": 162, "improv": [162, 183], "tensor": 162, "bottom": 162, "top": 162, "qscore": [162, 167, 168], "file": [162, 183, 184], "test": [162, 167, 168, 184], "fake": 162, "bug": 162, "done": [162, 164], "instal": [162, 167, 175, 182], "command": [162, 184], "develop": [162, 164, 173, 182], "mode": [162, 164, 184], "41": [162, 168, 171, 176, 177, 178], "folder": [162, 183, 184], "doc": [162, 184], "spark": [162, 166, 182], "30": [162, 167, 169, 171, 174, 176, 178, 182, 184], "compat": 162, "adapt": [162, 184], "behavior": 162, "report": [162, 167], "publish": 162, "ci": 162, "secur": [162, 184], "scan": [162, 184], "lockfil": [162, 184], "relat": [162, 167], "lead": [162, 172, 173, 175], "modulenotfounderror": 162, "pyrit": [162, 178], "incorrect": 162, "mgst": [162, 175, 183, 184], "hamiltonian": [162, 175], "rank": [162, 175], "compress": [162, 181, 182, 184], "stage": 162, "revert": 162, "ones": [162, 167, 168, 184], "now": [162, 168, 169, 170, 171, 172, 173, 174, 175, 176], "port": 162, "subclass": 162, "usag": 162, "place": [162, 183], "miscellan": 162, "relax": 162, "api": [162, 172, 173, 182, 184], "build": [162, 184], "overwrit": 162, "tutori": 162, "explicit": 162, "minor": 162, "longer": [162, 167], "renam": 162, "so": [162, 167, 168, 175], "rebas": 162, "randomizedbenchmark": 162, "quantumvolum": 162, "serial": 162, "some": [162, 167, 168, 172, 173], "available_benchmark": 162, "__init__": 162, "public": 162, "hint": 162, "docstr": 162, "messag": 162, "prevent": 162, "exclus": [162, 183], "jupyt": 162, "section": [163, 166, 181, 183], "guidanc": [163, 166], "packag": [163, 167, 168, 173, 174, 180, 181, 184], "your": [163, 167, 168, 173, 182, 183, 184], "own": [163, 182, 183, 184], "decomposit": [163, 182], "1402": 164, "4848": 164, "copyright": [164, 183], "2024": [164, 169, 170, 180, 183], "licens": [164, 182], "apach": [164, 183], "you": [164, 167, 168, 173, 176, 180, 183, 184], "mai": [164, 167, 168, 183], "except": [164, 165, 183], "complianc": [164, 183], "obtain": [164, 167, 168, 183, 184], "unless": [164, 183], "law": [164, 183], "agre": [164, 183], "softwar": [164, 183], "AS": [164, 183], "without": [164, 167, 168, 172, 173, 183], "warranti": [164, 183], "OR": [164, 183], "OF": [164, 183], "kind": [164, 183], "express": [164, 183], "impli": [164, 183], "languag": [164, 183], "govern": [164, 183], "permiss": [164, 183], "limit": [164, 183], "quantum_info": 164, "qi": 164, "c0": 164, "c": [164, 167, 168, 173, 174, 180, 183], "_": [164, 167, 172, 173, 175], "24": [164, 168, 169, 170, 171, 176, 178], "half": 164, "pi": [164, 171, 176], "x2": 164, "to_gat": 164, "y2": 164, "x2m": 164, "y2m": 164, "inplac": 164, "2pi": 164, "rotat": [164, 165], "6": [164, 169, 170, 171, 172, 173, 174, 176, 177, 178, 180, 183, 184], "9": [164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 183, 184], "11": [164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 177, 180, 184], "12": [164, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180], "13": [164, 168, 169, 171, 172, 173, 174, 176, 177, 180, 184], "14": [164, 168, 169, 170, 171, 173, 174, 176, 177, 184], "15": [164, 167, 168, 169, 170, 171, 173, 174, 176, 177, 180], "16": [164, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179], "17": [164, 169, 170, 171, 172, 174, 176, 177, 179, 184], "18": [164, 169, 170, 171, 172, 173, 174, 176, 177, 184], "19": [164, 170, 171, 172, 174, 175, 176, 177], "20": [164, 165, 168, 169, 170, 171, 173, 176], "21": [164, 168, 170, 171, 174, 176], "22": [164, 168, 170, 171, 173, 174, 175, 176, 177], "23": [164, 169, 170, 171, 172, 176, 177, 179, 180], "clifford_sqg": 164, "s1": 164, "k": [164, 167, 168, 170, 177, 179, 180], "s1x2": 164, "s1y2": 164, "displaystyl": 164, "sum_": [164, 175], "prime": 164, "left": 164, "mathrm": [164, 167, 168, 172, 173], "tr": [164, 175], "u_": 164, "dagger": [164, 167, 175], "u_k": 164, "right": [164, 183], "s2": 164, "satisfi": [164, 168, 173, 175], "c_kei": 164, "aux": 164, "total_triangl": 164, "c1": 164, "adjoint": 164, "j": [164, 167, 168, 172, 173, 175], "c2": 164, "c3": 164, "to_matrix": 164, "trace": [164, 175], "print": [164, 167, 170, 171, 172, 173, 174, 175, 177, 179, 180, 183], "0f": 164, "diagon": [164, 167, 168], "nsum": 164, "sum": 164, "clifford_2qg": 164, "product": [164, 183], "c2q_0": 164, "c2q": 164, "counter": 164, "to_label": 164, "sqg_class_": 164, "cnot": [164, 172, 173], "sy2": 164, "cnot_class_": 164, "iswap": 164, "sy1": 164, "sx2": 164, "i_swap_class_": 164, "swap_class_": 164, "clifford_1qg": 164, "open": 164, "clifford_1q": 164, "pkl": 164, "wb": 164, "clifford_2q": 164, "loaded_dict": 164, "def": [164, 165], "count_rcz": 164, "c_list": 164, "no_cz": 164, "no_r": 164, "count_op": 164, "els": 164, "num_2qcz": 164, "num_2qr": 164, "num_1qcz": 164, "num_1qr": 164, "875": [164, 167, 176, 179], "200": [164, 174, 178], "randint": [164, 167, 168, 171, 178], "11520": 164, "draw": [164, 167, 168, 174, 180], "mpl": [164, 174], "style": [164, 174], "iqp": [164, 174], "fold": [164, 174], "ninvers": 164, "qc_aux": 164, "qcinv": 164, "op_seq": 164, "ncomposit": 164, "modulo": 164, "phase": 164, "equiv": 164, "ii": [164, 165, 183], "latex": 164, "composit": 164, "bmatrix": 164, "520": [164, 171, 178], "132": [164, 171, 176], "710": [164, 171, 178], "400": [164, 169, 171, 174, 178], "suffic": 164, "triangular": 164, "part": [164, 183], "howev": [164, 183, 184], "still": [164, 175], "op": 164, "adj": 164, "prod": 164, "100000": 164, "ndone": 164, "defit": 165, "simpl": [165, 167, 184], "anoth": 165, "excit": 165, "add_counts_to_dataset": 165, "pyplot": [165, 167, 168, 175], "plt": [165, 167, 168, 175], "generate_readout_test_circuit": 165, "n_qubit": 165, "qb_to_measur": 165, "qc_transpil": 165, "plot_histogram": [165, 167], "try": 165, "state_": 165, "counts_": 165, "break": 165, "xtick": 165, "90": [165, 174], "legend": 165, "readout_analysi": 165, "histogram": [165, 167], "readouttest": 165, "default_opt": 165, "n_shot": 165, "2048": 165, "staticmethod": 165, "readout_test": 165, "iqmprovid": [165, 167, 168, 171, 173, 174, 184], "iqm_server_url": 165, "fi": [165, 184], "coco": [165, 168, 174, 184], "get_backend": [165, 167, 168, 171, 174, 184], "480b": 165, "dimens": [165, 175], "state_0": 165, "state_1": 165, "u4": 165, "144b": 165, "0000": 165, "0001": 165, "0010": 165, "1010": 165, "1100": 165, "176b": 165, "0011": 165, "0101": 165, "0110": 165, "1101": 165, "1110": 165, "1111": 165, "counts_0": 165, "int64": 165, "72b": 165, "1924": 165, "26": [165, 171, 174, 176, 178], "39": [165, 171, 173, 174, 175, 176, 178], "counts_1": 165, "88b": 165, "72": [165, 174], "48": [165, 171, 173, 176, 178], "78": [165, 174], "36": [165, 171, 174, 178], "1801": 165, "sure": [167, 184], "pip": [167, 184], "ipykernel": 167, "o": [167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 184], "environ": [167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 184], "iqm_tokens_fil": 167, "token": [167, 168, 172, 174, 176, 184], "iqm_url": [167, 168, 171, 174], "access": [167, 168, 184], "everyth": [167, 168], "properli": [167, 168], "nx": [167, 168], "add_edges_from": [167, 168], "po": [167, 168], "spring_layout": [167, 168], "42": [167, 168, 171, 172, 174, 176, 178], "with_label": [167, 168], "node_color": [167, 168], "lightblu": [167, 168], "edge_color": [167, 168], "grai": [167, 168], "node_s": [167, 168], "font_siz": [167, 168], "linewidth": [167, 168], "width": [167, 168, 172, 173], "cell": [167, 168], "below": [167, 168, 172, 173, 175, 183, 184], "ignor": [167, 168], "critic": [167, 168], "filterwarn": [167, 168], "action": [167, 168], "three": [167, 168], "superposit": [167, 168], "rangl": [167, 168], "frac": [167, 168, 175], "sqrt": [167, 168], "otim": [167, 168], "act": [167, 168, 183], "wit": [167, 168], "genuin": [167, 168, 172, 173], "cannot": [167, 168, 183], "explain": [167, 168], "great": [167, 168], "rho_": [167, 168], "text": [167, 168, 175, 183], "langl": [167, 168], "pure": [167, 168], "case": [167, 168], "actual": [167, 168], "entri": [167, 168, 175], "written": [167, 168, 183], "00": [167, 168, 171, 174, 175, 177, 179], "corner": [167, 168], "simplifi": [167, 168], "four": [167, 168], "compon": [167, 168], "formula": [167, 168], "nullifi": [167, 168], "To": [167, 168, 169, 172, 173, 175, 183, 184], "off": [167, 168], "want": [167, 168, 184], "pleas": [167, 168], "generate_ghz_spanning_tre": 167, "get_edg": 167, "ghz_circuit": 167, "qc_transp": 167, "re": [167, 176], "10000": [167, 168, 178], "get_count": 167, "benchmark_ghz": [167, 168, 171, 172, 173], "run_ghz": [167, 168, 171, 172, 173], "result_ghz": [167, 168], "introduc": [167, 168], "2019": [167, 168, 172, 173, 184], "successfulli": [167, 168, 169, 171, 176, 177, 179, 180], "occcur": [167, 168], "greater": [167, 168], "ask": [167, 168], "confid": [167, 168], "higher": [167, 168], "97": [167, 168], "around": [167, 168], "85": [167, 168, 174, 184], "asymptot": [167, 168], "log_2": [167, 168], "v_q": [167, 168], "underset": [167, 168], "argmax": [167, 168], "d": [167, 168, 172, 173, 183], "leq": [167, 168], "achiev": [167, 168, 174], "quantum_volum": [167, 168, 170, 171, 179, 180, 184], "combin": [167, 168, 183], "due": 167, "topmost": 167, "500": [167, 168, 171, 177, 179, 180, 184], "60_000": [167, 171, 179, 180, 184], "follow": [167, 168, 172, 173, 175, 183, 184], "code": [167, 168, 175, 182, 183, 184], "minut": [167, 168, 175], "benchmark_qv": [167, 168, 171, 179, 180], "run_qv": [167, 168], "result_qv": [167, 168], "That": [167, 168], "wack": [167, 168], "repeat": [167, 168], "constitut": [167, 168, 183], "_time": [167, 168], "notic": [167, 168, 183], "plot_tim": [167, 168], "benchmark_clop": [167, 168, 170, 171], "run_clop": [167, 168, 170, 171], "result_clop": [167, 168, 170, 171], "fig_clop": [167, 168], "idea": 167, "behind": 167, "crb": 167, "certain": [167, 168], "nois": 167, "langle0": 167, "c_": 167, "inv": 167, "c_m": 167, "cdot": 167, "_2c_1": 167, "sim": 167, "c_1": 167, "c_2": 167, "ldot": 167, "c_1c_2": 167, "_m": 167, "leq1": 167, "constant": 167, "isol": 167, "spam": 167, "magesan": 167, "2012": [167, 184], "turn": 167, "assumpt": 167, "markovian": 167, "stationari": 167, "theori": [167, 183], "fact": 167, "design": [167, 183, 184], "fulli": [167, 175], "ensur": 167, "our": 167, "overlin": 167, "intend": 167, "becaus": 167, "eventu": 167, "mention": 167, "barend": 167, "2014": 167, "approx": 167, "alwai": [167, 172, 173], "slightli": 167, "care": 167, "compar": 167, "spec": 167, "randomized_benchmark": [167, 169, 171, 176, 177, 184], "clifford_rb": [167, 169, 171], "benchmark_clifford_rb": [167, 169, 171], "run_clifford_rb": [167, 169, 171], "result_clifford_rb": [167, 169, 171], "previou": 167, "aim": [167, 172, 173], "interest": 167, "robust": 167, "sole": [167, 183], "made": [167, 183], "rate": 167, "wish": [167, 180], "character": [167, 182], "interleaved_rb": [167, 171, 176, 184], "irb_cz": 167, "benchmark_irb_cz": 167, "run_irb_cz": 167, "result_irb_cz": 167, "martiel": [167, 168], "erd\u0151": [167, 168], "r\u00e9nyi": [167, 168], "cost": [167, 168], "geq": [167, 168, 175], "999999": [167, 168, 171, 178], "benchmark_qscor": [167, 168, 171, 178], "run_qscor": [167, 168, 171], "result_qscor": [167, 168, 171], "summar": 167, "tabl": [167, 175], "obs_ghz": [167, 168], "round": [167, 168], "obs_qv": [167, 168], "obs_clop": [167, 168], "obs_crb": 167, "f_crb": 167, "obs_irb": 167, "f_irb": 167, "avg_gate_fidelity_interleav": [167, 171, 176], "obs_q": [167, 168], "argmin": [167, 168], "mean_approximation_ratio": [167, 168, 171, 178], "3000": 167, "999": [167, 169, 170, 171], "98": 167, "format": [167, 183], "num": 167, "iqm_token": [168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 184], "reson": [168, 172, 174, 176, 184], "meetiqm": [168, 172, 173, 174], "raphaelbrieg": [168, 173], "miniconda3": [168, 173], "env": [168, 173, 174, 180], "lib": [168, 173, 174, 180], "site": [168, 173, 174, 180], "140": [168, 171, 173], "userwarn": [168, 173, 174, 180], "client": [168, 173], "built": [168, 173], "server": [168, 173, 180], "might": [168, 172, 173], "encount": [168, 173], "issu": [168, 173, 183], "best": [168, 172, 173], "version_incompatibility_msg": [168, 173], "chosen_layout": 168, "2000": [168, 175], "2025": [168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182], "03": [168, 171, 172, 173, 174, 176, 177, 182], "866": [168, 171], "logging_config": [168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "info": [168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "868": 168, "665": [168, 171], "936": [168, 171, 178], "384": [168, 171], "429": [168, 170, 171], "762": [168, 171, 178], "307": [168, 177, 178], "310": [168, 171, 178], "413": [168, 171, 177], "066": [168, 171, 178], "497": [168, 170, 171], "501": [168, 171, 174], "565": [168, 171], "297": [168, 171], "758": [168, 171, 174, 175, 176, 177], "323": [168, 169, 171], "43": [168, 169, 171, 172, 175, 176, 178], "06": [168, 170, 171, 174, 177], "137": [168, 171, 178], "07": [168, 170, 171, 174, 176, 177], "265": [168, 178], "988": [168, 170, 171], "028": [168, 171, 178], "991": [168, 171, 176], "10_000": [168, 171], "45": [168, 169, 171, 172, 174, 176, 177, 178], "314": [168, 169, 171], "655": [168, 171, 178], "657": 168, "Will": [168, 169, 170, 171, 175, 176, 177, 179, 180, 184], "658": [168, 171], "46": [168, 169, 171, 174, 175, 178, 180], "04": [168, 171, 174, 176, 177], "018": [168, 171, 178], "033": [168, 171, 176, 179], "subbatch": [168, 171, 179, 180], "192": [168, 171], "05": [168, 171, 176, 177], "443": 168, "786": 168, "116": [168, 171, 177], "863": [168, 171], "47": [168, 171, 175, 176, 178], "654": [168, 171, 178], "40": [168, 171, 174, 178], "986": [168, 169, 171], "conclud": [168, 169, 171, 174, 176, 177, 179, 180], "326": [168, 171, 174, 178], "554": [168, 171], "load_ext": [169, 170, 171, 174, 175, 176, 177, 178, 179, 180], "autoreload": [169, 170, 171, 174, 175, 176, 177, 178, 179, 180], "extens": 169, "reload": 169, "reload_ext": 169, "fakeadoni": [169, 170, 171, 174, 176, 177, 178, 179], "fakeapollo": [169, 170, 171, 172, 174, 176, 177, 178, 179], "example_crb": [169, 171], "56": [169, 171, 174, 178], "750": [169, 171, 174, 178], "31": [169, 170, 171, 174, 176, 177, 178], "63": [169, 171, 174, 176], "831": [169, 171, 176, 178], "992": [169, 170, 171, 178], "341": [169, 171, 178], "040": [169, 171, 176], "469": [169, 171], "291": [169, 171], "292": [169, 171, 176], "349": 169, "541": [169, 171, 177], "600": [169, 171, 172], "756": [169, 171, 174], "837": [169, 171, 176, 178, 179], "025": [169, 178], "171": [169, 171], "905": [169, 171, 178], "544": [169, 171, 178], "899": [169, 171], "32": [169, 170, 171, 174, 175, 177, 178], "624": [169, 171], "004": [169, 176, 178], "319": [169, 171], "569": [169, 171, 177, 178], "777": [169, 171], "840": [169, 171], "44": [169, 171, 172, 175, 176, 178], "048": [169, 171, 176], "098": [169, 170, 171, 178], "qubits_": [169, 171, 177], "_depth_1": [169, 171, 176], "186": [169, 176], "_depth_3": [169, 171, 176], "225": [169, 171], "_depth_7": [169, 171, 176], "267": [169, 171, 178], "_depth_15": [169, 171, 176], "_depth_31": [169, 171, 176], "315": [169, 171, 178], "364": [169, 171, 177], "_depth_63": [169, 171, 176], "416": [169, 171, 178], "417": [169, 171, 178, 180], "476": 169, "542": [169, 171, 177], "615": [169, 171], "616": [169, 172, 173, 178], "697": [169, 171, 173, 178], "789": [169, 171, 176, 178], "890": [169, 171, 176], "931": [169, 171, 178], "938": [169, 171], "945": [169, 171, 177], "952": [169, 171, 176], "959": [169, 171], "966": [169, 171, 178], "972": [169, 171, 172, 178], "979": [169, 178], "993": [169, 177], "006": [169, 178], "013": [169, 171], "946844466999168": 169, "9429197366921651": 169, "attr": [169, 170, 174, 175, 177, 179, 180], "session_timestamp": [169, 170, 174, 177, 179, 180], "20241217": 169, "115553": 169, "backend_configuration_nam": [169, 170, 174, 177, 179, 180], "iqmfakeapollobackend": [169, 170, 171, 172, 175, 179], "depth_1": 169, "time_circuit_gener": [169, 170, 174, 177, 179, 180], "541001081466675": 169, "time_submit": [169, 177, 179, 180], "0006990432739257812": 169, "time_retriev": [169, 177, 179, 180], "22491073608398438": 169, "all_job_metadata": [169, 177, 179, 180], "batch_job_1": [169, 177], "job_id": [169, 177], "8f305755": 169, "e038": 169, "4596": 169, "8617": 169, "d96ba3f42ca9": 169, "aer_simul": [169, 177], "statu": [169, 177], "circuits_in_batch": [169, 177], "depth_3": 169, "05647683143615723": 169, "0005230903625488281": 169, "2fe0b406": 169, "8977": 169, "4567": 169, "bba0": 169, "d4168f0883ed": 169, "depth_7": 169, "19257187843322754": 169, "0004839897155761719": 169, "8299918c": 169, "be26": 169, "40d5": 169, "8778": 169, "9ea4468a1df2": 169, "depth_15": 169, "05831408500671387": 169, "0004811286926269531": 169, "174640c4": 169, "9ff3": 169, "4ca3": 169, "9ffc": 169, "d6aa5be304f3": 169, "depth_31": 169, "1564040184020996": 169, "0006189346313476562": 169, "7bb739f2": 169, "31bc": 169, "40af": 169, "8dbf": 169, "1d60a9310391": 169, "depth_63": 169, "08135986328125": 169, "0004200935363769531": 169, "f414a2c1": 169, "75c8": 169, "4d5a": 169, "9e4b": 169, "ccce29903f5f": 169, "147684812545776": 169, "0005502700805664062": 169, "00039887428283691406": 169, "8832576a": 169, "6d6e": 169, "4abe": 169, "8cfa": 169, "5001e6bb98e": 169, "08015298843383789": 169, "00039315223693847656": 169, "ecc1bcea": 169, "ef4c": 169, "4f35": 169, "9284": 169, "ab49af0c5b9f": 169, "16936397552490234": 169, "0003960132598876953": 169, "5582c842": 169, "0f07": 169, "46b6": 169, "96be": 169, "2fb3925b19d9": 169, "20774221420288086": 169, "0004191398620605469": 169, "6423b02b": 169, "8417": 169, "4300": 169, "b7ac": 169, "84d59f87a51f": 169, "0635080337524414": 169, "0004169940948486328": 169, "0b324804": 169, "44fe": 169, "4c16": 169, "83eb": 169, "08e5cd67aa79": 169, "20784401893615723": 169, "0004961490631103516": 169, "6c633640": 169, "d4b4": 169, "47de": 169, "a46d": 169, "d3ae4c84d212": 169, "avg_gate_fidel": [169, 177], "0012220693932290373": 169, "001545469960991071": 169, "xxxxxx": 170, "example_clop": [170, 171], "198": [170, 171, 178], "199": [170, 171, 174], "828": [170, 171, 176], "829": [170, 171, 176, 178], "383": [170, 171, 176], "401": [170, 171, 178], "458": [170, 171], "010": [170, 171, 178], "428": [170, 177, 178], "029": [170, 171, 173], "482": [170, 171, 174, 178], "483": [170, 171], "502": [170, 171, 178], "113": [170, 171, 173], "843": [170, 171], "844": [170, 171, 178], "906": [170, 171, 176, 178], "527": [170, 171, 174, 178], "987": [170, 171, 174, 178], "050": [170, 171, 177, 178, 179], "636": [170, 171, 176, 178], "099": [170, 171], "166": [170, 171, 176, 178], "712": [170, 171, 178], "27": [170, 171, 172, 174, 176, 178], "328": [170, 171], "329": [170, 171], "404": [170, 171, 178], "766": [170, 171, 177, 178], "29": [170, 171, 174, 176, 178, 179, 182], "386": 170, "387": [170, 171, 176, 177], "406": [170, 178], "418": [170, 171, 180], "487": [170, 171, 174, 178], "037": 170, "33": [170, 171, 174, 177, 178], "488": [170, 171], "556": [170, 178], "240": [170, 171, 178], "916": [170, 171, 172, 176], "There": [170, 171], "all_times_parameter_assign": 170, "all_times_retriev": 170, "all_times_submit": 170, "assign_parameters_tot": 170, "clops_tim": 170, "counts_per_upd": 170, "job_meta_per_upd": 170, "num_paramet": 170, "operation_count": [170, 179, 180], "parallel_2q_lay": 170, "parameters_per_upd": 170, "time_count_lay": 170, "time_sort_batch": 170, "time_transpil": [170, 179, 180], "u_per_lay": 170, "user_retrieve_tot": 170, "user_submit_tot": 170, "9603960396039604": 170, "std": 170, "3960396039603959": 170, "285": [170, 171, 176], "970297029703": 170, "28": [170, 171, 174, 176, 178, 179], "718661075530303": 170, "40594059405941": 170, "915387814641763": 170, "9900990099009901": 170, "09900990099009897": 170, "18796": 170, "nan": [170, 175], "56388": 170, "iqm_provid": [171, 173, 174, 180], "877": [171, 173, 176], "127": [171, 176], "091": 171, "517": [171, 178], "508": [171, 174], "507": [171, 174, 178], "168": [171, 176], "188": [171, 176, 178], "51": [171, 172, 174, 175, 176, 178, 180], "721": [171, 174, 178], "754": [171, 178], "946": [171, 178], "357": [171, 177, 178], "920": [171, 178], "08": [171, 173, 174, 175, 176, 177, 178], "807": [171, 178], "227": 171, "932": [171, 176], "036": [171, 178], "052": [171, 178], "447": [171, 180], "448": [171, 177, 178], "707": 171, "967": 171, "282": [171, 176], "284": [171, 178], "576": [171, 178], "578": 171, "_depth_127": [171, 176], "324": [171, 174, 176, 178], "557": [171, 177], "567": 171, "590": [171, 174, 178], "602": [171, 178], "611": [171, 178], "626": [171, 174, 177], "example_irb_1q": [171, 176], "rgate": [171, 175, 176], "benchmark_irb_1q": [171, 176], "run_irb_1q": [171, 176], "021": [171, 179], "599": [171, 178], "wxecut": 171, "255": [171, 176], "694": 171, "047": [171, 178], "588": [171, 173], "52": [171, 172, 174, 175, 176, 177, 178, 180], "423": [171, 178], "54": [171, 174, 176, 178, 180], "58": [171, 172, 174, 176, 178], "054": 171, "348": [171, 176], "427": 171, "571": [171, 175, 178], "805": [171, 173, 178], "491": [171, 176], "445": [171, 173, 178], "219": 171, "37": [171, 174, 178, 180], "479": [171, 178], "550": [171, 178], "589": [171, 172, 177], "623": [171, 173, 175, 176, 178], "38": [171, 173, 174, 176, 178], "558": [171, 174], "218": 171, "631": [171, 176], "810": [171, 178], "871": [171, 175, 178], "340": [171, 178], "53": [171, 172, 174, 176, 178], "411": [171, 178], "453": [171, 178, 179], "876": [171, 173, 176, 178], "01": [171, 173, 174, 175, 176, 177, 178, 179], "249": 171, "904": [171, 178], "02": [171, 173, 174, 175, 177, 178], "909": 171, "430": [171, 178], "233": 171, "519": 171, "530": [171, 176, 178], "790": [171, 175, 176, 177], "187": 171, "154": 171, "635": [171, 176], "57": [171, 174, 176, 178], "783": [171, 178, 179], "793": [171, 178], "933": [171, 176], "049": [171, 176], "437": 171, "59": [171, 174, 176, 177, 178], "019": 171, "778": [171, 178], "334": [171, 174], "913": [171, 178], "008": [171, 176, 178], "095": [171, 176], "260": 171, "881": [171, 176, 178], "819": [171, 174, 176, 177], "153": 171, "883": [171, 176, 177, 178], "330": [171, 174, 177], "09": [171, 173, 174, 175, 176, 179], "579": 171, "620": [171, 178], "133": [171, 176, 177], "210": [171, 178, 179], "358": 171, "709": [171, 178], "49": [171, 173, 174, 175, 176, 178], "382": 171, "649": [171, 178, 180], "549": [171, 178], "55": [171, 173, 174, 177, 178], "471": [171, 178], "529": [171, 172, 177, 178], "679": [171, 176, 177, 178], "515": 171, "169": [171, 178], "083": [171, 173, 178], "161": 171, "779": [171, 175, 176, 178], "009": 171, "732": 171, "560": [171, 178], "943": 171, "071": 171, "182": 171, "976": 171, "553": [171, 176], "781": [171, 176, 179], "703": [171, 176], "290": [171, 176, 179], "639": [171, 172, 173], "823": [171, 174, 178], "179": [171, 178], "859": 171, "175": 171, "114": 171, "338": [171, 176, 178], "425": 171, "480": [171, 178], "821": [171, 174, 176, 178], "900": 171, "070": [171, 172, 178], "475": [171, 176], "000": [171, 176, 178], "120": [171, 176, 178], "250": 171, "775": 171, "259": 171, "598": [171, 177, 178], "178": 171, "352": [171, 178], "648": [171, 178], "412": [171, 174], "044": 171, "874": [171, 176, 178], "229": 171, "690": 171, "149": [171, 177], "011": [171, 174, 175], "861": [171, 176], "770": 171, "782": [171, 172], "955": 171, "059": 171, "455": 171, "888": 171, "689": [171, 178], "739": [171, 176, 178], "346": [171, 176, 178], "024": [171, 180], "850": [171, 178], "clifford_qubits_": [171, 176], "460": 171, "299": [171, 180], "570": [171, 178], "088": [171, 179], "377": 171, "379": 171, "698": 171, "700": [171, 173], "150": [171, 174, 177, 178], "_depth_255": [171, 176], "593": [171, 176, 178], "594": [171, 178], "388": [171, 178], "389": 171, "659": [171, 174], "110": 171, "118": [171, 176, 178], "704": [171, 174, 176], "708": [171, 174], "369": 171, "371": 171, "058": [171, 176, 178], "650": [171, 176], "490": [171, 173, 176, 178], "834": 171, "682": [171, 176], "450": [171, 177, 178], "189": [171, 178], "231": 171, "660": 171, "939": [171, 176, 178], "755": [171, 174], "759": [171, 178], "484": 171, "164": [171, 178], "970": [171, 177], "35": [171, 174, 178], "363": [171, 178], "760": [171, 178], "interleaved_qubits_": [171, 176], "109": [171, 184], "720": [171, 178], "726": 171, "498": 171, "504": [171, 172], "937": [171, 178], "320": 171, "270": 171, "702": [171, 177], "181": [171, 177], "185": 171, "683": [171, 174, 178], "687": [171, 178], "761": [171, 172, 174], "148": [171, 176, 178], "136": 171, "205": [171, 174, 176, 178], "468": [171, 178], "919": 171, "562": [171, 174], "370": [171, 178], "884": [171, 177], "172": 171, "857": [171, 178], "873": 171, "075": [171, 175, 178], "609": [171, 177, 178], "053": [171, 178], "983": [171, 177], "076": [171, 178], "342": [171, 177], "849": [171, 177, 178], "788": [171, 176], "817": 171, "result_irb_1q": [171, 176], "894": 171, "452": [171, 172, 178], "677": [171, 178], "772": [171, 178], "996": [171, 177], "108": [171, 178], "203": [171, 178], "538": [171, 176, 178], "969": 171, "080": 171, "208": [171, 173, 174, 176], "528": [171, 173, 178], "627": 171, "734": [171, 176, 178], "942": 171, "165": 171, "272": [171, 177], "580": 171, "675": [171, 176], "882": [171, 176], "977": 171, "106": [171, 178], "201": [171, 177, 178], "321": 171, "431": 171, "666": [171, 178], "776": 171, "887": [171, 177, 178], "985": 171, "206": [171, 176, 178], "318": [171, 178], "545": [171, 177], "653": [171, 177, 178], "989": [171, 175, 176, 178], "221": [171, 178], "335": [171, 178], "691": [171, 176], "809": [171, 178], "286": [171, 176], "398": [171, 174], "525": [171, 174], "780": [171, 176, 177, 179], "892": [171, 177], "147": [171, 177], "612": 171, "9979183032433894": 171, "144505494191281e": 171, "avg_gate_fidelity_clifford": [171, 176], "9958115103388792": 171, "17823609003449e": 171, "avg_gate_fidelity_n": 171, "9977661388474022": 171, "361722520237145e": 171, "997958281196824": 171, "00010535448906517988": 171, "996185705320257": 171, "354178172452585e": 171, "9979657095041371": 171, "9888883256457185e": 171, "9976806659229207": 171, "00010662386983132284": 171, "9958525686447902": 171, "031666798234228e": 171, "9977880366105548": 171, "816884091625878e": 171, "9977658880315101": 171, "00013395088590563366": 171, "996010014510697": 171, "00011462572813413851": 171, "9978720077390384": 171, "113374307582606e": 171, "9978184054322468": 171, "00011216064141600791": 171, "9957406711482065": 171, "837832701601442e": 171, "9977283579457101": 171, "246845828393341e": 171, "example_irb_2q": [171, 176], "benchmark_irb_2q": [171, 176], "run_irb_2q": [171, 176], "304": [171, 178], "543": 171, "034": [171, 176], "129": [171, 178, 184], "729": 171, "454": 171, "930": [171, 174, 178], "974": [171, 178], "243": [171, 178, 180], "081": [171, 178], "139": [171, 178], "160": 171, "277": [171, 178], "514": [171, 174], "728": 171, "273": [171, 178, 180], "824": [171, 174, 178], "951": [171, 176, 178], "131": [171, 176, 178], "585": [171, 172, 174, 178], "633": [171, 178], "568": [171, 178], "392": [171, 178], "835": 171, "138": [171, 178], "572": [171, 174, 178], "097": [171, 177], "897": [171, 178], "039": [171, 176, 178], "405": [171, 174], "407": 171, "439": [171, 174], "555": [171, 178], "003": [171, 175, 176], "668": [171, 180], "656": [171, 178], "752": [171, 176, 178], "180": [171, 177], "608": 171, "743": [171, 173, 178], "564": [171, 172, 178], "730": 171, "403": 171, "826": [171, 178], "337": [171, 178], "134": [171, 177], "303": [171, 174], "676": [171, 177], "093": 171, "800": [171, 175, 184], "926": [171, 178], "394": [171, 176], "860": [171, 176], "269": [171, 180], "368": 171, "575": 171, "846": 171, "995": [171, 175, 178], "477": [171, 174], "016": [171, 178], "078": 171, "158": [171, 176, 178], "614": 171, "395": [171, 174, 176, 178], "035": 171, "738": 171, "213": [171, 178], "419": [171, 178], "815": [171, 178], "838": [171, 178], "478": [171, 178], "574": 171, "144": 171, "744": [171, 176, 178], "279": 171, "499": [171, 174], "803": [171, 175], "261": 171, "796": 171, "713": 171, "073": 171, "271": [171, 177, 178], "547": 171, "852": [171, 174], "177": [171, 173, 174, 177, 178], "736": [171, 178], "196": [171, 176, 178, 179], "901": 171, "652": [171, 176, 177], "032": [171, 178, 179], "912": [171, 180], "896": 171, "007": [171, 176], "152": [171, 177, 178], "306": 171, "060": 171, "062": [171, 178], "610": 171, "084": 171, "456": [171, 177], "026": [171, 173], "117": [171, 177], "141": [171, 178], "742": [171, 178], "278": [171, 178], "714": [171, 174], "079": [171, 177, 178], "617": [171, 178], "190": [171, 180], "678": [171, 177, 178], "432": [171, 176], "228": [171, 178], "result_irb_2q": [171, 176], "481": 171, "813": 171, "971": 171, "130": 171, "209": [171, 173, 178], "288": 171, "510": [171, 178], "629": 171, "685": [171, 176, 178], "764": [171, 176, 178], "907": [171, 178], "067": [171, 172, 173, 176], "353": [171, 178], "512": [171, 174, 177], "591": [171, 178], "686": [171, 178], "797": 171, "927": 171, "162": [171, 178], "289": [171, 176, 178], "606": [171, 177], "928": [171, 178], "176": [171, 172, 177, 178], "333": [171, 176, 178], "492": [171, 174, 176], "example_irb_iswap": [171, 176], "iswapg": [171, 176, 177, 184], "benchmark_irb_iswap": [171, 176], "run_irb_iswap": [171, 176], "253": [171, 178], "156": [171, 178], "077": 171, "539": [171, 178], "923": 171, "820": [171, 176, 178], "751": [171, 176, 178], "735": 171, "068": 171, "918": 171, "325": [171, 178], "234": [171, 178], "531": 171, "688": [171, 176, 179], "811": 171, "163": [171, 176], "226": [171, 178], "322": 171, "074": [171, 172, 176, 178], "263": 171, "669": [171, 178], "641": 171, "673": 171, "833": [171, 178], "002": [171, 175, 176, 178], "327": [171, 178], "577": [171, 176], "015": 171, "965": 171, "045": 171, "827": [171, 178], "296": [171, 177, 178], "607": [171, 176], "911": 171, "313": 171, "664": [171, 176], "532": 171, "451": 171, "262": [171, 173], "982": [171, 176, 177], "595": [171, 176, 178], "336": [171, 178], "result_irb_iswap": [171, 176], "953": [171, 178], "191": [171, 175], "223": [171, 176, 178], "287": [171, 176], "355": [171, 176, 178], "462": [171, 178], "516": [171, 174, 178], "621": [171, 175], "667": [171, 178], "701": 171, "747": [171, 174], "795": 171, "041": [171, 178], "mirror_rb": [171, 177, 184], "example_mrb": [171, 177, 184], "benchmark_mrb": [171, 177], "run_mrb": [171, 177], "367": [171, 178], "10x5": [171, 177], "64": [171, 174, 177], "128": [171, 177, 178], "622": [171, 178], "865": [171, 172, 178, 180], "305": 171, "671": [171, 176], "055": 171, "485": [171, 176], "692": [171, 176], "391": [171, 175, 178], "584": [171, 174], "230": 171, "449": [171, 177, 178], "242": 171, "472": [171, 178], "509": [171, 174, 176], "022": [171, 176], "436": [171, 176, 178], "628": 171, "980": [171, 178], "603": [171, 178], "808": [171, 178], "051": 171, "293": [171, 178], "769": [171, 172, 178], "917": [171, 178], "157": [171, 176], "268": 171, "858": [171, 178], "785": [171, 176], "252": [171, 179], "486": 171, "898": [171, 178], "107": [171, 176], "540": [171, 178], "244": [171, 177], "661": 171, "885": [171, 176, 178], "765": [171, 176, 178], "193": [171, 178], "465": 171, "672": 171, "910": [171, 178], "246": 171, "643": [171, 178], "104": [171, 174, 178], "438": [171, 172, 173, 178], "613": 171, "470": 171, "581": 171, "693": [171, 178], "266": 171, "662": 171, "870": 171, "506": [171, 178], "207": [171, 176], "638": [171, 178], "245": 171, "872": 171, "046": 171, "963": [171, 178], "224": 171, "426": [171, 178], "830": [171, 178], "308": 171, "975": 171, "878": 171, "275": [171, 178], "251": [171, 178], "440": [171, 176], "964": [171, 174, 176], "922": [171, 178], "309": 171, "981": [171, 176], "583": [171, 176], "998": [171, 175], "173": [171, 176], "444": 171, "891": 171, "217": [171, 179], "409": 171, "457": 171, "311": 171, "446": [171, 178], "695": 171, "924": [171, 178], "941": 171, "812": 171, "816": [171, 174], "625": [171, 174, 178, 179], "727": [171, 178], "184": [171, 177], "012": [171, 174], "090": [171, 176, 178], "372": 171, "642": [171, 172, 173], "202": [171, 174], "489": 171, "696": [171, 178], "949": [171, 178], "523": [171, 177], "914": [171, 178], "238": 171, "839": 171, "596": [171, 176, 177, 178], "684": [171, 178], "753": [171, 174], "535": [171, 178], "415": 171, "354": 171, "345": 171, "604": 171, "968": [171, 172, 176], "768": [171, 178], "380": [171, 176], "220": 171, "632": [171, 178], "031": 171, "283": [171, 179], "773": [171, 176], "142": [171, 178], "867": [171, 177, 178], "123": 171, "381": [171, 176], "767": [171, 177], "072": [171, 172, 178], "551": [171, 178], "893": 171, "741": 171, "126": [171, 172], "526": 171, "958": 171, "845": [171, 174, 176], "222": 171, "239": 171, "065": [171, 173, 176], "903": [171, 178], "869": [171, 178], "552": 171, "757": [171, 179], "832": 171, "280": [171, 173], "915": [171, 176], "043": 171, "125": [171, 174, 177, 178], "984": [171, 178], "618": 171, "344": 171, "663": 171, "216": [171, 176], "717": [171, 176, 178], "258": [171, 178], "421": [171, 178], "647": 171, "420": [171, 178], "410": [171, 178], "390": 171, "566": [171, 174, 176], "718": 171, "645": [171, 178], "587": [171, 174], "204": [171, 176, 179], "281": [171, 178], "397": [171, 172, 178], "017": [171, 174, 178], "592": [171, 174, 178], "122": 171, "362": 171, "862": [171, 178], "082": [171, 179], "784": [171, 176, 178], "350": [171, 174, 178], "339": [171, 176], "257": [171, 174], "619": 171, "822": 171, "886": 171, "063": [171, 178], "836": [171, 176, 178], "111": [171, 178, 179], "573": [171, 178], "424": [171, 174, 178], "855": 171, "085": 171, "298": 171, "644": 171, "902": [171, 178], "461": [171, 174], "563": [171, 178], "522": [171, 176, 177], "723": [171, 178], "957": [171, 178], "791": [171, 177, 178], "908": 171, "195": [171, 174], "170": [171, 178, 180], "505": [171, 174, 178], "294": [171, 176], "317": [171, 178], "802": [171, 178], "089": 171, "360": [171, 178, 180], "745": [171, 176], "559": [171, 172, 173, 174, 178], "399": [171, 178], "159": [171, 174, 178], "247": 171, "103": [171, 176, 178], "119": [171, 177], "994": [171, 175, 178], "496": [171, 174, 176], "057": [171, 178], "001": [171, 175, 178], "848": 171, "435": 171, "101": 171, "725": [171, 178], "094": [171, 176, 178], "197": [171, 174, 176], "023": 171, "818": [171, 176], "151": [171, 174, 178], "014": 171, "473": [171, 174, 178], "854": 171, "680": [171, 178], "442": [171, 176], "841": 171, "724": 171, "374": [171, 178], "533": 171, "605": [171, 177], "086": [171, 178], "211": 171, "792": [171, 178], "302": [171, 178], "921": 171, "719": [171, 174], "548": 171, "895": 171, "235": [171, 173, 178], "997": 171, "534": [171, 178], "375": [171, 177, 178], "_depth_2": [171, 177], "_depth_4": [171, 177], "763": 171, "_depth_8": [171, 177], "_depth_16": [171, 177], "_depth_32": [171, 177], "_depth_64": [171, 177], "_depth_128": [171, 177], "_depth_256": [171, 177], "_depth_512": [171, 177], "681": [171, 176], "295": [171, 178], "674": [171, 178], "result_mrb": [171, 177], "061": [171, 178], "597": [171, 177, 178], "145": 171, "1600x1200": 171, "ax": 171, "all_qubit_layout": [171, 177], "key_mrb_plot": [171, 177], "example_qv": [171, 179, 180, 184], "run0_qv": [171, 179, 180], "637": [171, 180], "264": [171, 177, 178], "result0_qv": [171, 179, 180], "722": 171, "run1_qv": [171, 179, 180], "result1_qv": [171, 179, 180], "241": [171, 178], "466": 171, "422": [171, 177, 178], "948": [171, 177], "733": [171, 178], "630": 171, "798": [171, 173, 174, 178], "493": [171, 178], "6353": 171, "19060": 171, "minimal_ghz": [171, 172, 173], "237": 171, "183": [171, 172, 178], "example_qscor": [171, 178], "880": [171, 178], "4721": 171, "1866": 171, "301": [171, 177, 178], "5760": 171, "3202": 171, "5666": 171, "6277": 171, "5362": 171, "1528": 171, "4720649335834727": 171, "264883828589849": 171, "is_succes": [171, 178, 179, 180], "qscore_result": [171, 178], "5759620786516855": 171, "13942395641806907": 171, "5666397249858852": 171, "09938021346738757": 171, "536231071484655": 171, "13823427614487907": 171, "multipartit": [172, 173], "One": [172, 173, 179, 180], "larger": [172, 173, 175], "leibfri": [172, 173], "et": [172, 173], "al": [172, 173], "six": 172, "atom": 172, "schr\u00f6dinger": 172, "cat": 172, "natur": [172, 173], "2005": [172, 173], "offer": [172, 173, 183], "verif": [172, 182, 184], "superconduct": 172, "phy": [172, 173, 184], "commun": [172, 173, 183], "095004": [172, 173], "elben": [172, 173], "statist": 172, "toolbox": 172, "probe": 172, "bodi": 172, "rev": [172, 173, 184], "99": [172, 173], "052323": [172, 173], "ciruit": [172, 173], "hadamrd": 172, "addit": [172, 173, 175, 183, 184], "log_depth": [172, 173], "cruz": [172, 173], "yield": [172, 173], "lower": [172, 173, 175], "hous": 172, "reli": [172, 173], "dai": 172, "thu": [172, 173], "comparison": [172, 173], "gme": [172, 173], "prefer": [172, 173, 183], "control": [172, 173, 183], "whenev": [172, 173], "mitgat": [172, 173], "arang": 172, "think": [172, 173], "help": [172, 173], "your_token": [172, 173, 184], "mark": [172, 173, 183], "w_": [172, 173], "ij": [172, 173, 175], "mathcal": [172, 173], "grid": [172, 173], "automat": [172, 173, 184], "rerun": [172, 173], "until": [172, 173], "nice": [172, 173], "utils_plot": [172, 173], "plot_layout_fidelity_graph": [172, 173], "464": [172, 178], "646": [172, 177], "962": 172, "212": 172, "fidelitii": [172, 173], "filter": [172, 173], "descript": [172, 173, 183], "l0": [172, 173], "l1": [172, 173], "enumer": [172, 173, 174, 175], "tailor": 173, "novel": 173, "unknown": [173, 174, 180], "unknown_opt": [173, 174, 180], "236": [173, 178], "706": [173, 176], "042": [173, 174], "8554605765990686": 173, "fidelity_rem": 173, "8889039740862802": 173, "xxxxxxxxxxxxxxxx": 174, "get_iqm_backend": 174, "rcparam": 174, "dpi": 174, "300": [174, 175, 178], "graph_stat": 174, "40_000": 174, "benchmark_graphst": 174, "run_graphst": 174, "748": 174, "749": 174, "pedrofigueroaromero": [174, 180], "anaconda3": [174, 180], "bench": 174, "396": [174, 176, 178], "402": [174, 178], "332": [174, 178], "020": 174, "155": [174, 178], "705": 174, "711": [174, 178], "result_graphst": 174, "fetch": 174, "ok": 174, "font_manag": 174, "findfont": 174, "font": 174, "famili": 174, "stixgener": 174, "fall": 174, "back": 174, "dejavu": 174, "san": 174, "stixnonunicod": 174, "494": [174, 178], "stixsizeonesym": 174, "stixsizetwosym": 174, "stixsizethreesym": 174, "stixsizefoursym": 174, "stixsizefivesym": 174, "cmsy10": 174, "cmr10": 174, "cmtt10": 174, "518": 174, "cmmi10": 174, "521": 174, "cmb10": 174, "524": 174, "cmss10": 174, "cmex10": 174, "537": 174, "mono": 174, "351": 174, "percentag": 174, "idx": 174, "2f": 174, "max_neg": 174, "95": 174, "70": 174, "84": 174, "77": 174, "86": 174, "60": 174, "87": 174, "81": 174, "74": 174, "79": 174, "73": 174, "66": 174, "65": 174, "71": 174, "61": [174, 175], "75": [174, 179], "83": 174, "69": 174, "94": 174, "76": 174, "82": 174, "68": 174, "80": 174, "91": 174, "dict_kei": [174, 175], "max_negativities_iqm_backend_20250325": 174, "160833": 174, "max_negativities_graph_20250325": 174, "lowest": 174, "highest": 174, "resconstruct": 174, "matric": [174, 175], "observation_dict": 174, "ob": 174, "argsort": 174, "lowest_negativity_pair": 174, "highest_negativity_pair": 174, "all_projected_qubit": 174, "all_pair_group": 174, "all_neighbor_group": 174, "all_tomography_st": 174, "all_neg": 174, "bootstrapped_averag": 174, "2e": 174, "adjust": 174, "06e": 174, "3206842864916416": 174, "31010765308352356": 174, "93e": 174, "3542183495445777": 174, "3539253716950112": 174, "53e": [174, 175], "3888948376922817": 174, "38736774049571426": 174, "40e": 174, "43361445043616353": 174, "4196633945881397": 174, "41e": 174, "43662497937638245": 174, "42249850678510703": 174, "90e": 174, "37169789059353975": 174, "36979367489991855": 174, "54e": 174, "38686144121566973": 174, "379324805728086": 174, "79e": 174, "39594160382229693": 174, "3931510385413373": 174, "97e": 174, "4092514317610637": 174, "4086540198375821": 174, "50e": 174, "36885658775672914": 174, "35382192582939426": 174, "08e": 174, "33451241682265326": 174, "32543228989306544": 174, "36671508133810615": 174, "36709383454659233": 174, "77e": 174, "32608570801001885": 174, "3213134253456277": 174, "29e": 174, "3566393931240753": 174, "3543493221398908": 174, "81e": 174, "3767486702923495": 174, "35860149933340935": 174, "3341624640356816": 174, "33262962066733953": 174, "00e": 174, "3486521211655147": 174, "3186675847362068": 174, "71e": 174, "39469814069723197": 174, "39099102345993036": 174, "13e": 174, "32804598413012276": 174, "3219124989220279": 174, "24e": 174, "3668085274286376": 174, "36257096650435117": 174, "62e": 174, "3732632016003694": 174, "35702785889177086": 174, "91e": 174, "3465755742920084": 174, "3416698385772142": 174, "17e": 174, "32654059296341725": 174, "30487999669484334": 174, "35e": 174, "39553971118808906": 174, "38203311102738585": 174, "3803202427020316": 174, "37715389665511634": 174, "76e": 174, "37343498488547655": 174, "35586222167388737": 174, "60e": 174, "41534546787652044": 174, "3993565114966017": 174, "45e": 174, "4134082416427767": 174, "398899780892523": 174, "55e": 174, "3810499300589416": 174, "3755024431288029": 174, "34e": 174, "37452627891460544": 174, "3671820250131137": 174, "q_0": [174, 180], "\u03c0": [174, 175, 180], "q_1": [174, 180], "q_2": [174, 180], "q_3": [174, 180], "q_4": [174, 180], "q_5": [174, 180], "q_6": [174, 180], "q_7": 174, "q_8": 174, "q_9": 174, "q_10": 174, "q_11": 174, "q_12": 174, "q_13": 174, "q_14": 174, "q_15": 174, "q_16": 174, "q_17": 174, "q_18": 174, "q_19": 174, "tomo_qubit": 174, "introduct": 175, "what": [175, 176], "background": 175, "journal": 175, "prxquantum": 175, "1103": 175, "010325": [175, 184], "compressive_gst": 175, "gstconfigur": 175, "compressivegst": 175, "iqmfakeadoni": 175, "iqmfakeapollo": 175, "gate_set": 175, "1qxyi": 175, "2qxycz": 175, "2qxycz_extend": 175, "3qxycz": 175, "krau": 175, "k_i": 175, "trigger": 175, "diamond": 175, "low": 175, "benefit": 175, "less": [175, 177], "captur": 175, "domin": 175, "sourc": [175, 182, 183], "bootstrap_sampl": 175, "trustworthi": 175, "veri": 175, "consum": 175, "minimal_1q_gst": 175, "minimal_2q_gst": 175, "Be": 175, "extra": 175, "20it": 175, "converg": 175, "criterion": 175, "uncertaintit": 175, "restult": 175, "idl": 175, "qb1": 175, "99693": 175, "00703": 175, "unitar": 175, "98781": 175, "rx": 175, "99918": 175, "0013": 175, "99674": 175, "ry": 175, "99509": 175, "01332": 175, "98074": 175, "tvd": 175, "00698": 175, "03296": 175, "povm": 175, "dist": 175, "00601": 175, "04366": 175, "results_layout_": 175, "raw_kraus_oper": 175, "raw_gat": 175, "raw_povm": 175, "raw_stat": 175, "gauge_opt_g": 175, "gauge_opt_gates_pauli_basi": 175, "gauge_opt_povm": 175, "gauge_opt_st": 175, "main_mgst_tim": 175, "gauge_optimization_tim": 175, "choi_ev": 175, "full_metr": 175, "save": 175, "raw": 175, "gaug": 175, "frame": 175, "3d": 175, "raw_result": 175, "array_str": 175, "precis": 175, "suppress_smal": 175, "002j": 175, "005": [175, 176, 178], "003j": 175, "004j": 175, "These": 175, "diplai": 175, "disc": 175, "superoper": 175, "represent": 175, "sinlg": 175, "g_": 175, "p_i": 175, "p_j": 175, "layout_": 175, "_gate_metr": 175, "_choi_eigenvalu": 175, "_other_metr": 175, "_process_matrix_0": 175, "_process_matrix_1": 175, "_process_matrix_2": 175, "_spam_matrices_r": 175, "_spam_matrices_imag": 175, "altern": 175, "ourselv": 175, "xyi": 175, "instruct": 175, "gate_list": 175, "1e": 175, "indentif": 175, "gate_label": 175, "custom_1q_gst": 175, "verbos": 175, "806": [175, 179], "408": [175, 178], "42e": 175, "008j": 175, "001j": 175, "064": 176, "121": [176, 178], "146": 176, "954": [176, 178], "376": [176, 178], "9975073376613797": 176, "9957157328789242": 176, "9976959612386156": 176, "9957310522299055": 176, "752861001879659e": 176, "028839025109517e": 176, "64196778583225e": 176, "243656712565855e": 176, "know": 176, "640": [176, 178], "842": [176, 177], "740": 176, "950": 176, "9798030906041997": 176, "9431232937255942": 176, "9840858225184934": 176, "945382422883015": 176, "174": 176, "038": 176, "215": [176, 177], "441": 176, "546": [176, 177], "9344679810705316": 176, "9463377694591251": 176, "9267928870925659": 176, "943379008472002": 176, "947": 177, "365": [177, 178], "940": 177, "944": [177, 178], "331": [177, 178], "096": 177, "889": 177, "651": [177, 178, 180], "343": 177, "214": 177, "attr_kei": [177, 179, 180], "depth_2": 177, "14302134513855": 177, "007565975189208984": 177, "06883907318115234": 177, "f8d9d789": 177, "0e9a": 177, "4086": 177, "ab36": 177, "685064a7b66": 177, "depth_4": 177, "0004930496215820312": 177, "0007040500640869141": 177, "87e367b7": 177, "c3ae": 177, "4457": 177, "8a2d": 177, "7b169c528033": 177, "depth_8": 177, "0004889965057373047": 177, "0005979537963867188": 177, "d84330c9": 177, "101f": 177, "40ff": 177, "bea8": 177, "f5e4c0b41527": 177, "depth_16": 177, "0004627704620361328": 177, "0006148815155029297": 177, "1f58b4a0": 177, "fb16": 177, "4d12": 177, "a9e8": 177, "c9263da52418": 177, "depth_32": 177, "00047278404235839844": 177, "0005419254302978516": 177, "4e43834b": 177, "5694": 177, "4c6d": 177, "8a83": 177, "796913d67e40": 177, "depth_64": 177, "000469207763671875": 177, "0005609989166259766": 177, "036e1dd": 177, "ca95": 177, "42a1": 177, "ab68": 177, "30a243f6b4ba": 177, "depth_128": 177, "0004668235778808594": 177, "0005328655242919922": 177, "13a59ca8": 177, "2ab0": 177, "4de8": 177, "a643": 177, "5b3f318f03d4": 177, "depth_256": 177, "0004749298095703125": 177, "e673defd": 177, "039c": 177, "4c37": 177, "9ef3": 177, "d4734436f39a": 177, "depth_512": 177, "0005099773406982422": 177, "0005548000335693359": 177, "d83ac439": 177, "2929": 177, "4d78": 177, "b52b": 177, "f297873c3e44": 177, "9710221314803044": 177, "001462493086363885": 177, "9473471466489307": 177, "00285118172031131": 177, "xxxxxxxxxxxxxx": 178, "put": 178, "run0_qscor": 178, "801": 178, "433": 178, "027": 178, "194": 178, "167": 178, "851": 178, "929": 178, "978": 178, "115": 178, "463": 178, "495": 178, "715": 178, "378": 178, "056": 178, "135": 178, "511": 178, "434": 178, "586": 178, "274": 178, "716": 178, "467": 178, "847": 178, "474": 178, "105": 178, "503": 178, "634": 178, "934": 178, "699": 178, "087": 178, "232": 178, "030": 178, "092": 178, "124": 178, "601": 178, "956": 178, "361": 178, "result0_qscor": 178, "4370": 178, "4700": 178, "6695": 178, "3692": 178, "5902": 178, "3404": 178, "5068": 178, "5085": 178, "4374": 178, "8942": 178, "43697610073325965": 178, "09963324394097106": 178, "6694825328517715": 178, "07553199096996285": 178, "5901951757699432": 178, "04806723107119834": 178, "5067731707198324": 178, "03884606517763287": 178, "4373922810576933": 178, "034249084355823": 178, "rem_quasidistribut": [179, 180], "time_batch": [179, 180], "cumulative_average_heavy_output_prob": [179, 180], "cumulative_stddev_heavy_output_prob": [179, 180], "rem_cumulative_average_heavy_output_prob": [179, 180], "rem_cumulative_stddev_heavy_output_prob": [179, 180], "rem_heavy_output_prob": [179, 180], "60546875": 179, "71875": 179, "578125": 179, "74609375": 179, "6328125": 179, "546875": 179, "56640625": 179, "76953125": 179, "75390625": 179, "67578125": 179, "6171875": 179, "55078125": 179, "64453125": 179, "6875": 179, "7109375": 179, "82421875": 179, "76171875": 179, "6484375": 179, "6015625": 179, "73828125": 179, "63671875": 179, "69140625": 179, "61328125": 179, "734375": 179, "57421875": 179, "6953125": 179, "55859375": 179, "69921875": 179, "609375": 179, "671875": 179, "77734375": 179, "6796875": 179, "62890625": 179, "6640625": 179, "66796875": 179, "62109375": 179, "703125": 179, "68359375": 179, "58984375": 179, "71484375": 179, "59375": 179, "79296875": 179, "66015625": 179, "65234375": 179, "59765625": 179, "65625": 179, "84765625": 179, "5859375": 179, "5625": 179, "72265625": 179, "640625": 179, "58203125": 179, "54296875": 179, "8203125": 179, "78515625": 179, "7265625": 179, "53515625": 179, "5703125": 179, "5546875": 179, "5390625": 179, "828125": 179, "80859375": 179, "765625": 179, "81640625": 179, "5234375": 179, "73046875": 179, "87890625": 179, "7890625": 179, "7734375": 179, "7421875": 179, "70703125": 179, "50390625": 179, "7578125": 179, "52734375": 179, "78125": 179, "8125": 179, "average_heavy_output_prob": [179, 180], "649203125": 179, "021341903733745705": 179, "672703125": 179, "020984452845629994": 179, "rem_average_heavy_output_prob": [179, 180], "67954478782619": 179, "020869291754367154": 179, "rem_is_succes": [179, 180], "rem_qv_result": [179, 180], "710149650958595": 179, "020289757228807877": 179, "vanilla_4_qubits_": [179, 180], "vanilla_rem_4_qubits_": 179, "Or": [179, 180], "onc": [179, 180, 184], "799": 180, "e48420cb": 180, "30dc": 180, "4274": 180, "9d7d": 180, "e5fffa68f73a": 180, "7404ae11": 180, "823a": 180, "4e66": 180, "b2c4": 180, "41361cf10c69": 180, "untranspiled_circuit": 180, "mea": 180, "48526": 180, "79781": 180, "58665": 180, "3705": 180, "1471": 180, "1775": 180, "1521": 180, "73475": 180, "1344": 180, "30103": 180, "7711": 180, "3108": 180, "6909": 180, "6665": 180, "65249": 180, "8837": 180, "24328": 180, "3169": 180, "6809": 180, "71478125": 180, "020192524094250205": 180, "7261292473074281": 180, "019943197512544274": 180, "vanilla_3_qubits_": 180, "vanilla_rem_3_qubits_": 180, "collect": 181, "demonstr": 181, "rest": 181, "summari": [181, 182], "releas": 182, "date": [182, 183], "finland": 182, "tool": [182, 184], "changelog": 182, "search": 182, "januari": 183, "2004": 183, "AND": 183, "FOR": 183, "reproduct": 183, "shall": 183, "licensor": 183, "owner": 183, "entiti": 183, "author": 183, "grant": 183, "legal": 183, "power": 183, "direct": 183, "indirect": 183, "caus": 183, "contract": 183, "ownership": 183, "fifti": 183, "percent": 183, "outstand": 183, "iii": 183, "benefici": 183, "exercis": 183, "mechan": 183, "transform": 183, "translat": 183, "convers": 183, "media": 183, "authorship": 183, "attach": 183, "appendix": 183, "editori": 183, "revis": 183, "elabor": 183, "whole": 183, "remain": 183, "link": 183, "bind": 183, "interfac": 183, "thereof": 183, "contribut": 183, "intention": 183, "inclus": 183, "behalf": 183, "electron": 183, "verbal": 183, "mail": 183, "track": 183, "discuss": 183, "exclud": 183, "conspicu": 183, "Not": 183, "contributor": 183, "whom": 183, "been": 183, "receiv": 183, "incorpor": 183, "subject": 183, "herebi": 183, "perpetu": 183, "worldwid": 183, "charg": 183, "royalti": 183, "free": 183, "irrevoc": 183, "reproduc": 183, "publicli": 183, "sublicens": 183, "patent": 183, "sell": 183, "transfer": 183, "claim": 183, "necessarili": 183, "infring": 183, "alon": 183, "institut": 183, "litig": 183, "counterclaim": 183, "lawsuit": 183, "alleg": 183, "contributori": 183, "termin": [183, 184], "redistribut": 183, "medium": 183, "meet": 183, "recipi": 183, "carri": 183, "promin": 183, "retain": 183, "trademark": 183, "pertain": 183, "readabl": 183, "along": 183, "wherev": 183, "third": 183, "parti": 183, "appear": 183, "content": 183, "alongsid": 183, "addendum": 183, "constru": 183, "compli": 183, "explicitli": 183, "notwithstand": 183, "noth": 183, "herein": 183, "supersed": 183, "agreement": 183, "regard": 183, "trade": 183, "servic": [183, 184], "reason": 183, "customari": 183, "describ": 183, "disclaim": 183, "merchant": 183, "particular": 183, "respons": 183, "appropri": 183, "risk": 183, "liabil": 183, "event": 183, "tort": 183, "neglig": 183, "deliber": [183, 184], "grossli": 183, "liabl": 183, "damag": 183, "special": 183, "incident": 183, "consequenti": 183, "aris": 183, "inabl": 183, "loss": 183, "goodwil": 183, "stoppag": 183, "failur": 183, "malfunct": 183, "commerci": 183, "even": 183, "advis": 183, "fee": 183, "indemn": 183, "oblig": 183, "indemnifi": 183, "defend": 183, "hold": 183, "harmless": 183, "incur": 183, "assert": 183, "boilerpl": 183, "enclos": 183, "bracket": 183, "comment": 183, "syntax": 183, "easier": 183, "archiv": 183, "repositori": [183, 184], "licenc": 183, "src": 183, "raphael": 183, "brieger": 183, "ingo": 183, "roth": 183, "martin": 183, "kliesch": 183, "comprehens": 184, "modular": 184, "easi": 184, "042311": 184, "lett": 184, "080505": 184, "prx": 184, "2023": 184, "150502": 184, "2022": 184, "holist": 184, "032328": 184, "0712": 184, "0921": 184, "2007": 184, "adv": 184, "technol": 184, "2100061": 184, "ieee": 184, "tran": 184, "eng": 184, "legaci": 184, "wrap": 184, "benchmarkexperi": 184, "handl": 184, "uv": 184, "highli": 184, "practic": 184, "With": 184, "machin": 184, "venv": 184, "read": 184, "prompt": 184, "suppli": 184, "txt": 184, "lock": 184, "directli": 184, "repo": 184, "pypi": 184, "lint": 184, "cicd": 184, "clone": 184, "directori": 184, "edit": 184, "docbuild": 184, "pyproject": 184, "toml": 184, "commit": 184, "upgrad": 184, "transit": 184, "cloud": 184, "prem": 184, "platform": 184, "authent": 184, "example_irb": 184, "example_experi": 184, "setup": 184, "weekli": 184, "daili": 184, "gitlab": 184, "scheduled_experi": 184}, "objects": {"iqm": [[1, 0, 0, "-", "benchmarks"]], "iqm.benchmarks": [[2, 0, 0, "-", "benchmark"], [5, 0, 0, "-", "benchmark_definition"], [15, 0, 0, "-", "circuit_containers"], [19, 0, 0, "-", "entanglement"], [47, 0, 0, "-", "logging_config"], [48, 0, 0, "-", "optimization"], [61, 0, 0, "-", "quantum_volume"], [80, 0, 0, "-", "randomized_benchmarking"], [124, 0, 0, "-", "readout_mitigation"], [128, 0, 0, "-", "utils"], [153, 0, 0, "-", "utils_plots"], [157, 0, 0, "-", "utils_shadows"]], "iqm.benchmarks.benchmark": [[3, 1, 1, "", "BenchmarkBase"], [4, 1, 1, "", "BenchmarkConfigurationBase"]], "iqm.benchmarks.benchmark.BenchmarkBase": [[3, 2, 1, "", "check_requirements"], [3, 2, 1, "", "execute_full_benchmark"], [3, 2, 1, "", "generate_requirements"], [3, 2, 1, "", "name"]], "iqm.benchmarks.benchmark.BenchmarkConfigurationBase": [[4, 3, 1, "", "benchmark"], [4, 3, 1, "", "calset_id"], [4, 3, 1, "", "max_circuits_per_batch"], [4, 3, 1, "", "max_gates_per_batch"], [4, 3, 1, "", "model_computed_fields"], [4, 3, 1, "", "model_config"], [4, 3, 1, "", "model_fields"], [4, 3, 1, "", "physical_layout"], [4, 3, 1, "", "routing_method"], [4, 3, 1, "", "shots"], [4, 3, 1, "", "use_dd"]], "iqm.benchmarks.benchmark_definition": [[6, 1, 1, "", "Benchmark"], [7, 1, 1, "", "BenchmarkAnalysisResult"], [8, 1, 1, "", "BenchmarkObservation"], [9, 1, 1, "", "BenchmarkObservationIdentifier"], [10, 1, 1, "", "BenchmarkRunResult"], [11, 5, 1, "", "add_counts_to_dataset"], [12, 5, 1, "", "default_analysis_function"], [13, 5, 1, "", "merge_datasets_dac"], [14, 5, 1, "", "show_figure"]], "iqm.benchmarks.benchmark_definition.Benchmark": [[6, 2, 1, "", "analysis_function"], [6, 2, 1, "", "analyze"], [6, 2, 1, "", "execute"], [6, 2, 1, "", "name"], [6, 2, 1, "", "run"]], "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult": [[7, 2, 1, "", "from_run_result"], [7, 2, 1, "", "plot"], [7, 2, 1, "", "plot_all"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservation": [[8, 3, 1, "", "identifier"], [8, 3, 1, "", "name"], [8, 3, 1, "", "uncertainty"], [8, 3, 1, "", "value"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier": [[9, 3, 1, "", "qubit_indices"], [9, 4, 1, "", "string_identifier"]], "iqm.benchmarks.circuit_containers": [[16, 1, 1, "", "BenchmarkCircuit"], [17, 1, 1, "", "CircuitGroup"], [18, 1, 1, "", "Circuits"]], "iqm.benchmarks.circuit_containers.BenchmarkCircuit": [[16, 3, 1, "", "circuit_groups"], [16, 2, 1, "", "get_circuit_group_by_name"], [16, 4, 1, "", "group_names"], [16, 4, 1, "", "groups"], [16, 3, 1, "", "name"], [16, 4, 1, "", "qubit_indices"], [16, 4, 1, "", "qubit_layouts"], [16, 4, 1, "", "qubit_layouts_by_index"], [16, 4, 1, "", "qubits"]], "iqm.benchmarks.circuit_containers.CircuitGroup": [[17, 2, 1, "", "add_circuit"], [17, 4, 1, "", "circuit_names"], [17, 3, 1, "", "circuits"], [17, 2, 1, "", "get_circuits_by_name"], [17, 3, 1, "", "name"], [17, 4, 1, "", "qubit_layouts"], [17, 4, 1, "", "qubit_layouts_by_index"], [17, 4, 1, "", "qubits"]], "iqm.benchmarks.circuit_containers.Circuits": [[18, 3, 1, "", "benchmark_circuits"], [18, 2, 1, "", "get_benchmark_circuits_by_name"]], "iqm.benchmarks.entanglement": [[20, 0, 0, "-", "ghz"], [34, 0, 0, "-", "graph_states"]], "iqm.benchmarks.entanglement.ghz": [[21, 1, 1, "", "GHZBenchmark"], [22, 1, 1, "", "GHZConfiguration"], [23, 5, 1, "", "fidelity_analysis"], [24, 5, 1, "", "fidelity_ghz_coherences"], [25, 5, 1, "", "fidelity_ghz_randomized_measurements"], [26, 5, 1, "", "generate_ghz_linear"], [27, 5, 1, "", "generate_ghz_log_cruz"], [28, 5, 1, "", "generate_ghz_log_mooney"], [29, 5, 1, "", "generate_ghz_spanning_tree"], [30, 5, 1, "", "generate_ghz_star"], [31, 5, 1, "", "get_cx_map"], [32, 5, 1, "", "get_edges"], [33, 5, 1, "", "plot_fidelities"]], "iqm.benchmarks.entanglement.ghz.GHZBenchmark": [[21, 2, 1, "", "add_configuration_to_dataset"], [21, 2, 1, "", "analysis_function"], [21, 2, 1, "", "append_rms"], [21, 2, 1, "", "execute"], [21, 2, 1, "", "generate_coherence_meas_circuits"], [21, 2, 1, "", "generate_native_ghz"], [21, 2, 1, "", "generate_readout_circuit"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration": [[22, 3, 1, "", "benchmark"], [22, 3, 1, "", "cal_url"], [22, 3, 1, "", "custom_qubits_array"], [22, 3, 1, "", "fidelity_routine"], [22, 3, 1, "", "mit_shots"], [22, 3, 1, "", "model_computed_fields"], [22, 3, 1, "", "model_config"], [22, 3, 1, "", "model_fields"], [22, 3, 1, "", "num_RMs"], [22, 3, 1, "", "optimize_sqg"], [22, 3, 1, "", "qiskit_optim_level"], [22, 3, 1, "", "qubit_counts"], [22, 3, 1, "", "rem"], [22, 3, 1, "", "state_generation_routine"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration.iqm.qiskit_iqm.iqm_transpilation": [[22, 3, 1, "", "optimize_single_qubit_gates"]], "iqm.benchmarks.entanglement.graph_states": [[35, 1, 1, "", "GraphStateBenchmark"], [36, 1, 1, "", "GraphStateConfiguration"], [37, 5, 1, "", "find_edges_with_disjoint_neighbors"], [38, 5, 1, "", "generate_graph_state"], [39, 5, 1, "", "generate_minimal_edge_layers"], [40, 5, 1, "", "negativity_analysis"], [41, 5, 1, "", "plot_density_matrix"], [42, 5, 1, "", "plot_max_negativities"], [43, 5, 1, "", "plot_max_negativities_graph"], [44, 5, 1, "", "shadow_tomography_analysis"], [45, 5, 1, "", "state_tomography_analysis"], [46, 5, 1, "", "update_pauli_expectations"]], "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark": [[35, 2, 1, "", "add_all_circuits_to_dataset"], [35, 2, 1, "", "add_all_meta_to_dataset"], [35, 2, 1, "", "analysis_function"], [35, 2, 1, "", "execute"], [35, 2, 1, "", "generate_all_circuit_info_for_graph_state_benchmark"]], "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration": [[36, 3, 1, "", "benchmark"], [36, 3, 1, "", "model_computed_fields"], [36, 3, 1, "", "model_config"], [36, 3, 1, "", "model_fields"], [36, 3, 1, "", "n_median_of_means"], [36, 3, 1, "", "n_random_unitaries"], [36, 3, 1, "", "num_bootstraps"], [36, 3, 1, "", "qubits"], [36, 3, 1, "", "tomography"]], "iqm.benchmarks.optimization": [[49, 0, 0, "-", "qscore"]], "iqm.benchmarks.optimization.qscore": [[50, 1, 1, "", "QScoreBenchmark"], [51, 1, 1, "", "QScoreConfiguration"], [52, 5, 1, "", "calculate_optimal_angles_for_QAOA_p1"], [53, 5, 1, "", "compute_expectation_value"], [54, 5, 1, "", "create_objective_function"], [55, 5, 1, "", "cut_cost_function"], [56, 5, 1, "", "get_optimal_angles"], [57, 5, 1, "", "is_successful"], [58, 5, 1, "", "plot_approximation_ratios"], [59, 5, 1, "", "qscore_analysis"], [60, 5, 1, "", "run_QAOA"]], "iqm.benchmarks.optimization.qscore.QScoreBenchmark": [[50, 2, 1, "", "add_all_meta_to_dataset"], [50, 2, 1, "", "analysis_function"], [50, 2, 1, "", "choose_qubits_custom"], [50, 2, 1, "", "choose_qubits_naive"], [50, 2, 1, "", "execute"], [50, 2, 1, "", "generate_maxcut_ansatz"]], "iqm.benchmarks.optimization.qscore.QScoreConfiguration": [[51, 3, 1, "", "REM"], [51, 3, 1, "", "benchmark"], [51, 3, 1, "", "choose_qubits_routine"], [51, 3, 1, "", "custom_qubits_array"], [51, 3, 1, "", "max_num_nodes"], [51, 3, 1, "", "min_num_nodes"], [51, 3, 1, "", "min_num_qubits"], [51, 3, 1, "", "mit_shots"], [51, 3, 1, "", "model_computed_fields"], [51, 3, 1, "", "model_config"], [51, 3, 1, "", "model_fields"], [51, 3, 1, "", "num_instances"], [51, 3, 1, "", "num_qaoa_layers"], [51, 3, 1, "", "optimize_sqg"], [51, 3, 1, "", "qiskit_optim_level"], [51, 3, 1, "", "qpu_topology"], [51, 3, 1, "", "seed"], [51, 3, 1, "", "use_classically_optimized_angles"], [51, 3, 1, "", "use_virtual_node"]], "iqm.benchmarks.quantum_volume": [[62, 0, 0, "-", "clops"], [68, 0, 0, "-", "quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[63, 1, 1, "", "CLOPSBenchmark"], [64, 1, 1, "", "CLOPSConfiguration"], [65, 5, 1, "", "clops_analysis"], [66, 5, 1, "", "plot_times"], [67, 5, 1, "", "retrieve_clops_elapsed_times"]], "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark": [[63, 2, 1, "", "add_all_meta_to_dataset"], [63, 2, 1, "", "analysis_function"], [63, 2, 1, "", "append_parameterized_unitary"], [63, 2, 1, "", "assign_random_parameters_to_all"], [63, 2, 1, "", "clops_cycle"], [63, 2, 1, "", "execute"], [63, 2, 1, "", "generate_circuit_list"], [63, 2, 1, "", "generate_random_parameters"], [63, 2, 1, "", "generate_single_circuit"], [63, 2, 1, "", "generate_transpiled_clops_templates"]], "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration": [[64, 3, 1, "", "benchmark"], [64, 3, 1, "", "clops_h_bool"], [64, 3, 1, "", "model_computed_fields"], [64, 3, 1, "", "model_config"], [64, 3, 1, "", "model_fields"], [64, 3, 1, "", "num_circuits"], [64, 3, 1, "", "num_shots"], [64, 3, 1, "", "num_updates"], [64, 3, 1, "", "optimize_sqg"], [64, 3, 1, "", "physical_layout"], [64, 3, 1, "", "qiskit_optim_level"], [64, 3, 1, "", "qubits"], [64, 3, 1, "", "routing_method"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[69, 1, 1, "", "QuantumVolumeBenchmark"], [70, 1, 1, "", "QuantumVolumeConfiguration"], [71, 5, 1, "", "compute_heavy_output_probabilities"], [72, 5, 1, "", "cumulative_hop"], [73, 5, 1, "", "cumulative_std"], [74, 5, 1, "", "get_ideal_heavy_outputs"], [75, 5, 1, "", "get_rem_hops"], [76, 5, 1, "", "heavy_projector"], [77, 5, 1, "", "is_successful"], [78, 5, 1, "", "plot_hop_threshold"], [79, 5, 1, "", "qv_analysis"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark": [[69, 2, 1, "", "add_all_circuits_to_dataset"], [69, 2, 1, "", "add_all_meta_to_dataset"], [69, 2, 1, "", "analysis_function"], [69, 2, 1, "", "execute"], [69, 2, 1, "", "generate_circuit_list"], [69, 2, 1, "", "generate_single_circuit"], [69, 2, 1, "", "get_rem_quasidistro"], [69, 2, 1, "", "submit_single_qv_job"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration": [[70, 3, 1, "", "benchmark"], [70, 3, 1, "", "choose_qubits_routine"], [70, 3, 1, "", "custom_qubits_array"], [70, 3, 1, "", "mit_shots"], [70, 3, 1, "", "model_computed_fields"], [70, 3, 1, "", "model_config"], [70, 3, 1, "", "model_fields"], [70, 3, 1, "", "num_circuits"], [70, 3, 1, "", "num_sigmas"], [70, 3, 1, "", "optimize_sqg"], [70, 3, 1, "", "physical_layout"], [70, 3, 1, "", "qiskit_optim_level"], [70, 3, 1, "", "rem"], [70, 3, 1, "", "routing_method"]], "iqm.benchmarks.randomized_benchmarking": [[81, 0, 0, "-", "clifford_rb"], [86, 0, 0, "-", "interleaved_rb"], [91, 0, 0, "-", "mirror_rb"], [101, 0, 0, "-", "multi_lmfit"], [106, 0, 0, "-", "randomized_benchmarking_common"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[82, 0, 0, "-", "clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[83, 1, 1, "", "CliffordRBConfiguration"], [84, 1, 1, "", "CliffordRandomizedBenchmarking"], [85, 5, 1, "", "clifford_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration": [[83, 3, 1, "", "benchmark"], [83, 3, 1, "", "model_computed_fields"], [83, 3, 1, "", "model_config"], [83, 3, 1, "", "model_fields"], [83, 3, 1, "", "num_circuit_samples"], [83, 3, 1, "", "parallel_execution"], [83, 3, 1, "", "qubits_array"], [83, 3, 1, "", "sequence_lengths"], [83, 3, 1, "", "shots"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking": [[84, 2, 1, "", "add_all_circuits_to_dataset"], [84, 2, 1, "", "add_all_metadata_to_dataset"], [84, 2, 1, "", "analysis_function"], [84, 2, 1, "", "execute"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[87, 0, 0, "-", "interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[88, 1, 1, "", "InterleavedRBConfiguration"], [89, 1, 1, "", "InterleavedRandomizedBenchmarking"], [90, 5, 1, "", "interleaved_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration": [[88, 3, 1, "", "interleaved_gate"], [88, 3, 1, "", "interleaved_gate_params"], [88, 3, 1, "", "model_computed_fields"], [88, 3, 1, "", "model_config"], [88, 3, 1, "", "model_fields"], [88, 3, 1, "", "num_circuit_samples"], [88, 3, 1, "", "parallel_execution"], [88, 3, 1, "", "qubits_array"], [88, 3, 1, "", "sequence_lengths"], [88, 3, 1, "", "shots"], [88, 3, 1, "", "simultaneous_fit"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking": [[89, 2, 1, "", "add_all_circuits_to_dataset"], [89, 2, 1, "", "add_all_meta_to_dataset"], [89, 2, 1, "", "analysis_function"], [89, 2, 1, "", "execute"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[92, 0, 0, "-", "mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[93, 1, 1, "", "MirrorRBConfiguration"], [94, 1, 1, "", "MirrorRandomizedBenchmarking"], [95, 5, 1, "", "compute_polarizations"], [96, 5, 1, "", "edge_grab"], [97, 5, 1, "", "generate_fixed_depth_mrb_circuits"], [98, 5, 1, "", "generate_pauli_dressed_mrb_circuits"], [99, 5, 1, "", "list_to_numcircuit_times_numpauli_matrix"], [100, 5, 1, "", "mrb_analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration": [[93, 3, 1, "", "benchmark"], [93, 3, 1, "", "density_2q_gates"], [93, 3, 1, "", "depths_array"], [93, 3, 1, "", "model_computed_fields"], [93, 3, 1, "", "model_config"], [93, 3, 1, "", "model_fields"], [93, 3, 1, "", "num_circuit_samples"], [93, 3, 1, "", "num_pauli_samples"], [93, 3, 1, "", "qiskit_optim_level"], [93, 3, 1, "", "qubits_array"], [93, 3, 1, "", "routing_method"], [93, 3, 1, "", "shots"], [93, 3, 1, "", "two_qubit_gate_ensemble"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking": [[94, 2, 1, "", "add_all_meta_to_dataset"], [94, 2, 1, "", "analysis_function"], [94, 2, 1, "", "execute"], [94, 2, 1, "", "submit_single_mrb_job"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[102, 5, 1, "", "create_multi_dataset_params"], [103, 5, 1, "", "eval_func_single_dataset"], [104, 5, 1, "", "get_param_names_from_func_signature"], [105, 5, 1, "", "multi_dataset_residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[107, 5, 1, "", "compute_inverse_clifford"], [108, 5, 1, "", "estimate_survival_probabilities"], [109, 5, 1, "", "exponential_rb"], [110, 5, 1, "", "fit_decay_lmfit"], [111, 5, 1, "", "generate_all_rb_circuits"], [112, 5, 1, "", "generate_fixed_depth_parallel_rb_circuits"], [113, 5, 1, "", "generate_random_clifford_seq_circuits"], [114, 5, 1, "", "get_survival_probabilities"], [115, 5, 1, "", "import_native_gate_cliffords"], [116, 5, 1, "", "lmfit_minimizer"], [117, 5, 1, "", "plot_rb_decay"], [118, 5, 1, "", "relabel_qubits_array_from_zero"], [119, 5, 1, "", "submit_parallel_rb_job"], [120, 5, 1, "", "submit_sequential_rb_jobs"], [121, 5, 1, "", "survival_probabilities_parallel"], [122, 5, 1, "", "validate_irb_gate"], [123, 5, 1, "", "validate_rb_qubits"]], "iqm.benchmarks.readout_mitigation": [[125, 1, 1, "", "M3IQM"], [126, 5, 1, "", "apply_readout_error_mitigation"], [127, 5, 1, "", "readout_error_m3"]], "iqm.benchmarks.readout_mitigation.M3IQM": [[125, 2, 1, "", "cals_from_system"]], "iqm.benchmarks.utils": [[129, 5, 1, "", "bootstrap_counts"], [130, 5, 1, "", "count_2q_layers"], [131, 5, 1, "", "count_native_gates"], [132, 5, 1, "", "extract_fidelities"], [133, 5, 1, "", "generate_state_tomography_circuits"], [134, 5, 1, "", "get_Pauli_expectation"], [135, 5, 1, "", "get_active_qubits"], [136, 5, 1, "", "get_iqm_backend"], [137, 5, 1, "", "get_measurement_mapping"], [138, 5, 1, "", "get_neighbors_of_edges"], [139, 5, 1, "", "get_tomography_matrix"], [140, 5, 1, "", "marginal_distribution"], [141, 5, 1, "", "median_with_uncertainty"], [142, 5, 1, "", "perform_backend_transpilation"], [143, 5, 1, "", "reduce_to_active_qubits"], [144, 5, 1, "", "remove_directed_duplicates_to_list"], [145, 5, 1, "", "retrieve_all_counts"], [146, 5, 1, "", "retrieve_all_job_metadata"], [147, 5, 1, "", "set_coupling_map"], [148, 5, 1, "", "sort_batches_by_final_layout"], [149, 5, 1, "", "split_sequence_in_chunks"], [150, 5, 1, "", "submit_execute"], [151, 5, 1, "", "timeit"], [152, 5, 1, "", "xrvariable_to_counts"]], "iqm.benchmarks.utils_plots": [[154, 1, 1, "", "GraphPositions"], [155, 5, 1, "", "plot_layout_fidelity_graph"], [156, 5, 1, "", "rx_to_nx_graph"]], "iqm.benchmarks.utils_plots.GraphPositions": [[154, 2, 1, "", "create_positions"], [154, 3, 1, "", "deneb_positions"], [154, 3, 1, "", "garnet_positions"], [154, 3, 1, "", "predefined_stations"]], "iqm.benchmarks.utils_shadows": [[158, 5, 1, "", "CUE"], [159, 5, 1, "", "get_local_shadow"], [160, 5, 1, "", "get_negativity"], [161, 5, 1, "", "local_shadow_tomography"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": 0, "iqm": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 167, 168, 169, 170, 171, 173, 177, 178, 179, 180, 182, 184], "benchmark": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 165, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 182, 184], "benchmarkbas": 3, "benchmarkconfigurationbas": 4, "benchmark_definit": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "benchmarkanalysisresult": 7, "benchmarkobserv": 8, "benchmarkobservationidentifi": 9, "benchmarkrunresult": 10, "add_counts_to_dataset": 11, "default_analysis_funct": 12, "merge_datasets_dac": 13, "show_figur": 14, "circuit_contain": [15, 16, 17, 18], "benchmarkcircuit": 16, "circuitgroup": 17, "circuit": [18, 167, 168, 170, 180], "entangl": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], "ghz": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 167, 168, 171, 172, 173], "ghzbenchmark": 21, "ghzconfigur": 22, "fidelity_analysi": 23, "fidelity_ghz_coher": 24, "fidelity_ghz_randomized_measur": 25, "generate_ghz_linear": 26, "generate_ghz_log_cruz": 27, "generate_ghz_log_moonei": 28, "generate_ghz_spanning_tre": 29, "generate_ghz_star": 30, "get_cx_map": 31, "get_edg": 32, "plot_fidel": 33, "graph_stat": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], "graphstatebenchmark": 35, "graphstateconfigur": 36, "find_edges_with_disjoint_neighbor": 37, "generate_graph_st": 38, "generate_minimal_edge_lay": 39, "negativity_analysi": 40, "plot_density_matrix": 41, "plot_max_neg": 42, "plot_max_negativities_graph": 43, "shadow_tomography_analysi": 44, "state_tomography_analysi": 45, "update_pauli_expect": 46, "logging_config": 47, "optim": [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], "qscore": [49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 171, 178], "qscorebenchmark": 50, "qscoreconfigur": 51, "calculate_optimal_angles_for_qaoa_p1": 52, "compute_expectation_valu": 53, "create_objective_funct": 54, "cut_cost_funct": 55, "get_optimal_angl": 56, "is_success": [57, 77], "plot_approximation_ratio": 58, "qscore_analysi": 59, "run_qaoa": 60, "quantum_volum": [61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79], "clop": [62, 63, 64, 65, 66, 67, 167, 168, 170, 171], "clopsbenchmark": 63, "clopsconfigur": 64, "clops_analysi": 65, "plot_tim": 66, "retrieve_clops_elapsed_tim": 67, "quantumvolumebenchmark": 69, "quantumvolumeconfigur": 70, "compute_heavy_output_prob": 71, "cumulative_hop": 72, "cumulative_std": 73, "get_ideal_heavy_output": 74, "get_rem_hop": 75, "heavy_projector": 76, "plot_hop_threshold": 78, "qv_analysi": 79, "randomized_benchmark": [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123], "clifford_rb": [81, 82, 83, 84, 85], "cliffordrbconfigur": 83, "cliffordrandomizedbenchmark": 84, "clifford_rb_analysi": 85, "interleaved_rb": [86, 87, 88, 89, 90], "interleavedrbconfigur": 88, "interleavedrandomizedbenchmark": 89, "interleaved_rb_analysi": 90, "mirror_rb": [91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "mirrorrbconfigur": 93, "mirrorrandomizedbenchmark": 94, "compute_polar": 95, "edge_grab": 96, "generate_fixed_depth_mrb_circuit": 97, "generate_pauli_dressed_mrb_circuit": 98, "list_to_numcircuit_times_numpauli_matrix": 99, "mrb_analysi": 100, "multi_lmfit": [101, 102, 103, 104, 105], "create_multi_dataset_param": 102, "eval_func_single_dataset": 103, "get_param_names_from_func_signatur": 104, "multi_dataset_residu": 105, "randomized_benchmarking_common": [106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123], "compute_inverse_clifford": 107, "estimate_survival_prob": 108, "exponential_rb": 109, "fit_decay_lmfit": 110, "generate_all_rb_circuit": 111, "generate_fixed_depth_parallel_rb_circuit": 112, "generate_random_clifford_seq_circuit": 113, "get_survival_prob": 114, "import_native_gate_clifford": 115, "lmfit_minim": 116, "plot_rb_decai": 117, "relabel_qubits_array_from_zero": 118, "submit_parallel_rb_job": 119, "submit_sequential_rb_job": 120, "survival_probabilities_parallel": 121, "validate_irb_g": 122, "validate_rb_qubit": 123, "readout_mitig": [124, 125, 126, 127], "m3iqm": 125, "apply_readout_error_mitig": 126, "readout_error_m3": 127, "util": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "bootstrap_count": 129, "count_2q_lay": 130, "count_native_g": 131, "extract_fidel": 132, "generate_state_tomography_circuit": 133, "get_pauli_expect": 134, "get_active_qubit": 135, "get_iqm_backend": 136, "get_measurement_map": 137, "get_neighbors_of_edg": 138, "get_tomography_matrix": 139, "marginal_distribut": 140, "median_with_uncertainti": 141, "perform_backend_transpil": 142, "reduce_to_active_qubit": 143, "remove_directed_duplicates_to_list": 144, "retrieve_all_count": 145, "retrieve_all_job_metadata": 146, "set_coupling_map": 147, "sort_batches_by_final_layout": 148, "split_sequence_in_chunk": 149, "submit_execut": 150, "timeit": 151, "xrvariable_to_count": 152, "utils_plot": [153, 154, 155, 156], "graphposit": 154, "plot_layout_fidelity_graph": 155, "rx_to_nx_graph": 156, "utils_shadow": [157, 158, 159, 160, 161], "cue": 158, "get_local_shadow": 159, "get_neg": 160, "local_shadow_tomographi": 161, "changelog": 162, "version": 162, "2": [162, 164], "29": 162, "28": 162, "27": 162, "26": 162, "25": 162, "24": 162, "23": 162, "22": 162, "21": 162, "20": 162, "19": 162, "18": 162, "17": 162, "16": 162, "15": 162, "14": 162, "13": 162, "12": 162, "11": 162, "10": 162, "9": 162, "8": 162, "7": 162, "6": 162, "5": 162, "4": 162, "3": 162, "1": 162, "0": 162, "develop": [163, 184], "qubit": [164, 174], "clifford": [164, 167, 169, 171], "group": 164, "decomposit": 164, "gener": [164, 170, 177, 179, 180], "1q": [164, 176], "2q": [164, 176], "dump": 164, "pickl": 164, "file": 164, "load": 164, "count": 164, "element": 164, "A": 164, "wai": 164, "work": 164, "out": [164, 175], "invers": 164, "sequenc": 164, "design": 164, "condit": 164, "how": 165, "make": 165, "your": 165, "own": 165, "devic": 166, "spark": 167, "connect": [167, 168], "backend": [167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180], "state": [167, 168, 171, 172, 173, 174], "fidel": [167, 168, 171, 172, 173], "quantum": [167, 168, 171, 179, 180], "volum": [167, 168, 171, 179, 180], "layer": [167, 168, 170], "oper": [167, 168, 170], "per": [167, 168, 170], "second": [167, 168, 170], "random": [167, 169, 171, 176, 177], "interleav": [167, 171, 176], "irb": [167, 176], "q": [167, 168, 178], "score": [167, 168, 178], "summari": [167, 168, 171], "star": 168, "rb": [169, 177], "choos": [169, 170, 171, 174, 175, 176, 177, 178, 179, 180], "defin": [169, 170, 171, 174, 175, 176, 177, 178, 179], "set": [169, 170, 171, 173, 175, 177, 178, 179, 180], "token": [169, 170, 171, 173, 177, 178, 179, 180], "us": [169, 170, 171, 173, 174, 177, 178, 179, 180, 184], "reson": [169, 170, 171, 173, 177, 178, 179, 180], "configur": [169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180], "run": [169, 170, 172, 173, 174, 176, 177, 178, 179, 180], "experi": [169, 170, 174, 175, 176, 177, 178, 179, 180], "perform": [169, 170, 174, 178, 179, 180], "analysi": [169, 170, 174, 178, 179, 180], "list": [170, 177], "all": [170, 174, 175, 177], "kei": [170, 177], "attribut": [170, 174, 177], "dataset": [170, 174, 177], "The": [170, 177], "observ": [170, 175, 177], "object": [170, 177], "contain": [170, 177], "result": [170, 172, 173, 175, 176, 177], "plot": [170, 174, 175, 177, 179, 180], "notebook": [171, 184], "mirror": [171, 177], "greenberg": [172, 173], "horn": [172, 173], "zeiling": [172, 173], "definit": [172, 173], "access": [172, 173, 175], "graph": 174, "exampl": [174, 181], "displai": 174, "maximum": 174, "neg": 174, "pair": 174, "inspect": [174, 180], "avail": 174, "If": 174, "tomographi": [174, 175], "bootstrap": 174, "bia": 174, "differ": 174, "between": 174, "each": 174, "mean": 174, "measur": 174, "sampl": 174, "some": 174, "particular": 174, "pauli": 174, "compress": 175, "gate": [175, 176], "gst": 175, "minim": 175, "execut": 175, "": 175, "examin": 175, "high": 175, "level": 175, "store": 175, "final": 175, "estim": 175, "further": 175, "process": 175, "creat": 175, "custom": 175, "check": 175, "matrix": 175, "correspond": 175, "pi": 175, "rotat": 175, "around": 175, "y": 175, "axi": 175, "analyz": [176, 177], "non": 176, "nativ": 176, "mrb": 177, "qv": [179, 180], "deneb": 180, "content": 182, "indic": 182, "tabl": 182, "licens": 183, "instal": 184, "latest": 184, "releas": 184, "option": 184, "depend": 184, "chang": 184, "character": 184, "physic": 184, "hardwar": 184, "jupyt": 184, "python": 184, "script": 184, "schedul": 184, "ci": 184, "cd": 184, "pipelin": 184}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"API Reference": [[0, "api-reference"]], "iqm.benchmarks": [[1, "module-iqm.benchmarks"]], "iqm.benchmarks.benchmark": [[2, "module-iqm.benchmarks.benchmark"]], "iqm.benchmarks.benchmark.BenchmarkBase": [[3, "iqm-benchmarks-benchmark-benchmarkbase"]], "iqm.benchmarks.benchmark.BenchmarkConfigurationBase": [[4, "iqm-benchmarks-benchmark-benchmarkconfigurationbase"]], "iqm.benchmarks.benchmark_definition": [[5, "module-iqm.benchmarks.benchmark_definition"]], "iqm.benchmarks.benchmark_definition.Benchmark": [[6, "iqm-benchmarks-benchmark-definition-benchmark"]], "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult": [[7, "iqm-benchmarks-benchmark-definition-benchmarkanalysisresult"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservation": [[8, "iqm-benchmarks-benchmark-definition-benchmarkobservation"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier": [[9, "iqm-benchmarks-benchmark-definition-benchmarkobservationidentifier"]], "iqm.benchmarks.benchmark_definition.BenchmarkRunResult": [[10, "iqm-benchmarks-benchmark-definition-benchmarkrunresult"]], "iqm.benchmarks.benchmark_definition.add_counts_to_dataset": [[11, "iqm-benchmarks-benchmark-definition-add-counts-to-dataset"]], "iqm.benchmarks.benchmark_definition.default_analysis_function": [[12, "iqm-benchmarks-benchmark-definition-default-analysis-function"]], "iqm.benchmarks.benchmark_definition.merge_datasets_dac": [[13, "iqm-benchmarks-benchmark-definition-merge-datasets-dac"]], "iqm.benchmarks.benchmark_definition.show_figure": [[14, "iqm-benchmarks-benchmark-definition-show-figure"]], "iqm.benchmarks.circuit_containers": [[15, "module-iqm.benchmarks.circuit_containers"]], "iqm.benchmarks.circuit_containers.BenchmarkCircuit": [[16, "iqm-benchmarks-circuit-containers-benchmarkcircuit"]], "iqm.benchmarks.circuit_containers.CircuitGroup": [[17, "iqm-benchmarks-circuit-containers-circuitgroup"]], "iqm.benchmarks.circuit_containers.Circuits": [[18, "iqm-benchmarks-circuit-containers-circuits"]], "iqm.benchmarks.entanglement": [[19, "module-iqm.benchmarks.entanglement"]], "iqm.benchmarks.entanglement.ghz": [[20, "module-iqm.benchmarks.entanglement.ghz"]], "iqm.benchmarks.entanglement.ghz.GHZBenchmark": [[21, "iqm-benchmarks-entanglement-ghz-ghzbenchmark"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration": [[22, "iqm-benchmarks-entanglement-ghz-ghzconfiguration"]], "iqm.benchmarks.entanglement.ghz.fidelity_analysis": [[23, "iqm-benchmarks-entanglement-ghz-fidelity-analysis"]], "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences": [[24, "iqm-benchmarks-entanglement-ghz-fidelity-ghz-coherences"]], "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements": [[25, "iqm-benchmarks-entanglement-ghz-fidelity-ghz-randomized-measurements"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_linear": [[26, "iqm-benchmarks-entanglement-ghz-generate-ghz-linear"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz": [[27, "iqm-benchmarks-entanglement-ghz-generate-ghz-log-cruz"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney": [[28, "iqm-benchmarks-entanglement-ghz-generate-ghz-log-mooney"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree": [[29, "iqm-benchmarks-entanglement-ghz-generate-ghz-spanning-tree"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_star": [[30, "iqm-benchmarks-entanglement-ghz-generate-ghz-star"]], "iqm.benchmarks.entanglement.ghz.get_cx_map": [[31, "iqm-benchmarks-entanglement-ghz-get-cx-map"]], "iqm.benchmarks.entanglement.ghz.get_edges": [[32, "iqm-benchmarks-entanglement-ghz-get-edges"]], "iqm.benchmarks.entanglement.ghz.plot_fidelities": [[33, "iqm-benchmarks-entanglement-ghz-plot-fidelities"]], "iqm.benchmarks.entanglement.graph_states": [[34, "module-iqm.benchmarks.entanglement.graph_states"]], "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark": [[35, "iqm-benchmarks-entanglement-graph-states-graphstatebenchmark"]], "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration": [[36, "iqm-benchmarks-entanglement-graph-states-graphstateconfiguration"]], "iqm.benchmarks.entanglement.graph_states.find_edges_with_disjoint_neighbors": [[37, "iqm-benchmarks-entanglement-graph-states-find-edges-with-disjoint-neighbors"]], "iqm.benchmarks.entanglement.graph_states.generate_graph_state": [[38, "iqm-benchmarks-entanglement-graph-states-generate-graph-state"]], "iqm.benchmarks.entanglement.graph_states.generate_minimal_edge_layers": [[39, "iqm-benchmarks-entanglement-graph-states-generate-minimal-edge-layers"]], "iqm.benchmarks.entanglement.graph_states.negativity_analysis": [[40, "iqm-benchmarks-entanglement-graph-states-negativity-analysis"]], "iqm.benchmarks.entanglement.graph_states.plot_density_matrix": [[41, "iqm-benchmarks-entanglement-graph-states-plot-density-matrix"]], "iqm.benchmarks.entanglement.graph_states.plot_max_negativities": [[42, "iqm-benchmarks-entanglement-graph-states-plot-max-negativities"]], "iqm.benchmarks.entanglement.graph_states.plot_max_negativities_graph": [[43, "iqm-benchmarks-entanglement-graph-states-plot-max-negativities-graph"]], "iqm.benchmarks.entanglement.graph_states.shadow_tomography_analysis": [[44, "iqm-benchmarks-entanglement-graph-states-shadow-tomography-analysis"]], "iqm.benchmarks.entanglement.graph_states.state_tomography_analysis": [[45, "iqm-benchmarks-entanglement-graph-states-state-tomography-analysis"]], "iqm.benchmarks.entanglement.graph_states.update_pauli_expectations": [[46, "iqm-benchmarks-entanglement-graph-states-update-pauli-expectations"]], "iqm.benchmarks.logging_config": [[47, "module-iqm.benchmarks.logging_config"]], "iqm.benchmarks.optimization": [[48, "module-iqm.benchmarks.optimization"]], "iqm.benchmarks.optimization.qscore": [[49, "module-iqm.benchmarks.optimization.qscore"]], "iqm.benchmarks.optimization.qscore.QScoreBenchmark": [[50, "iqm-benchmarks-optimization-qscore-qscorebenchmark"]], "iqm.benchmarks.optimization.qscore.QScoreConfiguration": [[51, "iqm-benchmarks-optimization-qscore-qscoreconfiguration"]], "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1": [[52, "iqm-benchmarks-optimization-qscore-calculate-optimal-angles-for-qaoa-p1"]], "iqm.benchmarks.optimization.qscore.compute_expectation_value": [[53, "iqm-benchmarks-optimization-qscore-compute-expectation-value"]], "iqm.benchmarks.optimization.qscore.create_objective_function": [[54, "iqm-benchmarks-optimization-qscore-create-objective-function"]], "iqm.benchmarks.optimization.qscore.cut_cost_function": [[55, "iqm-benchmarks-optimization-qscore-cut-cost-function"]], "iqm.benchmarks.optimization.qscore.get_optimal_angles": [[56, "iqm-benchmarks-optimization-qscore-get-optimal-angles"]], "iqm.benchmarks.optimization.qscore.is_successful": [[57, "iqm-benchmarks-optimization-qscore-is-successful"]], "iqm.benchmarks.optimization.qscore.plot_approximation_ratios": [[58, "iqm-benchmarks-optimization-qscore-plot-approximation-ratios"]], "iqm.benchmarks.optimization.qscore.qscore_analysis": [[59, "iqm-benchmarks-optimization-qscore-qscore-analysis"]], "iqm.benchmarks.optimization.qscore.run_QAOA": [[60, "iqm-benchmarks-optimization-qscore-run-qaoa"]], "iqm.benchmarks.quantum_volume": [[61, "module-iqm.benchmarks.quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[62, "module-iqm.benchmarks.quantum_volume.clops"]], "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark": [[63, "iqm-benchmarks-quantum-volume-clops-clopsbenchmark"]], "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration": [[64, "iqm-benchmarks-quantum-volume-clops-clopsconfiguration"]], "iqm.benchmarks.quantum_volume.clops.clops_analysis": [[65, "iqm-benchmarks-quantum-volume-clops-clops-analysis"]], "iqm.benchmarks.quantum_volume.clops.plot_times": [[66, "iqm-benchmarks-quantum-volume-clops-plot-times"]], "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times": [[67, "iqm-benchmarks-quantum-volume-clops-retrieve-clops-elapsed-times"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[68, "module-iqm.benchmarks.quantum_volume.quantum_volume"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark": [[69, "iqm-benchmarks-quantum-volume-quantum-volume-quantumvolumebenchmark"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration": [[70, "iqm-benchmarks-quantum-volume-quantum-volume-quantumvolumeconfiguration"]], "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities": [[71, "iqm-benchmarks-quantum-volume-quantum-volume-compute-heavy-output-probabilities"]], "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop": [[72, "iqm-benchmarks-quantum-volume-quantum-volume-cumulative-hop"]], "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std": [[73, "iqm-benchmarks-quantum-volume-quantum-volume-cumulative-std"]], "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs": [[74, "iqm-benchmarks-quantum-volume-quantum-volume-get-ideal-heavy-outputs"]], "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops": [[75, "iqm-benchmarks-quantum-volume-quantum-volume-get-rem-hops"]], "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector": [[76, "iqm-benchmarks-quantum-volume-quantum-volume-heavy-projector"]], "iqm.benchmarks.quantum_volume.quantum_volume.is_successful": [[77, "iqm-benchmarks-quantum-volume-quantum-volume-is-successful"]], "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold": [[78, "iqm-benchmarks-quantum-volume-quantum-volume-plot-hop-threshold"]], "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis": [[79, "iqm-benchmarks-quantum-volume-quantum-volume-qv-analysis"]], "iqm.benchmarks.randomized_benchmarking": [[80, "module-iqm.benchmarks.randomized_benchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[81, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[82, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration": [[83, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-cliffordrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking": [[84, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-cliffordrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis": [[85, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-clifford-rb-analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[86, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[87, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration": [[88, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleavedrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking": [[89, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleavedrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis": [[90, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleaved-rb-analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[91, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[92, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration": [[93, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mirrorrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking": [[94, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mirrorrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations": [[95, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-compute-polarizations"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab": [[96, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-edge-grab"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits": [[97, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-generate-fixed-depth-mrb-circuits"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits": [[98, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-generate-pauli-dressed-mrb-circuits"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix": [[99, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-list-to-numcircuit-times-numpauli-matrix"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis": [[100, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mrb-analysis"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[101, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params": [[102, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-create-multi-dataset-params"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset": [[103, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-eval-func-single-dataset"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature": [[104, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-get-param-names-from-func-signature"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual": [[105, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-multi-dataset-residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[106, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford": [[107, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-compute-inverse-clifford"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities": [[108, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-estimate-survival-probabilities"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb": [[109, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-exponential-rb"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit": [[110, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-fit-decay-lmfit"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits": [[111, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-all-rb-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits": [[112, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-fixed-depth-parallel-rb-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits": [[113, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-random-clifford-seq-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities": [[114, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-get-survival-probabilities"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords": [[115, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-import-native-gate-cliffords"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer": [[116, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-lmfit-minimizer"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay": [[117, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-plot-rb-decay"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero": [[118, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-relabel-qubits-array-from-zero"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job": [[119, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-submit-parallel-rb-job"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs": [[120, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-submit-sequential-rb-jobs"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel": [[121, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-survival-probabilities-parallel"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate": [[122, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-validate-irb-gate"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits": [[123, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-validate-rb-qubits"]], "iqm.benchmarks.readout_mitigation": [[124, "module-iqm.benchmarks.readout_mitigation"]], "iqm.benchmarks.readout_mitigation.M3IQM": [[125, "iqm-benchmarks-readout-mitigation-m3iqm"]], "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation": [[126, "iqm-benchmarks-readout-mitigation-apply-readout-error-mitigation"]], "iqm.benchmarks.readout_mitigation.readout_error_m3": [[127, "iqm-benchmarks-readout-mitigation-readout-error-m3"]], "iqm.benchmarks.utils": [[128, "module-iqm.benchmarks.utils"]], "iqm.benchmarks.utils.bootstrap_counts": [[129, "iqm-benchmarks-utils-bootstrap-counts"]], "iqm.benchmarks.utils.count_2q_layers": [[130, "iqm-benchmarks-utils-count-2q-layers"]], "iqm.benchmarks.utils.count_native_gates": [[131, "iqm-benchmarks-utils-count-native-gates"]], "iqm.benchmarks.utils.extract_fidelities": [[132, "iqm-benchmarks-utils-extract-fidelities"]], "iqm.benchmarks.utils.generate_state_tomography_circuits": [[133, "iqm-benchmarks-utils-generate-state-tomography-circuits"]], "iqm.benchmarks.utils.get_Pauli_expectation": [[134, "iqm-benchmarks-utils-get-pauli-expectation"]], "iqm.benchmarks.utils.get_active_qubits": [[135, "iqm-benchmarks-utils-get-active-qubits"]], "iqm.benchmarks.utils.get_iqm_backend": [[136, "iqm-benchmarks-utils-get-iqm-backend"]], "iqm.benchmarks.utils.get_measurement_mapping": [[137, "iqm-benchmarks-utils-get-measurement-mapping"]], "iqm.benchmarks.utils.get_neighbors_of_edges": [[138, "iqm-benchmarks-utils-get-neighbors-of-edges"]], "iqm.benchmarks.utils.get_tomography_matrix": [[139, "iqm-benchmarks-utils-get-tomography-matrix"]], "iqm.benchmarks.utils.marginal_distribution": [[140, "iqm-benchmarks-utils-marginal-distribution"]], "iqm.benchmarks.utils.median_with_uncertainty": [[141, "iqm-benchmarks-utils-median-with-uncertainty"]], "iqm.benchmarks.utils.perform_backend_transpilation": [[142, "iqm-benchmarks-utils-perform-backend-transpilation"]], "iqm.benchmarks.utils.reduce_to_active_qubits": [[143, "iqm-benchmarks-utils-reduce-to-active-qubits"]], "iqm.benchmarks.utils.remove_directed_duplicates_to_list": [[144, "iqm-benchmarks-utils-remove-directed-duplicates-to-list"]], "iqm.benchmarks.utils.retrieve_all_counts": [[145, "iqm-benchmarks-utils-retrieve-all-counts"]], "iqm.benchmarks.utils.retrieve_all_job_metadata": [[146, "iqm-benchmarks-utils-retrieve-all-job-metadata"]], "iqm.benchmarks.utils.set_coupling_map": [[147, "iqm-benchmarks-utils-set-coupling-map"]], "iqm.benchmarks.utils.sort_batches_by_final_layout": [[148, "iqm-benchmarks-utils-sort-batches-by-final-layout"]], "iqm.benchmarks.utils.split_sequence_in_chunks": [[149, "iqm-benchmarks-utils-split-sequence-in-chunks"]], "iqm.benchmarks.utils.submit_execute": [[150, "iqm-benchmarks-utils-submit-execute"]], "iqm.benchmarks.utils.timeit": [[151, "iqm-benchmarks-utils-timeit"]], "iqm.benchmarks.utils.xrvariable_to_counts": [[152, "iqm-benchmarks-utils-xrvariable-to-counts"]], "iqm.benchmarks.utils_plots": [[153, "module-iqm.benchmarks.utils_plots"]], "iqm.benchmarks.utils_plots.GraphPositions": [[154, "iqm-benchmarks-utils-plots-graphpositions"]], "iqm.benchmarks.utils_plots.plot_layout_fidelity_graph": [[155, "iqm-benchmarks-utils-plots-plot-layout-fidelity-graph"]], "iqm.benchmarks.utils_plots.rx_to_nx_graph": [[156, "iqm-benchmarks-utils-plots-rx-to-nx-graph"]], "iqm.benchmarks.utils_shadows": [[157, "module-iqm.benchmarks.utils_shadows"]], "iqm.benchmarks.utils_shadows.CUE": [[158, "iqm-benchmarks-utils-shadows-cue"]], "iqm.benchmarks.utils_shadows.get_local_shadow": [[159, "iqm-benchmarks-utils-shadows-get-local-shadow"]], "iqm.benchmarks.utils_shadows.get_negativity": [[160, "iqm-benchmarks-utils-shadows-get-negativity"]], "iqm.benchmarks.utils_shadows.local_shadow_tomography": [[161, "iqm-benchmarks-utils-shadows-local-shadow-tomography"]], "Changelog": [[162, "changelog"]], "Version 2.29": [[162, "version-2-29"]], "Version 2.28": [[162, "version-2-28"]], "Version 2.27": [[162, "version-2-27"]], "Version 2.26": [[162, "version-2-26"]], "Version 2.25": [[162, "version-2-25"]], "Version 2.24": [[162, "version-2-24"]], "Version 2.23": [[162, "version-2-23"]], "Version 2.22": [[162, "version-2-22"]], "Version 2.21": [[162, "version-2-21"]], "Version 2.20": [[162, "version-2-20"]], "Version 2.19": [[162, "version-2-19"]], "Version 2.18": [[162, "version-2-18"]], "Version 2.17": [[162, "version-2-17"]], "Version 2.16": [[162, "version-2-16"]], "Version 2.15": [[162, "version-2-15"]], "Version 2.14": [[162, "version-2-14"]], "Version 2.13": [[162, "version-2-13"]], "Version 2.12": [[162, "version-2-12"]], "Version 2.11": [[162, "version-2-11"]], "Version 2.10": [[162, "version-2-10"]], "Version 2.9": [[162, "version-2-9"]], "Version 2.8": [[162, "version-2-8"]], "Version 2.7": [[162, "version-2-7"]], "Version 2.6": [[162, "version-2-6"]], "Version 2.5": [[162, "version-2-5"]], "Version 2.4": [[162, "version-2-4"]], "Version 2.3": [[162, "version-2-3"]], "Version 2.2": [[162, "version-2-2"]], "Version 2.1": [[162, "version-2-1"]], "Version 2.0": [[162, "version-2-0"]], "Version 1.12": [[162, "version-1-12"]], "Version 1.11": [[162, "version-1-11"]], "Version 1.10": [[162, "version-1-10"]], "Version 1.9": [[162, "version-1-9"]], "Version 1.8": [[162, "version-1-8"]], "Version 1.7": [[162, "version-1-7"]], "Version 1.6": [[162, "version-1-6"]], "Version 1.5": [[162, "version-1-5"]], "Version 1.4": [[162, "version-1-4"]], "Version 1.3": [[162, "version-1-3"]], "Version 1.2": [[162, "version-1-2"]], "Version 1.1": [[162, "version-1-1"]], "Version 1.0": [[162, "version-1-0"]], "Development": [[163, "development"]], "2-Qubit Clifford Group Decomposition": [[164, "qubit-clifford-group-decomposition"]], "Generate the 1Q Clifford group": [[164, "generate-the-1q-clifford-group"]], "Generate the 2Q Clifford group": [[164, "generate-the-2q-clifford-group"]], "Dump on a pickle file": [[164, "dump-on-a-pickle-file"]], "Load": [[164, "load"]], "Count elements": [[164, "count-elements"]], "2Q": [[164, "q"]], "1Q": [[164, "id1"]], "A way to work out the inverse of sequences": [[164, "a-way-to-work-out-the-inverse-of-sequences"]], "2-design condition": [[164, "design-condition"]], "How to make your own benchmark?": [[165, "how-to-make-your-own-benchmark"]], "Devices": [[166, "devices"]], "Benchmarking IQM Spark": [[167, "benchmarking-iqm-spark"]], "Connect to the backend": [[167, "connect-to-the-backend"], [168, "connect-to-the-backend"]], "GHZ state fidelity": [[167, "ghz-state-fidelity"], [168, "ghz-state-fidelity"], [171, "ghz-state-fidelity"]], "Quantum Volume": [[167, "quantum-volume"], [168, "quantum-volume"], [171, "quantum-volume"]], "Circuit Layer Operations Per Second (CLOPS)": [[167, "circuit-layer-operations-per-second-clops"], [168, "circuit-layer-operations-per-second-clops"], [170, "circuit-layer-operations-per-second-clops"]], "Clifford Randomized Benchmarking": [[167, "clifford-randomized-benchmarking"], [171, "clifford-randomized-benchmarking"]], "Interleaved Randomized Benchmarking (IRB)": [[167, "interleaved-randomized-benchmarking-irb"], [176, "interleaved-randomized-benchmarking-irb"]], "Q-Score": [[167, "q-score"], [168, "q-score"], [178, "q-score"]], "Summary": [[167, "summary"], [168, "summary"]], "Benchmarking IQM Star": [[168, "benchmarking-iqm-star"]], "Clifford Randomized Benchmarking (RB)": [[169, "clifford-randomized-benchmarking-rb"]], "Choose (or define) a backend": [[169, "choose-or-define-a-backend"], [170, "choose-or-define-a-backend"], [171, "choose-or-define-a-backend"], [174, "choose-or-define-a-backend"], [175, "choose-or-define-a-backend"], [176, "choose-or-define-a-backend"], [177, "choose-or-define-a-backend"], [178, "choose-or-define-a-backend"], [179, "choose-or-define-a-backend"]], "Set IQM Token if using Resonance.": [[169, "set-iqm-token-if-using-resonance"], [171, "set-iqm-token-if-using-resonance"], [173, "set-iqm-token-if-using-resonance"], [177, "set-iqm-token-if-using-resonance"], [178, "set-iqm-token-if-using-resonance"], [179, "set-iqm-token-if-using-resonance"], [180, "set-iqm-token-if-using-resonance"]], "Randomized Benchmarking Configuration": [[169, "randomized-benchmarking-configuration"]], "Run the experiment": [[169, "run-the-experiment"], [170, "run-the-experiment"], [174, "run-the-experiment"], [177, "run-the-experiment"], [178, "run-the-experiment"], [179, "run-the-experiment"], [180, "run-the-experiment"]], "Perform the analysis": [[169, "perform-the-analysis"]], "Set IQM Token if using Resonance": [[170, "set-iqm-token-if-using-resonance"]], "CLOPS Configuration": [[170, "clops-configuration"]], "Perform Analysis": [[170, "perform-analysis"], [174, "perform-analysis"], [178, "perform-analysis"], [179, "perform-analysis"], [180, "perform-analysis"]], "List all the keys in the attributes of the dataset": [[170, "list-all-the-keys-in-the-attributes-of-the-dataset"], [177, "list-all-the-keys-in-the-attributes-of-the-dataset"]], "The observation object contains the benchmark results": [[170, "the-observation-object-contains-the-benchmark-results"], [177, "the-observation-object-contains-the-benchmark-results"]], "Generate plots": [[170, "generate-plots"], [177, "generate-plots"], [179, "generate-plots"], [180, "generate-plots"]], "IQM Benchmarks: Summary Notebook": [[171, "iqm-benchmarks-summary-notebook"]], "Interleaved Randomized Benchmarking": [[171, "interleaved-randomized-benchmarking"]], "Mirror Randomized Benchmarking": [[171, "mirror-randomized-benchmarking"]], "CLOPS": [[171, "clops"]], "QScore": [[171, "qscore"]], "Greenberger\u2013Horne\u2013Zeilinger (GHZ) State Fidelity": [[172, "greenbergerhornezeilinger-ghz-state-fidelity"], [173, "greenbergerhornezeilinger-ghz-state-fidelity"]], "Definition of the benchmark configuration": [[172, "definition-of-the-benchmark-configuration"], [173, "definition-of-the-benchmark-configuration"]], "Running the benchmark": [[172, "running-the-benchmark"], [173, "running-the-benchmark"]], "Accessing the results": [[172, "accessing-the-results"], [173, "accessing-the-results"]], "Graph State Benchmark Example": [[174, "graph-state-benchmark-example"]], "Graph State Configuration": [[174, "graph-state-configuration"]], "Display the maximum negativity for all qubit pairs": [[174, "display-the-maximum-negativity-for-all-qubit-pairs"]], "Inspect the available plots": [[174, "inspect-the-available-plots"]], "Display all available dataset attributes": [[174, "display-all-available-dataset-attributes"]], "If using state tomography: inspect the bootstrap bias (difference between each bootstrap mean and the measured sample)": [[174, "if-using-state-tomography-inspect-the-bootstrap-bias-difference-between-each-bootstrap-mean-and-the-measured-sample"]], "Inspect a graph state for some particular Pauli measurement": [[174, "inspect-a-graph-state-for-some-particular-pauli-measurement"]], "Compressive Gate Set Tomography (GST)": [[175, "compressive-gate-set-tomography-gst"]], "Minimal GST Experiment configurations": [[175, "minimal-gst-experiment-configurations"]], "Execute GST Experiment(s)": [[175, "execute-gst-experiment-s"]], "Examine the results": [[175, "examine-the-results"]], "High level results stored at result.observations": [[175, "high-level-results-stored-at-result-observations"]], "Accessing the final gate set estimates for further processing": [[175, "accessing-the-final-gate-set-estimates-for-further-processing"]], "Plots": [[175, "plots"]], "Creating a custom gate set": [[175, "creating-a-custom-gate-set"]], "Checking out the process matrix corresponding to the pi rotation around the y-axis": [[175, "checking-out-the-process-matrix-corresponding-to-the-pi-rotation-around-the-y-axis"]], "All plots for the custom gate set": [[175, "all-plots-for-the-custom-gate-set"]], "Interleaved Randomized Benchmarking Configuration": [[176, "interleaved-randomized-benchmarking-configuration"]], "1Q gate IRB": [[176, "q-gate-irb"]], "Run the experiment - 1Q gate IRB": [[176, "run-the-experiment-1q-gate-irb"]], "Analyze the results - 1Q gate IRB": [[176, "analyze-the-results-1q-gate-irb"]], "2Q gate IRB": [[176, "id1"]], "Run the experiment - 2Q gate IRB": [[176, "run-the-experiment-2q-gate-irb"]], "Analyze the results - 2Q gate IRB": [[176, "analyze-the-results-2q-gate-irb"]], "IRB for non-native gate": [[176, "irb-for-non-native-gate"]], "Mirror Randomized Benchmarking (MRB)": [[177, "mirror-randomized-benchmarking-mrb"]], "Mirror RB Configuration": [[177, "mirror-rb-configuration"]], "Analyze the results": [[177, "analyze-the-results"]], "Qscore Configuration": [[178, "qscore-configuration"]], "Quantum Volume (QV)": [[179, "quantum-volume-qv"]], "Quantum Volume Configuration": [[179, "quantum-volume-configuration"], [180, "quantum-volume-configuration"]], "QV on Deneb": [[180, "qv-on-deneb"]], "Choose Deneb as a backend": [[180, "choose-deneb-as-a-backend"]], "Inspect the circuits": [[180, "inspect-the-circuits"]], "Examples": [[181, "examples"]], "IQM Benchmarks": [[182, "iqm-benchmarks"], [184, "iqm-benchmarks"]], "Contents": [[182, "contents"]], "Indices and tables": [[182, "indices-and-tables"]], "License": [[183, "license"]], "Installation (latest release)": [[184, "installation-latest-release"]], "Optional dependencies": [[184, "optional-dependencies"]], "Development installation (latest changes)": [[184, "development-installation-latest-changes"]], "Characterize Physical Hardware": [[184, "characterize-physical-hardware"]], "Using a Jupyter notebook or Python script": [[184, "using-a-jupyter-notebook-or-python-script"]], "Scheduled benchmarks using a CI/CD Pipeline": [[184, "scheduled-benchmarks-using-a-ci-cd-pipeline"]]}, "indexentries": {"iqm.benchmarks": [[1, "module-iqm.benchmarks"]], "module": [[1, "module-iqm.benchmarks"], [2, "module-iqm.benchmarks.benchmark"], [5, "module-iqm.benchmarks.benchmark_definition"], [15, "module-iqm.benchmarks.circuit_containers"], [19, "module-iqm.benchmarks.entanglement"], [20, "module-iqm.benchmarks.entanglement.ghz"], [34, "module-iqm.benchmarks.entanglement.graph_states"], [47, "module-iqm.benchmarks.logging_config"], [48, "module-iqm.benchmarks.optimization"], [49, "module-iqm.benchmarks.optimization.qscore"], [61, "module-iqm.benchmarks.quantum_volume"], [62, "module-iqm.benchmarks.quantum_volume.clops"], [68, "module-iqm.benchmarks.quantum_volume.quantum_volume"], [80, "module-iqm.benchmarks.randomized_benchmarking"], [81, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"], [82, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"], [86, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"], [87, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"], [91, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"], [92, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"], [101, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"], [106, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"], [124, "module-iqm.benchmarks.readout_mitigation"], [128, "module-iqm.benchmarks.utils"], [153, "module-iqm.benchmarks.utils_plots"], [157, "module-iqm.benchmarks.utils_shadows"]], "iqm.benchmarks.benchmark": [[2, "module-iqm.benchmarks.benchmark"]], "benchmarkbase (class in iqm.benchmarks.benchmark)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase"]], "check_requirements() (iqm.benchmarks.benchmark.benchmarkbase static method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.check_requirements"]], "execute_full_benchmark() (iqm.benchmarks.benchmark.benchmarkbase method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.execute_full_benchmark"]], "generate_requirements() (iqm.benchmarks.benchmark.benchmarkbase method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.generate_requirements"]], "name() (iqm.benchmarks.benchmark.benchmarkbase class method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.name"]], "benchmarkconfigurationbase (class in iqm.benchmarks.benchmark)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase"]], "benchmark (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.benchmark"]], "calset_id (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.calset_id"]], "max_circuits_per_batch (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.max_circuits_per_batch"]], "max_gates_per_batch (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.max_gates_per_batch"]], "model_computed_fields (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_computed_fields"]], "model_config (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_config"]], "model_fields (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_fields"]], "physical_layout (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.physical_layout"]], "routing_method (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.routing_method"]], "shots (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.shots"]], "use_dd (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.use_dd"]], "iqm.benchmarks.benchmark_definition": [[5, "module-iqm.benchmarks.benchmark_definition"]], "benchmark (class in iqm.benchmarks.benchmark_definition)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark"]], "analysis_function() (iqm.benchmarks.benchmark_definition.benchmark static method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.analysis_function"]], "analyze() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.analyze"]], "execute() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.execute"]], "name() (iqm.benchmarks.benchmark_definition.benchmark class method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.name"]], "run() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.run"]], "benchmarkanalysisresult (class in iqm.benchmarks.benchmark_definition)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult"]], "from_run_result() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult class method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.from_run_result"]], "plot() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.plot"]], "plot_all() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.plot_all"]], "benchmarkobservation (class in iqm.benchmarks.benchmark_definition)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation"]], "identifier (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.identifier"]], "name (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.name"]], "uncertainty (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.uncertainty"]], "value (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.value"]], "benchmarkobservationidentifier (class in iqm.benchmarks.benchmark_definition)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier"]], "qubit_indices (iqm.benchmarks.benchmark_definition.benchmarkobservationidentifier attribute)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.qubit_indices"]], "string_identifier (iqm.benchmarks.benchmark_definition.benchmarkobservationidentifier property)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.string_identifier"]], "benchmarkrunresult (class in iqm.benchmarks.benchmark_definition)": [[10, "iqm.benchmarks.benchmark_definition.BenchmarkRunResult"]], "add_counts_to_dataset() (in module iqm.benchmarks.benchmark_definition)": [[11, "iqm.benchmarks.benchmark_definition.add_counts_to_dataset"]], "default_analysis_function() (in module iqm.benchmarks.benchmark_definition)": [[12, "iqm.benchmarks.benchmark_definition.default_analysis_function"]], "merge_datasets_dac() (in module iqm.benchmarks.benchmark_definition)": [[13, "iqm.benchmarks.benchmark_definition.merge_datasets_dac"]], "show_figure() (in module iqm.benchmarks.benchmark_definition)": [[14, "iqm.benchmarks.benchmark_definition.show_figure"]], "iqm.benchmarks.circuit_containers": [[15, "module-iqm.benchmarks.circuit_containers"]], "benchmarkcircuit (class in iqm.benchmarks.circuit_containers)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit"]], "circuit_groups (iqm.benchmarks.circuit_containers.benchmarkcircuit attribute)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.circuit_groups"]], "get_circuit_group_by_name() (iqm.benchmarks.circuit_containers.benchmarkcircuit method)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.get_circuit_group_by_name"]], "group_names (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.group_names"]], "groups (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.groups"]], "name (iqm.benchmarks.circuit_containers.benchmarkcircuit attribute)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.name"]], "qubit_indices (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_indices"]], "qubit_layouts (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_layouts"]], "qubit_layouts_by_index (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_layouts_by_index"]], "qubits (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubits"]], "circuitgroup (class in iqm.benchmarks.circuit_containers)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup"]], "add_circuit() (iqm.benchmarks.circuit_containers.circuitgroup method)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.add_circuit"]], "circuit_names (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.circuit_names"]], "circuits (iqm.benchmarks.circuit_containers.circuitgroup attribute)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.circuits"]], "get_circuits_by_name() (iqm.benchmarks.circuit_containers.circuitgroup method)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.get_circuits_by_name"]], "name (iqm.benchmarks.circuit_containers.circuitgroup attribute)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.name"]], "qubit_layouts (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubit_layouts"]], "qubit_layouts_by_index (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubit_layouts_by_index"]], "qubits (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubits"]], "circuits (class in iqm.benchmarks.circuit_containers)": [[18, "iqm.benchmarks.circuit_containers.Circuits"]], "benchmark_circuits (iqm.benchmarks.circuit_containers.circuits attribute)": [[18, "iqm.benchmarks.circuit_containers.Circuits.benchmark_circuits"]], "get_benchmark_circuits_by_name() (iqm.benchmarks.circuit_containers.circuits method)": [[18, "iqm.benchmarks.circuit_containers.Circuits.get_benchmark_circuits_by_name"]], "iqm.benchmarks.entanglement": [[19, "module-iqm.benchmarks.entanglement"]], "iqm.benchmarks.entanglement.ghz": [[20, "module-iqm.benchmarks.entanglement.ghz"]], "ghzbenchmark (class in iqm.benchmarks.entanglement.ghz)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark"]], "add_configuration_to_dataset() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.add_configuration_to_dataset"]], "analysis_function() (iqm.benchmarks.entanglement.ghz.ghzbenchmark static method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.analysis_function"]], "append_rms() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.append_rms"]], "execute() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.execute"]], "generate_coherence_meas_circuits() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_coherence_meas_circuits"]], "generate_native_ghz() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_native_ghz"]], "generate_readout_circuit() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_readout_circuit"]], "ghzconfiguration (class in iqm.benchmarks.entanglement.ghz)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration"]], "benchmark (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.benchmark"]], "cal_url (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.cal_url"]], "custom_qubits_array (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.custom_qubits_array"]], "fidelity_routine (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.fidelity_routine"]], "mit_shots (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.mit_shots"]], "model_computed_fields (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_config"]], "model_fields (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_fields"]], "num_rms (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.num_RMs"]], "optimize_single_qubit_gates (iqm.benchmarks.entanglement.ghz.ghzconfiguration.iqm.qiskit_iqm.iqm_transpilation attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.iqm.qiskit_iqm.iqm_transpilation.optimize_single_qubit_gates"]], "optimize_sqg (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.optimize_sqg"]], "qiskit_optim_level (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.qiskit_optim_level"]], "qubit_counts (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.qubit_counts"]], "rem (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.rem"]], "state_generation_routine (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.state_generation_routine"]], "fidelity_analysis() (in module iqm.benchmarks.entanglement.ghz)": [[23, "iqm.benchmarks.entanglement.ghz.fidelity_analysis"]], "fidelity_ghz_coherences() (in module iqm.benchmarks.entanglement.ghz)": [[24, "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences"]], "fidelity_ghz_randomized_measurements() (in module iqm.benchmarks.entanglement.ghz)": [[25, "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements"]], "generate_ghz_linear() (in module iqm.benchmarks.entanglement.ghz)": [[26, "iqm.benchmarks.entanglement.ghz.generate_ghz_linear"]], "generate_ghz_log_cruz() (in module iqm.benchmarks.entanglement.ghz)": [[27, "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz"]], "generate_ghz_log_mooney() (in module iqm.benchmarks.entanglement.ghz)": [[28, "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney"]], "generate_ghz_spanning_tree() (in module iqm.benchmarks.entanglement.ghz)": [[29, "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree"]], "generate_ghz_star() (in module iqm.benchmarks.entanglement.ghz)": [[30, "iqm.benchmarks.entanglement.ghz.generate_ghz_star"]], "get_cx_map() (in module iqm.benchmarks.entanglement.ghz)": [[31, "iqm.benchmarks.entanglement.ghz.get_cx_map"]], "get_edges() (in module iqm.benchmarks.entanglement.ghz)": [[32, "iqm.benchmarks.entanglement.ghz.get_edges"]], "plot_fidelities() (in module iqm.benchmarks.entanglement.ghz)": [[33, "iqm.benchmarks.entanglement.ghz.plot_fidelities"]], "iqm.benchmarks.entanglement.graph_states": [[34, "module-iqm.benchmarks.entanglement.graph_states"]], "graphstatebenchmark (class in iqm.benchmarks.entanglement.graph_states)": [[35, "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark"]], "add_all_circuits_to_dataset() (iqm.benchmarks.entanglement.graph_states.graphstatebenchmark method)": [[35, "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.entanglement.graph_states.graphstatebenchmark method)": [[35, "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.entanglement.graph_states.graphstatebenchmark static method)": [[35, "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark.analysis_function"]], "execute() (iqm.benchmarks.entanglement.graph_states.graphstatebenchmark method)": [[35, "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark.execute"]], "generate_all_circuit_info_for_graph_state_benchmark() (iqm.benchmarks.entanglement.graph_states.graphstatebenchmark method)": [[35, "iqm.benchmarks.entanglement.graph_states.GraphStateBenchmark.generate_all_circuit_info_for_graph_state_benchmark"]], "graphstateconfiguration (class in iqm.benchmarks.entanglement.graph_states)": [[36, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration"]], "benchmark (iqm.benchmarks.entanglement.graph_states.graphstateconfiguration attribute)": [[36, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.benchmark"]], "model_computed_fields (iqm.benchmarks.entanglement.graph_states.graphstateconfiguration attribute)": [[36, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.entanglement.graph_states.graphstateconfiguration attribute)": [[36, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.model_config"]], "model_fields (iqm.benchmarks.entanglement.graph_states.graphstateconfiguration attribute)": [[36, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.model_fields"]], "n_median_of_means (iqm.benchmarks.entanglement.graph_states.graphstateconfiguration attribute)": [[36, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.n_median_of_means"]], "n_random_unitaries (iqm.benchmarks.entanglement.graph_states.graphstateconfiguration attribute)": [[36, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.n_random_unitaries"]], "num_bootstraps (iqm.benchmarks.entanglement.graph_states.graphstateconfiguration attribute)": [[36, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.num_bootstraps"]], "qubits (iqm.benchmarks.entanglement.graph_states.graphstateconfiguration attribute)": [[36, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.qubits"]], "tomography (iqm.benchmarks.entanglement.graph_states.graphstateconfiguration attribute)": [[36, "iqm.benchmarks.entanglement.graph_states.GraphStateConfiguration.tomography"]], "find_edges_with_disjoint_neighbors() (in module iqm.benchmarks.entanglement.graph_states)": [[37, "iqm.benchmarks.entanglement.graph_states.find_edges_with_disjoint_neighbors"]], "generate_graph_state() (in module iqm.benchmarks.entanglement.graph_states)": [[38, "iqm.benchmarks.entanglement.graph_states.generate_graph_state"]], "generate_minimal_edge_layers() (in module iqm.benchmarks.entanglement.graph_states)": [[39, "iqm.benchmarks.entanglement.graph_states.generate_minimal_edge_layers"]], "negativity_analysis() (in module iqm.benchmarks.entanglement.graph_states)": [[40, "iqm.benchmarks.entanglement.graph_states.negativity_analysis"]], "plot_density_matrix() (in module iqm.benchmarks.entanglement.graph_states)": [[41, "iqm.benchmarks.entanglement.graph_states.plot_density_matrix"]], "plot_max_negativities() (in module iqm.benchmarks.entanglement.graph_states)": [[42, "iqm.benchmarks.entanglement.graph_states.plot_max_negativities"]], "plot_max_negativities_graph() (in module iqm.benchmarks.entanglement.graph_states)": [[43, "iqm.benchmarks.entanglement.graph_states.plot_max_negativities_graph"]], "shadow_tomography_analysis() (in module iqm.benchmarks.entanglement.graph_states)": [[44, "iqm.benchmarks.entanglement.graph_states.shadow_tomography_analysis"]], "state_tomography_analysis() (in module iqm.benchmarks.entanglement.graph_states)": [[45, "iqm.benchmarks.entanglement.graph_states.state_tomography_analysis"]], "update_pauli_expectations() (in module iqm.benchmarks.entanglement.graph_states)": [[46, "iqm.benchmarks.entanglement.graph_states.update_pauli_expectations"]], "iqm.benchmarks.logging_config": [[47, "module-iqm.benchmarks.logging_config"]], "iqm.benchmarks.optimization": [[48, "module-iqm.benchmarks.optimization"]], "iqm.benchmarks.optimization.qscore": [[49, "module-iqm.benchmarks.optimization.qscore"]], "qscorebenchmark (class in iqm.benchmarks.optimization.qscore)": [[50, "iqm.benchmarks.optimization.qscore.QScoreBenchmark"]], "add_all_meta_to_dataset() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[50, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.optimization.qscore.qscorebenchmark static method)": [[50, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.analysis_function"]], "choose_qubits_custom() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[50, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.choose_qubits_custom"]], "choose_qubits_naive() (iqm.benchmarks.optimization.qscore.qscorebenchmark static method)": [[50, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.choose_qubits_naive"]], "execute() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[50, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.execute"]], "generate_maxcut_ansatz() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[50, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.generate_maxcut_ansatz"]], "qscoreconfiguration (class in iqm.benchmarks.optimization.qscore)": [[51, "iqm.benchmarks.optimization.qscore.QScoreConfiguration"]], "rem (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[51, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.REM"]], "benchmark (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[51, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.benchmark"]], "choose_qubits_routine (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[51, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.choose_qubits_routine"]], "custom_qubits_array (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[51, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.custom_qubits_array"]], "max_num_nodes (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[51, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.max_num_nodes"]], "min_num_nodes (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[51, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.min_num_nodes"]], "min_num_qubits (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[51, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.min_num_qubits"]], "mit_shots (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[51, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.mit_shots"]], "model_computed_fields (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[51, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[51, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_config"]], "model_fields (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[51, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_fields"]], "num_instances (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[51, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.num_instances"]], "num_qaoa_layers (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[51, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.num_qaoa_layers"]], "optimize_sqg (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[51, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.optimize_sqg"]], "qiskit_optim_level (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[51, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.qiskit_optim_level"]], "qpu_topology (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[51, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.qpu_topology"]], "seed (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[51, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.seed"]], "use_classically_optimized_angles (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[51, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.use_classically_optimized_angles"]], "use_virtual_node (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[51, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.use_virtual_node"]], "calculate_optimal_angles_for_qaoa_p1() (in module iqm.benchmarks.optimization.qscore)": [[52, "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1"]], "compute_expectation_value() (in module iqm.benchmarks.optimization.qscore)": [[53, "iqm.benchmarks.optimization.qscore.compute_expectation_value"]], "create_objective_function() (in module iqm.benchmarks.optimization.qscore)": [[54, "iqm.benchmarks.optimization.qscore.create_objective_function"]], "cut_cost_function() (in module iqm.benchmarks.optimization.qscore)": [[55, "iqm.benchmarks.optimization.qscore.cut_cost_function"]], "get_optimal_angles() (in module iqm.benchmarks.optimization.qscore)": [[56, "iqm.benchmarks.optimization.qscore.get_optimal_angles"]], "is_successful() (in module iqm.benchmarks.optimization.qscore)": [[57, "iqm.benchmarks.optimization.qscore.is_successful"]], "plot_approximation_ratios() (in module iqm.benchmarks.optimization.qscore)": [[58, "iqm.benchmarks.optimization.qscore.plot_approximation_ratios"]], "qscore_analysis() (in module iqm.benchmarks.optimization.qscore)": [[59, "iqm.benchmarks.optimization.qscore.qscore_analysis"]], "run_qaoa() (in module iqm.benchmarks.optimization.qscore)": [[60, "iqm.benchmarks.optimization.qscore.run_QAOA"]], "iqm.benchmarks.quantum_volume": [[61, "module-iqm.benchmarks.quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[62, "module-iqm.benchmarks.quantum_volume.clops"]], "clopsbenchmark (class in iqm.benchmarks.quantum_volume.clops)": [[63, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark"]], "add_all_meta_to_dataset() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[63, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark static method)": [[63, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.analysis_function"]], "append_parameterized_unitary() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[63, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.append_parameterized_unitary"]], "assign_random_parameters_to_all() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[63, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.assign_random_parameters_to_all"]], "clops_cycle() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[63, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.clops_cycle"]], "execute() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[63, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.execute"]], "generate_circuit_list() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[63, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_circuit_list"]], "generate_random_parameters() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[63, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_random_parameters"]], "generate_single_circuit() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[63, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_single_circuit"]], "generate_transpiled_clops_templates() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[63, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_transpiled_clops_templates"]], "clopsconfiguration (class in iqm.benchmarks.quantum_volume.clops)": [[64, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration"]], "benchmark (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[64, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.benchmark"]], "clops_h_bool (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[64, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.clops_h_bool"]], "model_computed_fields (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[64, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[64, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_config"]], "model_fields (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[64, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_fields"]], "num_circuits (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[64, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_circuits"]], "num_shots (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[64, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_shots"]], "num_updates (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[64, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_updates"]], "optimize_sqg (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[64, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.optimize_sqg"]], "physical_layout (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[64, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.physical_layout"]], "qiskit_optim_level (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[64, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.qiskit_optim_level"]], "qubits (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[64, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.qubits"]], "routing_method (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[64, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.routing_method"]], "clops_analysis() (in module iqm.benchmarks.quantum_volume.clops)": [[65, "iqm.benchmarks.quantum_volume.clops.clops_analysis"]], "plot_times() (in module iqm.benchmarks.quantum_volume.clops)": [[66, "iqm.benchmarks.quantum_volume.clops.plot_times"]], "retrieve_clops_elapsed_times() (in module iqm.benchmarks.quantum_volume.clops)": [[67, "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[68, "module-iqm.benchmarks.quantum_volume.quantum_volume"]], "quantumvolumebenchmark (class in iqm.benchmarks.quantum_volume.quantum_volume)": [[69, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark"]], "add_all_circuits_to_dataset() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[69, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[69, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark static method)": [[69, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.analysis_function"]], "execute() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[69, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.execute"]], "generate_circuit_list() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[69, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.generate_circuit_list"]], "generate_single_circuit() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark static method)": [[69, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.generate_single_circuit"]], "get_rem_quasidistro() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[69, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.get_rem_quasidistro"]], "submit_single_qv_job() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[69, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.submit_single_qv_job"]], "quantumvolumeconfiguration (class in iqm.benchmarks.quantum_volume.quantum_volume)": [[70, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration"]], "benchmark (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.benchmark"]], "choose_qubits_routine (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.choose_qubits_routine"]], "custom_qubits_array (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.custom_qubits_array"]], "mit_shots (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.mit_shots"]], "model_computed_fields (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_config"]], "model_fields (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_fields"]], "num_circuits (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.num_circuits"]], "num_sigmas (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.num_sigmas"]], "optimize_sqg (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.optimize_sqg"]], "physical_layout (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.physical_layout"]], "qiskit_optim_level (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.qiskit_optim_level"]], "rem (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.rem"]], "routing_method (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[70, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.routing_method"]], "compute_heavy_output_probabilities() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[71, "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities"]], "cumulative_hop() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[72, "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop"]], "cumulative_std() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[73, "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std"]], "get_ideal_heavy_outputs() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[74, "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs"]], "get_rem_hops() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[75, "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops"]], "heavy_projector() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[76, "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector"]], "is_successful() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[77, "iqm.benchmarks.quantum_volume.quantum_volume.is_successful"]], "plot_hop_threshold() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[78, "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold"]], "qv_analysis() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[79, "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis"]], "iqm.benchmarks.randomized_benchmarking": [[80, "module-iqm.benchmarks.randomized_benchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[81, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[82, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"]], "cliffordrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[83, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration"]], "benchmark (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[83, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.benchmark"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[83, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[83, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[83, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[83, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.num_circuit_samples"]], "parallel_execution (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[83, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.parallel_execution"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[83, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.qubits_array"]], "sequence_lengths (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[83, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.sequence_lengths"]], "shots (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[83, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.shots"]], "cliffordrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[84, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking"]], "add_all_circuits_to_dataset() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[84, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.add_all_circuits_to_dataset"]], "add_all_metadata_to_dataset() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[84, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.add_all_metadata_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking static method)": [[84, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[84, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.execute"]], "clifford_rb_analysis() (in module iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[85, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[86, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[87, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"]], "interleavedrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[88, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration"]], "interleaved_gate (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[88, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.interleaved_gate"]], "interleaved_gate_params (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[88, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.interleaved_gate_params"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[88, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[88, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[88, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[88, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.num_circuit_samples"]], "parallel_execution (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[88, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.parallel_execution"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[88, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.qubits_array"]], "sequence_lengths (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[88, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.sequence_lengths"]], "shots (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[88, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.shots"]], "simultaneous_fit (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[88, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.simultaneous_fit"]], "interleavedrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[89, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking"]], "add_all_circuits_to_dataset() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[89, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[89, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking static method)": [[89, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[89, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.execute"]], "interleaved_rb_analysis() (in module iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[90, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[91, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[92, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"]], "mirrorrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[93, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration"]], "benchmark (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[93, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.benchmark"]], "density_2q_gates (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[93, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.density_2q_gates"]], "depths_array (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[93, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.depths_array"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[93, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[93, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[93, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[93, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.num_circuit_samples"]], "num_pauli_samples (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[93, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.num_pauli_samples"]], "qiskit_optim_level (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[93, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.qiskit_optim_level"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[93, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.qubits_array"]], "routing_method (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[93, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.routing_method"]], "shots (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[93, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.shots"]], "two_qubit_gate_ensemble (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[93, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.two_qubit_gate_ensemble"]], "mirrorrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[94, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking"]], "add_all_meta_to_dataset() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[94, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking static method)": [[94, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[94, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.execute"]], "submit_single_mrb_job() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[94, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.submit_single_mrb_job"]], "compute_polarizations() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[95, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations"]], "edge_grab() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[96, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab"]], "generate_fixed_depth_mrb_circuits() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[97, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits"]], "generate_pauli_dressed_mrb_circuits() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[98, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits"]], "list_to_numcircuit_times_numpauli_matrix() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[99, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix"]], "mrb_analysis() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[100, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[101, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"]], "create_multi_dataset_params() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[102, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params"]], "eval_func_single_dataset() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[103, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset"]], "get_param_names_from_func_signature() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[104, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature"]], "multi_dataset_residual() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[105, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[106, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"]], "compute_inverse_clifford() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[107, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford"]], "estimate_survival_probabilities() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[108, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities"]], "exponential_rb() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[109, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb"]], "fit_decay_lmfit() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[110, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit"]], "generate_all_rb_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[111, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits"]], "generate_fixed_depth_parallel_rb_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[112, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits"]], "generate_random_clifford_seq_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[113, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits"]], "get_survival_probabilities() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[114, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities"]], "import_native_gate_cliffords() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[115, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords"]], "lmfit_minimizer() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[116, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer"]], "plot_rb_decay() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[117, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay"]], "relabel_qubits_array_from_zero() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[118, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero"]], "submit_parallel_rb_job() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[119, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job"]], "submit_sequential_rb_jobs() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[120, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs"]], "survival_probabilities_parallel() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[121, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel"]], "validate_irb_gate() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[122, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate"]], "validate_rb_qubits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[123, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits"]], "iqm.benchmarks.readout_mitigation": [[124, "module-iqm.benchmarks.readout_mitigation"]], "m3iqm (class in iqm.benchmarks.readout_mitigation)": [[125, "iqm.benchmarks.readout_mitigation.M3IQM"]], "cals_from_system() (iqm.benchmarks.readout_mitigation.m3iqm method)": [[125, "iqm.benchmarks.readout_mitigation.M3IQM.cals_from_system"]], "apply_readout_error_mitigation() (in module iqm.benchmarks.readout_mitigation)": [[126, "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation"]], "readout_error_m3() (in module iqm.benchmarks.readout_mitigation)": [[127, "iqm.benchmarks.readout_mitigation.readout_error_m3"]], "iqm.benchmarks.utils": [[128, "module-iqm.benchmarks.utils"]], "bootstrap_counts() (in module iqm.benchmarks.utils)": [[129, "iqm.benchmarks.utils.bootstrap_counts"]], "count_2q_layers() (in module iqm.benchmarks.utils)": [[130, "iqm.benchmarks.utils.count_2q_layers"]], "count_native_gates() (in module iqm.benchmarks.utils)": [[131, "iqm.benchmarks.utils.count_native_gates"]], "extract_fidelities() (in module iqm.benchmarks.utils)": [[132, "iqm.benchmarks.utils.extract_fidelities"]], "generate_state_tomography_circuits() (in module iqm.benchmarks.utils)": [[133, "iqm.benchmarks.utils.generate_state_tomography_circuits"]], "get_pauli_expectation() (in module iqm.benchmarks.utils)": [[134, "iqm.benchmarks.utils.get_Pauli_expectation"]], "get_active_qubits() (in module iqm.benchmarks.utils)": [[135, "iqm.benchmarks.utils.get_active_qubits"]], "get_iqm_backend() (in module iqm.benchmarks.utils)": [[136, "iqm.benchmarks.utils.get_iqm_backend"]], "get_measurement_mapping() (in module iqm.benchmarks.utils)": [[137, "iqm.benchmarks.utils.get_measurement_mapping"]], "get_neighbors_of_edges() (in module iqm.benchmarks.utils)": [[138, "iqm.benchmarks.utils.get_neighbors_of_edges"]], "get_tomography_matrix() (in module iqm.benchmarks.utils)": [[139, "iqm.benchmarks.utils.get_tomography_matrix"]], "marginal_distribution() (in module iqm.benchmarks.utils)": [[140, "iqm.benchmarks.utils.marginal_distribution"]], "median_with_uncertainty() (in module iqm.benchmarks.utils)": [[141, "iqm.benchmarks.utils.median_with_uncertainty"]], "perform_backend_transpilation() (in module iqm.benchmarks.utils)": [[142, "iqm.benchmarks.utils.perform_backend_transpilation"]], "reduce_to_active_qubits() (in module iqm.benchmarks.utils)": [[143, "iqm.benchmarks.utils.reduce_to_active_qubits"]], "remove_directed_duplicates_to_list() (in module iqm.benchmarks.utils)": [[144, "iqm.benchmarks.utils.remove_directed_duplicates_to_list"]], "retrieve_all_counts() (in module iqm.benchmarks.utils)": [[145, "iqm.benchmarks.utils.retrieve_all_counts"]], "retrieve_all_job_metadata() (in module iqm.benchmarks.utils)": [[146, "iqm.benchmarks.utils.retrieve_all_job_metadata"]], "set_coupling_map() (in module iqm.benchmarks.utils)": [[147, "iqm.benchmarks.utils.set_coupling_map"]], "sort_batches_by_final_layout() (in module iqm.benchmarks.utils)": [[148, "iqm.benchmarks.utils.sort_batches_by_final_layout"]], "split_sequence_in_chunks() (in module iqm.benchmarks.utils)": [[149, "iqm.benchmarks.utils.split_sequence_in_chunks"]], "submit_execute() (in module iqm.benchmarks.utils)": [[150, "iqm.benchmarks.utils.submit_execute"]], "timeit() (in module iqm.benchmarks.utils)": [[151, "iqm.benchmarks.utils.timeit"]], "xrvariable_to_counts() (in module iqm.benchmarks.utils)": [[152, "iqm.benchmarks.utils.xrvariable_to_counts"]], "iqm.benchmarks.utils_plots": [[153, "module-iqm.benchmarks.utils_plots"]], "graphpositions (class in iqm.benchmarks.utils_plots)": [[154, "iqm.benchmarks.utils_plots.GraphPositions"]], "create_positions() (iqm.benchmarks.utils_plots.graphpositions static method)": [[154, "iqm.benchmarks.utils_plots.GraphPositions.create_positions"]], "deneb_positions (iqm.benchmarks.utils_plots.graphpositions attribute)": [[154, "iqm.benchmarks.utils_plots.GraphPositions.deneb_positions"]], "garnet_positions (iqm.benchmarks.utils_plots.graphpositions attribute)": [[154, "iqm.benchmarks.utils_plots.GraphPositions.garnet_positions"]], "predefined_stations (iqm.benchmarks.utils_plots.graphpositions attribute)": [[154, "iqm.benchmarks.utils_plots.GraphPositions.predefined_stations"]], "plot_layout_fidelity_graph() (in module iqm.benchmarks.utils_plots)": [[155, "iqm.benchmarks.utils_plots.plot_layout_fidelity_graph"]], "rx_to_nx_graph() (in module iqm.benchmarks.utils_plots)": [[156, "iqm.benchmarks.utils_plots.rx_to_nx_graph"]], "iqm.benchmarks.utils_shadows": [[157, "module-iqm.benchmarks.utils_shadows"]], "cue() (in module iqm.benchmarks.utils_shadows)": [[158, "iqm.benchmarks.utils_shadows.CUE"]], "get_local_shadow() (in module iqm.benchmarks.utils_shadows)": [[159, "iqm.benchmarks.utils_shadows.get_local_shadow"]], "get_negativity() (in module iqm.benchmarks.utils_shadows)": [[160, "iqm.benchmarks.utils_shadows.get_negativity"]], "local_shadow_tomography() (in module iqm.benchmarks.utils_shadows)": [[161, "iqm.benchmarks.utils_shadows.local_shadow_tomography"]]}})