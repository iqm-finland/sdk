name: Update the mirror from PyPI Packages

on:
  push:
    branches:
      - main
    paths:
      - 'sdk.txt'
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:
    # Allow manual triggering

jobs:
  mirror-packages:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: astral-sh/setup-uv@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          uv pip install pip packaging wheel

      - name: Download source distributions
        id: download-packages
        run: |
          # Create temp directory
          mkdir -p ./temp

          if [ ! -f "sdk.txt" ]; then
            echo "Error: sdk.txt file not found!"
            exit 1
          fi

          # Do not mirror IQM Benchmarks and Cirq IQM
          sed -i '/^iqm-benchmarks/d; /^cirq-iqm/d; /^#/d' sdk.txt

          # Download all source distributions
          if ! pip download --no-deps --no-binary=:all: -r sdk.txt -d ./temp; then
            echo "Error: Failed to download some packages."
            exit 1
          fi

          # Restore sdk.txt
          git checkout sdk.txt

          # Flag to track if any changes were made
          CHANGES=false

          # Extract and update each package
          for SDIST_FILE in ./temp/*.tar.gz; do
            [ -e "$SDIST_FILE" ] || { echo "Error: No source distribution found!"; exit 1; }

            PKG_NAME=$(basename "$SDIST_FILE" | cut -d '-' -f1)
            echo "Processing package: $PKG_NAME"

            # Create package directory if it doesn't exist
            PKG_DIR="$PKG_NAME"
            mkdir -p "$PKG_DIR"

            # Extract source distribution
            mkdir -p ./temp/extract
            tar -xzf "$SDIST_FILE" -C ./temp/extract
            SRC_DIR=$(find ./temp/extract -maxdepth 1 -type d | grep -v "^./temp/extract$" | head -n 1)

            if [ -z "$SRC_DIR" ]; then
              echo "Error: No source directory found in archive for $PKG_NAME."
              exit 1
            fi

            # Clear previous version and copy new files
            rm -rf "$PKG_DIR"/*
            cp -r "$SRC_DIR"/* "$PKG_DIR"/
            CHANGES=true

            # Clean up extracted files
            rm -rf ./temp/extract
          done

          # Clean up temp directory
          rm -rf ./temp

          echo "changes=$CHANGES" >> $GITHUB_OUTPUT

      - name: Create Pull Request if changes detected
        if: steps.download-packages.outputs.changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Update the source code mirror"
          title: "Update the source code mirror"
          body: |
            This PR updates the mirrored PyPI packages according to sdk.txt.

            Automated update via GitHub Actions workflow.
          branch: update-mirror
          delete-branch: true